/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export class ExternalObject<T> {
  readonly "": {
    readonly "": unique symbol;
    [K: symbol]: T;
  };
}
export function mdxCompile(
  value: string,
  option: Buffer,
  signal?: AbortSignal | undefined | null
): Promise<unknown>;
export function mdxCompileSync(value: string, option: Buffer): string;
export function minify(
  input: Buffer,
  opts: Buffer,
  signal?: AbortSignal | undefined | null
): Promise<TransformOutput>;
export function minifySync(input: Buffer, opts: Buffer): TransformOutput;
export function parse(
  src: string,
  options: Buffer,
  filename?: string | undefined | null,
  signal?: AbortSignal | undefined | null
): Promise<string>;
export function transform(
  src: string | Buffer | undefined,
  isModule: boolean,
  options: Buffer,
  signal?: AbortSignal | undefined | null
): Promise<unknown>;
export function transformSync(
  src: string | Buffer | undefined,
  isModule: boolean,
  options: Buffer
): object;
export function startTurboDev(options: Buffer): Promise<void>;
export function createTurboTasks(
  memoryLimit?: number | undefined | null
): ExternalObject<Arc>;
export function runTurboTracing(
  options: Buffer,
  turboTasks?: ExternalObject<Arc> | undefined | null
): Promise<Array<string>>;
export function getTargetTriple(): string;
/**
 * Initialize tracing subscriber to emit traces. This configures subscribers
 * for Trace Event Format (https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU/preview).
 */
export function initCustomTraceSubscriber(
  traceOutFilePath?: string | undefined | null
): ExternalObject<RefCell>;
/**
 * Teardown currently running tracing subscriber to flush out remaining traces.
 * This should be called when parent node.js process exits, otherwise generated
 * trace may drop traces in the buffer.
 */
export function teardownTraceSubscriber(
  guardExternal: ExternalObject<RefCell>
): void;
