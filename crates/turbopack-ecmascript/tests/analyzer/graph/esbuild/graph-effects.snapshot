[
    Call {
        func: FreeVar(
            Require,
        ),
        args: [
            Value(
                Constant(
                    Str(
                        Word(
                            Atom('path' type=static),
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                12,
            ),
            hi: BytePos(
                27,
            ),
            ctxt: #0,
        },
    },
    Call {
        func: FreeVar(
            Require,
        ),
        args: [
            Value(
                Constant(
                    Str(
                        Word(
                            Atom('path' type=static),
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                41,
            ),
            hi: BytePos(
                56,
            ),
            ctxt: #0,
        },
    },
    Call {
        func: FreeVar(
            Require,
        ),
        args: [
            Value(
                Constant(
                    Str(
                        Word(
                            Atom('os' type=inline),
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    2,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                67,
            ),
            hi: BytePos(
                80,
            ),
            ctxt: #0,
        },
    },
    Member {
        obj: FreeVar(
            NodeProcess,
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('platform' type=dynamic),
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    5,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Tpl,
            ),
            Tpl(
                Exprs(
                    0,
                ),
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1005,
            ),
            hi: BytePos(
                1021,
            ),
            ctxt: #0,
        },
    },
    Member {
        obj: Variable(
            (
                Atom('os' type=inline),
                #2,
            ),
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('arch' type=inline),
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    5,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Tpl,
            ),
            Tpl(
                Exprs(
                    1,
                ),
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1025,
            ),
            hi: BytePos(
                1032,
            ),
            ctxt: #0,
        },
    },
    MemberCall {
        obj: Variable(
            (
                Atom('os' type=inline),
                #2,
            ),
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('arch' type=inline),
                ),
            ),
        ),
        args: [],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    5,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Tpl,
            ),
            Tpl(
                Exprs(
                    1,
                ),
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1025,
            ),
            hi: BytePos(
                1034,
            ),
            ctxt: #0,
        },
    },
    Member {
        obj: Variable(
            (
                Atom('os' type=inline),
                #2,
            ),
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('endianness' type=dynamic),
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    5,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Tpl,
            ),
            Tpl(
                Exprs(
                    2,
                ),
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1038,
            ),
            hi: BytePos(
                1051,
            ),
            ctxt: #0,
        },
    },
    MemberCall {
        obj: Variable(
            (
                Atom('os' type=inline),
                #2,
            ),
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('endianness' type=dynamic),
                ),
            ),
        ),
        args: [],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    5,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Tpl,
            ),
            Tpl(
                Exprs(
                    2,
                ),
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1038,
            ),
            hi: BytePos(
                1053,
            ),
            ctxt: #0,
        },
    },
    Member {
        obj: Variable(
            (
                Atom('knownWindowsPackages' type=dynamic),
                #2,
            ),
        ),
        prop: Variable(
            (
                Atom('platformKey' type=dynamic),
                #3,
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    5,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    3,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Cons,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1112,
            ),
            hi: BytePos(
                1145,
            ),
            ctxt: #0,
        },
    },
    Member {
        obj: Variable(
            (
                Atom('knownUnixlikePackages' type=dynamic),
                #2,
            ),
        ),
        prop: Variable(
            (
                Atom('platformKey' type=dynamic),
                #3,
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    5,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    3,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Alt,
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Cons,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1239,
            ),
            hi: BytePos(
                1273,
            ),
            ctxt: #0,
        },
    },
    Call {
        func: Variable(
            (
                Atom('pkgAndSubpathForCurrentPlatform' type=dynamic),
                #2,
            ),
        ),
        args: [],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    6,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1530,
            ),
            hi: BytePos(
                1563,
            ),
            ctxt: #0,
        },
    },
    Member {
        obj: FreeVar(
            Require,
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('resolve' type=inline),
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    6,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    3,
                ),
            ),
            Stmt(
                Try,
            ),
            TryStmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1602,
            ),
            hi: BytePos(
                1617,
            ),
            ctxt: #0,
        },
    },
    MemberCall {
        obj: FreeVar(
            Require,
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('resolve' type=inline),
                ),
            ),
        ),
        args: [
            Value(
                Concat(
                    4,
                    [
                        Variable(
                            (
                                Atom('pkg' type=inline),
                                #7,
                            ),
                        ),
                        Constant(
                            Str(
                                Atom(
                                    "/",
                                ),
                            ),
                        ),
                        Variable(
                            (
                                Atom('subpath' type=inline),
                                #7,
                            ),
                        ),
                    ],
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    6,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    3,
                ),
            ),
            Stmt(
                Try,
            ),
            TryStmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1602,
            ),
            hi: BytePos(
                1638,
            ),
            ctxt: #0,
        },
    },
    Call {
        func: FreeVar(
            Other(
                Atom('downloadedBinPath' type=dynamic),
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        Atom('pkg' type=inline),
                        #7,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        Atom('subpath' type=inline),
                        #7,
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    6,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    3,
                ),
            ),
            Stmt(
                Try,
            ),
            TryStmt(
                Handler,
            ),
            CatchClause(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1670,
            ),
            hi: BytePos(
                1701,
            ),
            ctxt: #0,
        },
    },
    Member {
        obj: FreeVar(
            Other(
                Atom('fs' type=inline),
            ),
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('existsSync' type=dynamic),
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    6,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    3,
                ),
            ),
            Stmt(
                Try,
            ),
            TryStmt(
                Handler,
            ),
            CatchClause(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
            Expr(
                Unary,
            ),
            UnaryExpr(
                Arg,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1712,
            ),
            hi: BytePos(
                1725,
            ),
            ctxt: #0,
        },
    },
    MemberCall {
        obj: FreeVar(
            Other(
                Atom('fs' type=inline),
            ),
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('existsSync' type=dynamic),
                ),
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        Atom('binPath' type=inline),
                        #7,
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    6,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    3,
                ),
            ),
            Stmt(
                Try,
            ),
            TryStmt(
                Handler,
            ),
            CatchClause(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
            Expr(
                Unary,
            ),
            UnaryExpr(
                Arg,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1712,
            ),
            hi: BytePos(
                1734,
            ),
            ctxt: #0,
        },
    },
    Conditional {
        condition: Not(
            5,
            MemberCall(
                4,
                FreeVar(
                    Other(
                        Atom('fs' type=inline),
                    ),
                ),
                Constant(
                    Str(
                        Word(
                            Atom('existsSync' type=dynamic),
                        ),
                    ),
                ),
                [
                    Variable(
                        (
                            Atom('binPath' type=inline),
                            #7,
                        ),
                    ),
                ],
            ),
        ),
        kind: If {
            then: EffectsBlock {
                effects: [
                    Member {
                        obj: FreeVar(
                            Require,
                        ),
                        prop: Constant(
                            Str(
                                Word(
                                    Atom('resolve' type=inline),
                                ),
                            ),
                        ),
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    6,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    3,
                                ),
                            ),
                            Stmt(
                                Try,
                            ),
                            TryStmt(
                                Handler,
                            ),
                            CatchClause(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    1,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Try,
                            ),
                            TryStmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Callee,
                            ),
                            Callee(
                                Expr,
                            ),
                            Expr(
                                Member,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                1758,
                            ),
                            hi: BytePos(
                                1773,
                            ),
                            ctxt: #0,
                        },
                    },
                    MemberCall {
                        obj: FreeVar(
                            Require,
                        ),
                        prop: Constant(
                            Str(
                                Word(
                                    Atom('resolve' type=inline),
                                ),
                            ),
                        ),
                        args: [
                            Value(
                                Variable(
                                    (
                                        Atom('pkg' type=inline),
                                        #7,
                                    ),
                                ),
                            ),
                        ],
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    6,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    3,
                                ),
                            ),
                            Stmt(
                                Try,
                            ),
                            TryStmt(
                                Handler,
                            ),
                            CatchClause(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    1,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Try,
                            ),
                            TryStmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Call,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                1758,
                            ),
                            hi: BytePos(
                                1778,
                            ),
                            ctxt: #0,
                        },
                    },
                ],
                ast_path: [
                    Program(
                        Script,
                    ),
                    Script(
                        Body(
                            6,
                        ),
                    ),
                    Stmt(
                        Decl,
                    ),
                    Decl(
                        Fn,
                    ),
                    FnDecl(
                        Function,
                    ),
                    Function(
                        Body,
                    ),
                    BlockStmt(
                        Stmts(
                            3,
                        ),
                    ),
                    Stmt(
                        Try,
                    ),
                    TryStmt(
                        Handler,
                    ),
                    CatchClause(
                        Body,
                    ),
                    BlockStmt(
                        Stmts(
                            1,
                        ),
                    ),
                    Stmt(
                        If,
                    ),
                    IfStmt(
                        Cons,
                    ),
                ],
            },
        },
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    6,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    3,
                ),
            ),
            Stmt(
                Try,
            ),
            TryStmt(
                Handler,
            ),
            CatchClause(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
        ],
        span: Span {
            lo: BytePos(
                1707,
            ),
            hi: BytePos(
                2154,
            ),
            ctxt: #0,
        },
    },
    Call {
        func: FreeVar(
            Require,
        ),
        args: [
            Value(
                Constant(
                    Str(
                        Word(
                            Atom('pnpapi' type=inline),
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    6,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    5,
                ),
            ),
            Stmt(
                Try,
            ),
            TryStmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2196,
            ),
            hi: BytePos(
                2213,
            ),
            ctxt: #0,
        },
    },
    Conditional {
        condition: Variable(
            (
                Atom('isYarnPnP' type=dynamic),
                #7,
            ),
        ),
        kind: If {
            then: EffectsBlock {
                effects: [
                    Member {
                        obj: Variable(
                            (
                                Atom('path' type=static),
                                #2,
                            ),
                        ),
                        prop: Constant(
                            Str(
                                Word(
                                    Atom('dirname' type=inline),
                                ),
                            ),
                        ),
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    6,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    6,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    0,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Callee,
                            ),
                            Callee(
                                Expr,
                            ),
                            Expr(
                                Member,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                2299,
                            ),
                            hi: BytePos(
                                2311,
                            ),
                            ctxt: #0,
                        },
                    },
                    Member {
                        obj: FreeVar(
                            Require,
                        ),
                        prop: Constant(
                            Str(
                                Word(
                                    Atom('resolve' type=inline),
                                ),
                            ),
                        ),
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    6,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    6,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    0,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Args(
                                    0,
                                ),
                            ),
                            ExprOrSpread(
                                Expr,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Callee,
                            ),
                            Callee(
                                Expr,
                            ),
                            Expr(
                                Member,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                2312,
                            ),
                            hi: BytePos(
                                2327,
                            ),
                            ctxt: #0,
                        },
                    },
                    MemberCall {
                        obj: FreeVar(
                            Require,
                        ),
                        prop: Constant(
                            Str(
                                Word(
                                    Atom('resolve' type=inline),
                                ),
                            ),
                        ),
                        args: [
                            Value(
                                Constant(
                                    Str(
                                        Word(
                                            Atom('esbuild' type=inline),
                                        ),
                                    ),
                                ),
                            ),
                        ],
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    6,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    6,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    0,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Args(
                                    0,
                                ),
                            ),
                            ExprOrSpread(
                                Expr,
                            ),
                            Expr(
                                Call,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                2312,
                            ),
                            hi: BytePos(
                                2338,
                            ),
                            ctxt: #0,
                        },
                    },
                    MemberCall {
                        obj: Variable(
                            (
                                Atom('path' type=static),
                                #2,
                            ),
                        ),
                        prop: Constant(
                            Str(
                                Word(
                                    Atom('dirname' type=inline),
                                ),
                            ),
                        ),
                        args: [
                            Value(
                                MemberCall(
                                    4,
                                    FreeVar(
                                        Require,
                                    ),
                                    Constant(
                                        Str(
                                            Word(
                                                Atom('resolve' type=inline),
                                            ),
                                        ),
                                    ),
                                    [
                                        Constant(
                                            Str(
                                                Word(
                                                    Atom('esbuild' type=inline),
                                                ),
                                            ),
                                        ),
                                    ],
                                ),
                            ),
                        ],
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    6,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    6,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    0,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Call,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                2299,
                            ),
                            hi: BytePos(
                                2339,
                            ),
                            ctxt: #0,
                        },
                    },
                    Member {
                        obj: Variable(
                            (
                                Atom('path' type=static),
                                #2,
                            ),
                        ),
                        prop: Constant(
                            Str(
                                Word(
                                    Atom('join' type=inline),
                                ),
                            ),
                        ),
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    6,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    6,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    1,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    0,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Callee,
                            ),
                            Callee(
                                Expr,
                            ),
                            Expr(
                                Member,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                2367,
                            ),
                            hi: BytePos(
                                2376,
                            ),
                            ctxt: #0,
                        },
                    },
                    Member {
                        obj: Variable(
                            (
                                Atom('path' type=static),
                                #2,
                            ),
                        ),
                        prop: Constant(
                            Str(
                                Word(
                                    Atom('basename' type=dynamic),
                                ),
                            ),
                        ),
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    6,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    6,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    1,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    0,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Args(
                                    1,
                                ),
                            ),
                            ExprOrSpread(
                                Expr,
                            ),
                            Expr(
                                Tpl,
                            ),
                            Tpl(
                                Exprs(
                                    1,
                                ),
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Callee,
                            ),
                            Callee(
                                Expr,
                            ),
                            Expr(
                                Member,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                2422,
                            ),
                            hi: BytePos(
                                2435,
                            ),
                            ctxt: #0,
                        },
                    },
                    MemberCall {
                        obj: Variable(
                            (
                                Atom('path' type=static),
                                #2,
                            ),
                        ),
                        prop: Constant(
                            Str(
                                Word(
                                    Atom('basename' type=dynamic),
                                ),
                            ),
                        ),
                        args: [
                            Value(
                                Variable(
                                    (
                                        Atom('subpath' type=inline),
                                        #7,
                                    ),
                                ),
                            ),
                        ],
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    6,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    6,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    1,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    0,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Args(
                                    1,
                                ),
                            ),
                            ExprOrSpread(
                                Expr,
                            ),
                            Expr(
                                Tpl,
                            ),
                            Tpl(
                                Exprs(
                                    1,
                                ),
                            ),
                            Expr(
                                Call,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                2422,
                            ),
                            hi: BytePos(
                                2444,
                            ),
                            ctxt: #0,
                        },
                    },
                    MemberCall {
                        obj: Variable(
                            (
                                Atom('path' type=static),
                                #2,
                            ),
                        ),
                        prop: Constant(
                            Str(
                                Word(
                                    Atom('join' type=inline),
                                ),
                            ),
                        ),
                        args: [
                            Value(
                                Variable(
                                    (
                                        Atom('esbuildLibDir' type=dynamic),
                                        #16,
                                    ),
                                ),
                            ),
                            Value(
                                Concat(
                                    8,
                                    [
                                        Constant(
                                            Str(
                                                Atom(
                                                    "pnpapi-",
                                                ),
                                            ),
                                        ),
                                        Variable(
                                            (
                                                Atom('pkg' type=inline),
                                                #7,
                                            ),
                                        ),
                                        Constant(
                                            Str(
                                                Atom(
                                                    "-",
                                                ),
                                            ),
                                        ),
                                        MemberCall(
                                            4,
                                            Variable(
                                                (
                                                    Atom('path' type=static),
                                                    #2,
                                                ),
                                            ),
                                            Constant(
                                                Str(
                                                    Word(
                                                        Atom('basename' type=dynamic),
                                                    ),
                                                ),
                                            ),
                                            [
                                                Variable(
                                                    (
                                                        Atom('subpath' type=inline),
                                                        #7,
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ],
                                ),
                            ),
                        ],
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    6,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    6,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    1,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    0,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Call,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                2367,
                            ),
                            hi: BytePos(
                                2452,
                            ),
                            ctxt: #0,
                        },
                    },
                    Member {
                        obj: FreeVar(
                            Other(
                                Atom('fs' type=inline),
                            ),
                        ),
                        prop: Constant(
                            Str(
                                Word(
                                    Atom('existsSync' type=dynamic),
                                ),
                            ),
                        ),
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    6,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    6,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    2,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Test,
                            ),
                            Expr(
                                Unary,
                            ),
                            UnaryExpr(
                                Arg,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Callee,
                            ),
                            Callee(
                                Expr,
                            ),
                            Expr(
                                Member,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                2463,
                            ),
                            hi: BytePos(
                                2476,
                            ),
                            ctxt: #0,
                        },
                    },
                    MemberCall {
                        obj: FreeVar(
                            Other(
                                Atom('fs' type=inline),
                            ),
                        ),
                        prop: Constant(
                            Str(
                                Word(
                                    Atom('existsSync' type=dynamic),
                                ),
                            ),
                        ),
                        args: [
                            Value(
                                Variable(
                                    (
                                        Atom('binTargetPath' type=dynamic),
                                        #16,
                                    ),
                                ),
                            ),
                        ],
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    6,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    6,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    2,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Test,
                            ),
                            Expr(
                                Unary,
                            ),
                            UnaryExpr(
                                Arg,
                            ),
                            Expr(
                                Call,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                2463,
                            ),
                            hi: BytePos(
                                2491,
                            ),
                            ctxt: #0,
                        },
                    },
                    Conditional {
                        condition: Not(
                            5,
                            MemberCall(
                                4,
                                FreeVar(
                                    Other(
                                        Atom('fs' type=inline),
                                    ),
                                ),
                                Constant(
                                    Str(
                                        Word(
                                            Atom('existsSync' type=dynamic),
                                        ),
                                    ),
                                ),
                                [
                                    Variable(
                                        (
                                            Atom('binTargetPath' type=dynamic),
                                            #16,
                                        ),
                                    ),
                                ],
                            ),
                        ),
                        kind: If {
                            then: EffectsBlock {
                                effects: [
                                    Member {
                                        obj: FreeVar(
                                            Other(
                                                Atom('fs' type=inline),
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Word(
                                                    Atom('copyFileSync' type=dynamic),
                                                ),
                                            ),
                                        ),
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    6,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Fn,
                                            ),
                                            FnDecl(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    6,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Block,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    2,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Block,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                2501,
                                            ),
                                            hi: BytePos(
                                                2516,
                                            ),
                                            ctxt: #0,
                                        },
                                    },
                                    MemberCall {
                                        obj: FreeVar(
                                            Other(
                                                Atom('fs' type=inline),
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Word(
                                                    Atom('copyFileSync' type=dynamic),
                                                ),
                                            ),
                                        ),
                                        args: [
                                            Value(
                                                Variable(
                                                    (
                                                        Atom('binPath' type=inline),
                                                        #7,
                                                    ),
                                                ),
                                            ),
                                            Value(
                                                Variable(
                                                    (
                                                        Atom('binTargetPath' type=dynamic),
                                                        #16,
                                                    ),
                                                ),
                                            ),
                                        ],
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    6,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Fn,
                                            ),
                                            FnDecl(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    6,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Block,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    2,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Block,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                2501,
                                            ),
                                            hi: BytePos(
                                                2540,
                                            ),
                                            ctxt: #0,
                                        },
                                    },
                                    Member {
                                        obj: FreeVar(
                                            Other(
                                                Atom('fs' type=inline),
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Word(
                                                    Atom('chmodSync' type=dynamic),
                                                ),
                                            ),
                                        ),
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    6,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Fn,
                                            ),
                                            FnDecl(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    6,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Block,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    2,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Block,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    1,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                2548,
                                            ),
                                            hi: BytePos(
                                                2560,
                                            ),
                                            ctxt: #0,
                                        },
                                    },
                                    MemberCall {
                                        obj: FreeVar(
                                            Other(
                                                Atom('fs' type=inline),
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Word(
                                                    Atom('chmodSync' type=dynamic),
                                                ),
                                            ),
                                        ),
                                        args: [
                                            Value(
                                                Variable(
                                                    (
                                                        Atom('binTargetPath' type=dynamic),
                                                        #16,
                                                    ),
                                                ),
                                            ),
                                            Value(
                                                Constant(
                                                    Num(
                                                        ConstantNumber(
                                                            493.0,
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ],
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    6,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Fn,
                                            ),
                                            FnDecl(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    6,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Block,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    2,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Block,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    1,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                2548,
                                            ),
                                            hi: BytePos(
                                                2580,
                                            ),
                                            ctxt: #0,
                                        },
                                    },
                                ],
                                ast_path: [
                                    Program(
                                        Script,
                                    ),
                                    Script(
                                        Body(
                                            6,
                                        ),
                                    ),
                                    Stmt(
                                        Decl,
                                    ),
                                    Decl(
                                        Fn,
                                    ),
                                    FnDecl(
                                        Function,
                                    ),
                                    Function(
                                        Body,
                                    ),
                                    BlockStmt(
                                        Stmts(
                                            6,
                                        ),
                                    ),
                                    Stmt(
                                        If,
                                    ),
                                    IfStmt(
                                        Cons,
                                    ),
                                    Stmt(
                                        Block,
                                    ),
                                    BlockStmt(
                                        Stmts(
                                            2,
                                        ),
                                    ),
                                    Stmt(
                                        If,
                                    ),
                                    IfStmt(
                                        Cons,
                                    ),
                                ],
                            },
                        },
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    6,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Fn,
                            ),
                            FnDecl(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    6,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    2,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Test,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                2458,
                            ),
                            hi: BytePos(
                                2587,
                            ),
                            ctxt: #0,
                        },
                    },
                ],
                ast_path: [
                    Program(
                        Script,
                    ),
                    Script(
                        Body(
                            6,
                        ),
                    ),
                    Stmt(
                        Decl,
                    ),
                    Decl(
                        Fn,
                    ),
                    FnDecl(
                        Function,
                    ),
                    Function(
                        Body,
                    ),
                    BlockStmt(
                        Stmts(
                            6,
                        ),
                    ),
                    Stmt(
                        If,
                    ),
                    IfStmt(
                        Cons,
                    ),
                ],
            },
        },
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    6,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
        ],
        span: Span {
            lo: BytePos(
                2256,
            ),
            hi: BytePos(
                2617,
            ),
            ctxt: #0,
        },
    },
    Member {
        obj: Variable(
            (
                Atom('path2' type=inline),
                #2,
            ),
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('basename' type=dynamic),
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    7,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Arrow,
            ),
            ArrowExpr(
                Body,
            ),
            BlockStmtOrExpr(
                BlockStmt,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2725,
            ),
            hi: BytePos(
                2739,
            ),
            ctxt: #0,
        },
    },
    MemberCall {
        obj: Variable(
            (
                Atom('path2' type=inline),
                #2,
            ),
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('basename' type=dynamic),
                ),
            ),
        ),
        args: [
            Value(
                FreeVar(
                    Filename,
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    7,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Arrow,
            ),
            ArrowExpr(
                Body,
            ),
            BlockStmtOrExpr(
                BlockStmt,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2725,
            ),
            hi: BytePos(
                2751,
            ),
            ctxt: #0,
        },
    },
    Member {
        obj: Variable(
            (
                Atom('path2' type=inline),
                #2,
            ),
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('basename' type=dynamic),
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    7,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Arrow,
            ),
            ArrowExpr(
                Body,
            ),
            BlockStmtOrExpr(
                BlockStmt,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2775,
            ),
            hi: BytePos(
                2789,
            ),
            ctxt: #0,
        },
    },
    MemberCall {
        obj: Variable(
            (
                Atom('path2' type=inline),
                #2,
            ),
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('basename' type=dynamic),
                ),
            ),
        ),
        args: [
            Value(
                FreeVar(
                    Dirname,
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    7,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Arrow,
            ),
            ArrowExpr(
                Body,
            ),
            BlockStmtOrExpr(
                BlockStmt,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2775,
            ),
            hi: BytePos(
                2800,
            ),
            ctxt: #0,
        },
    },
    Conditional {
        condition: Constant(
            False,
        ),
        kind: If {
            then: EffectsBlock {
                effects: [
                    Member {
                        obj: Variable(
                            (
                                Atom('path2' type=inline),
                                #2,
                            ),
                        ),
                        prop: Constant(
                            Str(
                                Word(
                                    Atom('join' type=inline),
                                ),
                            ),
                        ),
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    7,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    0,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Arrow,
                            ),
                            ArrowExpr(
                                Body,
                            ),
                            BlockStmtOrExpr(
                                BlockStmt,
                            ),
                            BlockStmt(
                                Stmts(
                                    1,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Return,
                            ),
                            ReturnStmt(
                                Arg,
                            ),
                            Expr(
                                Array,
                            ),
                            ArrayLit(
                                Elems(
                                    1,
                                ),
                            ),
                            ExprOrSpread(
                                Expr,
                            ),
                            Expr(
                                Array,
                            ),
                            ArrayLit(
                                Elems(
                                    0,
                                ),
                            ),
                            ExprOrSpread(
                                Expr,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Callee,
                            ),
                            Callee(
                                Expr,
                            ),
                            Expr(
                                Member,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                3526,
                            ),
                            hi: BytePos(
                                3536,
                            ),
                            ctxt: #0,
                        },
                    },
                    MemberCall {
                        obj: Variable(
                            (
                                Atom('path2' type=inline),
                                #2,
                            ),
                        ),
                        prop: Constant(
                            Str(
                                Word(
                                    Atom('join' type=inline),
                                ),
                            ),
                        ),
                        args: [
                            Value(
                                FreeVar(
                                    Dirname,
                                ),
                            ),
                            Value(
                                Constant(
                                    Str(
                                        Word(
                                            Atom('..' type=inline),
                                        ),
                                    ),
                                ),
                            ),
                            Value(
                                Constant(
                                    Str(
                                        Word(
                                            Atom('bin' type=inline),
                                        ),
                                    ),
                                ),
                            ),
                            Value(
                                Constant(
                                    Str(
                                        Word(
                                            Atom('esbuild' type=inline),
                                        ),
                                    ),
                                ),
                            ),
                        ],
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    7,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    0,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Arrow,
                            ),
                            ArrowExpr(
                                Body,
                            ),
                            BlockStmtOrExpr(
                                BlockStmt,
                            ),
                            BlockStmt(
                                Stmts(
                                    1,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Block,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Return,
                            ),
                            ReturnStmt(
                                Arg,
                            ),
                            Expr(
                                Array,
                            ),
                            ArrayLit(
                                Elems(
                                    1,
                                ),
                            ),
                            ExprOrSpread(
                                Expr,
                            ),
                            Expr(
                                Array,
                            ),
                            ArrayLit(
                                Elems(
                                    0,
                                ),
                            ),
                            ExprOrSpread(
                                Expr,
                            ),
                            Expr(
                                Call,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                3526,
                            ),
                            hi: BytePos(
                                3571,
                            ),
                            ctxt: #0,
                        },
                    },
                ],
                ast_path: [
                    Program(
                        Script,
                    ),
                    Script(
                        Body(
                            7,
                        ),
                    ),
                    Stmt(
                        Decl,
                    ),
                    Decl(
                        Var,
                    ),
                    VarDecl(
                        Decls(
                            0,
                        ),
                    ),
                    VarDeclarator(
                        Init,
                    ),
                    Expr(
                        Arrow,
                    ),
                    ArrowExpr(
                        Body,
                    ),
                    BlockStmtOrExpr(
                        BlockStmt,
                    ),
                    BlockStmt(
                        Stmts(
                            1,
                        ),
                    ),
                    Stmt(
                        If,
                    ),
                    IfStmt(
                        Cons,
                    ),
                ],
            },
        },
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    7,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Arrow,
            ),
            ArrowExpr(
                Body,
            ),
            BlockStmtOrExpr(
                BlockStmt,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
        ],
        span: Span {
            lo: BytePos(
                3492,
            ),
            hi: BytePos(
                3578,
            ),
            ctxt: #0,
        },
    },
    Call {
        func: Variable(
            (
                Atom('generateBinPath' type=dynamic),
                #2,
            ),
        ),
        args: [],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    7,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Arrow,
            ),
            ArrowExpr(
                Body,
            ),
            BlockStmtOrExpr(
                BlockStmt,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Return,
            ),
            ReturnStmt(
                Arg,
            ),
            Expr(
                Array,
            ),
            ArrayLit(
                Elems(
                    0,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3589,
            ),
            hi: BytePos(
                3606,
            ),
            ctxt: #0,
        },
    },
    Call {
        func: Variable(
            (
                Atom('esbuildCommandAndArgs' type=dynamic),
                #2,
            ),
        ),
        args: [],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    8,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3638,
            ),
            hi: BytePos(
                3661,
            ),
            ctxt: #0,
        },
    },
    Member {
        obj: Variable(
            (
                Atom('args' type=inline),
                #2,
            ),
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('concat' type=static),
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    9,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3671,
            ),
            hi: BytePos(
                3682,
            ),
            ctxt: #0,
        },
    },
    MemberCall {
        obj: Variable(
            (
                Atom('args' type=inline),
                #2,
            ),
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('concat' type=static),
                ),
            ),
        ),
        args: [
            Value(
                Constant(
                    Str(
                        Atom(
                            "--service=0.14.12",
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Str(
                        Word(
                            Atom('--ping' type=inline),
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    9,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3671,
            ),
            hi: BytePos(
                3718,
            ),
            ctxt: #0,
        },
    },
]
