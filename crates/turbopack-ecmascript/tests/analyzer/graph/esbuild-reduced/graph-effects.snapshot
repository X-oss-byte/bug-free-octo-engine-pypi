[
    FreeVar {
        var: FreeVar(
            Atom('require' type=static),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Ident,
            ),
        ],
        span: Span {
            lo: BytePos(
                12,
            ),
            hi: BytePos(
                19,
            ),
            ctxt: #1,
        },
        in_try: false,
    },
    Call {
        func: FreeVar(
            Atom('require' type=static),
        ),
        args: [
            Value(
                Constant(
                    Str(
                        Word(
                            Atom('path' type=static),
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                12,
            ),
            hi: BytePos(
                27,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    FreeVar {
        var: FreeVar(
            Atom('require' type=static),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Ident,
            ),
        ],
        span: Span {
            lo: BytePos(
                41,
            ),
            hi: BytePos(
                48,
            ),
            ctxt: #1,
        },
        in_try: false,
    },
    Call {
        func: FreeVar(
            Atom('require' type=static),
        ),
        args: [
            Value(
                Constant(
                    Str(
                        Word(
                            Atom('path' type=static),
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    1,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                41,
            ),
            hi: BytePos(
                56,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                Atom('knownWindowsPackages' type=dynamic),
                #2,
            ),
        ),
        prop: FreeVar(
            Atom('platformKey' type=dynamic),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    3,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                296,
            ),
            hi: BytePos(
                329,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    FreeVar {
        var: FreeVar(
            Atom('platformKey' type=dynamic),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    3,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Member,
            ),
            MemberExpr(
                Prop,
            ),
            MemberProp(
                Computed,
            ),
            ComputedPropName(
                Expr,
            ),
            Expr(
                Ident,
            ),
        ],
        span: Span {
            lo: BytePos(
                317,
            ),
            hi: BytePos(
                328,
            ),
            ctxt: #1,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                Atom('pkgAndSubpathForCurrentPlatform' type=dynamic),
                #2,
            ),
        ),
        args: [],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    4,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                443,
            ),
            hi: BytePos(
                476,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: FreeVar(
            Atom('require' type=static),
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('resolve' type=inline),
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    4,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Try,
            ),
            TryStmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                515,
            ),
            hi: BytePos(
                530,
            ),
            ctxt: #0,
        },
        in_try: true,
    },
    FreeVar {
        var: FreeVar(
            Atom('require' type=static),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    4,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Try,
            ),
            TryStmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
            MemberExpr(
                Obj,
            ),
            Expr(
                Ident,
            ),
        ],
        span: Span {
            lo: BytePos(
                515,
            ),
            hi: BytePos(
                522,
            ),
            ctxt: #1,
        },
        in_try: true,
    },
    MemberCall {
        obj: FreeVar(
            Atom('require' type=static),
        ),
        prop: Constant(
            Str(
                Word(
                    Atom('resolve' type=inline),
                ),
            ),
        ),
        args: [
            Value(
                Concat(
                    4,
                    [
                        Variable(
                            (
                                Atom('pkg' type=inline),
                                #4,
                            ),
                        ),
                        Constant(
                            Str(
                                Atom(
                                    "/",
                                ),
                            ),
                        ),
                        Variable(
                            (
                                Atom('subpath' type=inline),
                                #4,
                            ),
                        ),
                    ],
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    4,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Fn,
            ),
            FnDecl(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Try,
            ),
            TryStmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                515,
            ),
            hi: BytePos(
                551,
            ),
            ctxt: #0,
        },
        in_try: true,
    },
    Call {
        func: Variable(
            (
                Atom('generateBinPath' type=dynamic),
                #2,
            ),
        ),
        args: [],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    5,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                598,
            ),
            hi: BytePos(
                615,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
]
