*anonymous function 10064* = (...) => (undefined | "OR")

*anonymous function 10192* = (...) => (undefined | "NOT")

*anonymous function 10796* = (...) => (undefined | {"type": "identifier", "name": name})

*anonymous function 11187* = (...) => (undefined | (head + tail["join"]("")))

*anonymous function 11339* = (...) => (undefined | {"type": "parameter_name", "name": text()})

*anonymous function 11668* = (...) => (undefined | text())

*anonymous function 11725* = (...) => (undefined | seq)

*anonymous function 11890* = (...) => (undefined | "\b")

*anonymous function 12016* = (...) => (undefined | "\f")

*anonymous function 12142* = (...) => (undefined | "\n")

*anonymous function 12268* = (...) => (undefined | "\r")

*anonymous function 12394* = (...) => (undefined | "\t")

*anonymous function 12449* = (...) => (undefined | text())

*anonymous function 12577* = (...) => (
  | undefined
  | FreeVar(String)["fromCharCode"](FreeVar(parseInt)(digits, 16))
)

*anonymous function 1271* = (...) => (undefined | "any character")

*anonymous function 12829* = (...) => (undefined | v)

*anonymous function 12892* = (...) => (undefined | {"property": property, "alias": alias})

*anonymous function 12977* = (...) => (undefined | expression)

*anonymous function 13048* = (...) => (
  | undefined
  | {"type": "array_subquery_expression", "expression": expression}
)

*anonymous function 13181* = (...) => (
  | undefined
  | {"type": "exists_subquery_expression", "expression": expression}
)

*anonymous function 13315* = (...) => (
  | undefined
  | {"type": "scalar_subquery_expression", "expression": expression}
)

*anonymous function 1343* = (...) => (undefined | "end of input")

*anonymous function 13449* = (...) => (undefined | {"property": property, "computed": false})

*anonymous function 13543* = (...) => (undefined | {"property": property, "computed": true})

*anonymous function 13636* = (...) => (undefined | tail["reduce"](*arrow function 13694*, head))

*anonymous function 13891* = (...) => (
  | undefined
  | {"type": "scalar_unary_expression", "operator": operator, "argument": argument}
)

*anonymous function 1416* = (...) => (undefined | expectation["description"])

*anonymous function 14188* = (...) => (
  | undefined
  | {
        "type": "scalar_conditional_expression",
        "test": test,
        "consequent": consequent,
        "alternate": alternate
    }
)

*anonymous function 14448* = (...) => (undefined | buildBinaryExpression(head, tail))

*anonymous function 15047* = (...) => (
  | undefined
  | {"type": "scalar_in_expression", "value": value, "list": list}
)

*anonymous function 15185* = (...) => (
  | undefined
  | {"type": "scalar_between_expression", "value": value, "begin": begin, "end": end}
)

*anonymous function 15997* = (...) => (undefined | {"key": key, "value": value})

*anonymous function 16072* = (...) => (
  | undefined
  | {"type": "collection_expression", "expression": expression}
)

*anonymous function 16201* = (...) => (undefined | tail["reduce"](*arrow function 16259*, head))

*anonymous function 16460* = (...) => (
  | undefined
  | {"type": "collection_subquery_expression", "expression": expression}
)

*anonymous function 16598* = (...) => (undefined | {"type": "top_specification", "value": value})

*anonymous function 16713* = (...) => (
  | undefined
  | {"type": "number_constant", "value": FreeVar(Number)(text())}
)

*anonymous function 16837* = (...) => (undefined | ???*0* | [])
- *0* spread is not supported

*anonymous function 16925* = (...) => (undefined | subquery)

*anonymous function 1822* = (...) => (undefined | `\x0${hex(ch)}`)

*anonymous function 1920* = (...) => (undefined | `\x${hex(ch)}`)

*anonymous function 2287* = (...) => (undefined | `\x0${hex(ch)}`)

*anonymous function 2385* = (...) => (undefined | `\x${hex(ch)}`)

*anonymous function 3852* = (...) => (undefined | {"type": "sql", "body": body})

*anonymous function 3949* = (...) => (undefined | v)

*anonymous function 4000* = (...) => (undefined | v)

*anonymous function 4064* = (...) => (undefined | v)

*anonymous function 4134* = (...) => (undefined | v)

*anonymous function 4211* = (...) => (
  | undefined
  | {
        "type": "select_query",
        "top": top,
        "select": select,
        "from": from,
        "where": where,
        "orderBy": orderBy
    }
)

*anonymous function 4474* = (...) => (undefined | {"type": "select_specification", "*": true})

*anonymous function 4589* = (...) => (
  | undefined
  | {"type": "select_specification", "properties": properties}
)

*anonymous function 4716* = (...) => (undefined | {"type": "select_specification", "value": value})

*anonymous function 4902* = (...) => (undefined | v)

*anonymous function 4960* = (...) => (
  | undefined
  | {"type": "object_property_list", "properties": ???*0*}
)
- *0* spread is not supported

*anonymous function 5104* = (...) => (undefined | v)

*anonymous function 5164* = (...) => (
  | undefined
  | {"type": "from_specification", "source": source, "joins": joins}
)

*anonymous function 5303* = (...) => (
  | undefined
  | {"type": "from_source", "expression": expression, "alias": alias, "iteration": true}
)

*anonymous function 5468* = (...) => (undefined | v)

*anonymous function 5532* = (...) => (
  | undefined
  | {"type": "from_source", "expression": expression, "alias": alias}
)

*anonymous function 5672* = (...) => (
  | undefined
  | {"type": "filter_condition", "condition": condition}
)

*anonymous function 5793* = (...) => (
  | undefined
  | {"type": "sort_specification", "expressions": ???*0*}
)
- *0* spread is not supported

*anonymous function 5936* = (...) => (
  | undefined
  | {"type": "sort_expression", "expression": expression, "order": order}
)

*anonymous function 625* = (...) => (
  | undefined
  | `Expected ${describeExpected(expected)} but ${describeFound(found)} found.`
)

*anonymous function 6287* = (...) => (
  | undefined
  | {"type": "scalar_function_expression", "name": name, "arguments": args, "udf": true}
)

*anonymous function 6458* = (...) => (
  | undefined
  | {"type": "scalar_function_expression", "name": name, "arguments": args}
)

*anonymous function 6748* = (...) => (
  | undefined
  | {"type": "scalar_object_expression", "properties": (???*0* | [])}
)
- *0* spread is not supported

*anonymous function 702* = (...) => (undefined | `"${literalEscape(expectation["text"])}"`)

*anonymous function 7046* = (...) => (
  | undefined
  | {"type": "scalar_array_expression", "elements": elements}
)

*anonymous function 7257* = (...) => (undefined | {"type": "undefined_constant"})

*anonymous function 7337* = (...) => (undefined | {"type": "null_constant"})

*anonymous function 7412* = (...) => (undefined | {"type": "boolean_constant", "value": false})

*anonymous function 7527* = (...) => (undefined | {"type": "boolean_constant", "value": true})

*anonymous function 7869* = (...) => (
  | undefined
  | {
        "type": "number_constant",
        "value": (FreeVar(parseInt)(text(), 16) | FreeVar(parseFloat)(text()))
    }
)

*anonymous function 804* = (...) => (undefined | `[${("^" | "")}${escapedParts}]`)

*anonymous function 8139* = (...) => (
  | undefined
  | {"type": "string_constant", "value": chars["join"]("")}
)

*anonymous function 8336* = (...) => (undefined | {"type": "array_constant", "elements": ???*0*})
- *0* spread is not supported

*anonymous function 8472* = (...) => (undefined | {"type": "object_constant", "properties": ???*0*})
- *0* spread is not supported

*anonymous function 9682* = (...) => (undefined | "ASC")

*anonymous function 9811* = (...) => (undefined | "DESC")

*anonymous function 9939* = (...) => (undefined | "AND")

*arrow function 13694* = (...) => {"type": "scalar_member_expression", "object": object, "property": property, "computed": computed}

*arrow function 16259* = (...) => {
    "type": "collection_member_expression",
    "object": object,
    "property": property,
    "computed": computed
}

*arrow function 169161* = (...) => {"type": "scalar_binary_expression", "left": left, "operator": operator, "right": right}

DESCRIBE_EXPECTATION_FNS = {
    "literal": (...) => (undefined | `"${literalEscape(expectation["text"])}"`),
    "class": (...) => (undefined | `[${("^" | "")}${escapedParts}]`),
    "any": (...) => (undefined | "any character"),
    "end": (...) => (undefined | "end of input"),
    "other": (...) => (undefined | expectation["description"])
}

alias#42 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

alias#44 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

alias#78 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

alternate = ???*0*
- *0* arguments[2]
  ⚠️  function calls are not analysed yet

args#48 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

args#49 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

argument = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

begin = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

body = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

buildBinaryExpression = (...) => (undefined | tail["reduce"](*arrow function 169161*, head))

ch#14 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

ch#16 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

ch#17 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

ch#19 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

ch#20 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

chars = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

child = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

classEscape = (...) => (
  | undefined
  | ...[...](..., ...)["replace"](/\^/g, "\\^")["replace"](/-/g, "\\-")["replace"](/\0/g, "\\0")["replace"](/\t/g, "\\t")["replace"](/\n/g, "\\n")["replace"](/\r/g, "\\r")["replace"](/[\x00-\x0F]/g, *anonymous function 2287*)["replace"](/[\x10-\x1F\x7F-\x9F]/g, *anonymous function 2385*)
)

condition = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

consequent = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

ctor = (...) => undefined

describeExpectation = (...) => (
  | undefined
  | DESCRIBE_EXPECTATION_FNS[expectation["type"]](expectation)
)

describeExpected = (...) => (
  | undefined
  | descriptions[0]
  | `${descriptions[0]} or ${descriptions[1]}`
  | `${descriptions["slice"](0, ???*0*)["join"](", ")}, or ${descriptions[???*1*]}`
)
- *0* unsupported expression
- *1* unsupported expression

describeFound = (...) => (undefined | `"${literalEscape(found)}"` | "end of input")

description#105 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

description#111 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

descriptions = ???*0*
- *0* unknown new expression

details = (
  | {"line": 1, "column": 1}
  | ???*0*
  | {"line": (1 | ???*2* | ???*3*), "column": (1 | ???*6* | ???*7*)}
)
- *0* [][???*1*]
  ⚠️  unknown array prototype methods or values
- *1* arguments[0]
  ⚠️  function calls are not analysed yet
- *2* unknown mutation
- *3* ???*4*["line"]
  ⚠️  unknown object
- *4* [][???*5*]
  ⚠️  unknown array prototype methods or values
- *5* arguments[0]
  ⚠️  function calls are not analysed yet
- *6* unknown mutation
- *7* ???*8*["column"]
  ⚠️  unknown object
- *8* [][???*9*]
  ⚠️  unknown array prototype methods or values
- *9* arguments[0]
  ⚠️  function calls are not analysed yet

digits = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

elements = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

end = ???*0*
- *0* arguments[2]
  ⚠️  function calls are not analysed yet

endPos = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

endPosDetails = (undefined | {"line": 1, "column": 1} | ???*0* | {"line": ???*2*, "column": ???*4*})
- *0* [][???*1*]
  ⚠️  unknown array prototype methods or values
- *1* arguments[1]
  ⚠️  function calls are not analysed yet
- *2* ???*3*["line"]
  ⚠️  unknown object
- *3* details
  ⚠️  circular variable reference
- *4* ???*5*["column"]
  ⚠️  unknown object
- *5* details
  ⚠️  circular variable reference

error = (...) => undefined

escapedParts = ("" | (("" | ???*0*) + (???*13* | undefined | ???*22*)))
- *0* (???*1* + (???*2* | undefined | ???*9*))
  ⚠️  nested operation
- *1* escapedParts
  ⚠️  circular variable reference
- *2* `${(undefined | ???*3*)}-${(undefined | ???*6*)}`
  ⚠️  nested operation
- *3* ???*4*["replace"](/[\x10-\x1F\x7F-\x9F]/g, *anonymous function 2385*)
  ⚠️  unknown callee object
- *4* ???*5*["replace"](/[\x00-\x0F]/g, *anonymous function 2287*)
  ⚠️  unknown callee object
- *5* ???["replace"](/\r/g, "\\r")
  ⚠️  unknown callee object
- *6* ???*7*["replace"](/[\x10-\x1F\x7F-\x9F]/g, *anonymous function 2385*)
  ⚠️  unknown callee object
- *7* ???*8*["replace"](/[\x00-\x0F]/g, *anonymous function 2287*)
  ⚠️  unknown callee object
- *8* ???["replace"](/\r/g, "\\r")
  ⚠️  unknown callee object
- *9* ???*10*["replace"](/[\x10-\x1F\x7F-\x9F]/g, *anonymous function 2385*)
  ⚠️  unknown callee object
- *10* ???*11*["replace"](/[\x00-\x0F]/g, *anonymous function 2287*)
  ⚠️  unknown callee object
- *11* ???*12*["replace"](/\r/g, "\\r")
  ⚠️  unknown callee object
- *12* ???["replace"](/\n/g, "\\n")
  ⚠️  unknown callee object
- *13* `${(undefined | ???*14*)}-${(undefined | ???*18*)}`
  ⚠️  nested operation
- *14* ???*15*["replace"](/[\x10-\x1F\x7F-\x9F]/g, *anonymous function 2385*)
  ⚠️  unknown callee object
- *15* ???*16*["replace"](/[\x00-\x0F]/g, *anonymous function 2287*)
  ⚠️  unknown callee object
- *16* ???*17*["replace"](/\r/g, "\\r")
  ⚠️  unknown callee object
- *17* ???["replace"](/\n/g, "\\n")
  ⚠️  unknown callee object
- *18* ???*19*["replace"](/[\x10-\x1F\x7F-\x9F]/g, *anonymous function 2385*)
  ⚠️  unknown callee object
- *19* ???*20*["replace"](/[\x00-\x0F]/g, *anonymous function 2287*)
  ⚠️  unknown callee object
- *20* ???*21*["replace"](/\r/g, "\\r")
  ⚠️  unknown callee object
- *21* ???["replace"](/\n/g, "\\n")
  ⚠️  unknown callee object
- *22* ???*23*["replace"](/[\x10-\x1F\x7F-\x9F]/g, *anonymous function 2385*)
  ⚠️  unknown callee object
- *23* ???*24*["replace"](/[\x00-\x0F]/g, *anonymous function 2287*)
  ⚠️  unknown callee object
- *24* ???*25*["replace"](/\r/g, "\\r")
  ⚠️  unknown callee object
- *25* ???*26*["replace"](/\n/g, "\\n")
  ⚠️  unknown callee object
- *26* ???["replace"](/\t/g, "\\t")
  ⚠️  unknown callee object

expectation#11 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expectation#12 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expectation#13 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expectation#21 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expectation#8 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expectation#9 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expected#120 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expected#124 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expected#22 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expected#28 = (...) => undefined

expected#5 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

expected#7 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expression#42 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

expression#43 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expression#44 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expression#47 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expression#79 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expression#80 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expression#81 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expression#82 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expression#93 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

expression#96 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

found#124 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

found#27 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

found#5 = ???*0*
- *0* arguments[2]
  ⚠️  function calls are not analysed yet

found#7 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

from#32 = ???*0*
- *0* arguments[2]
  ⚠️  function calls are not analysed yet

from#33 = ???*0*
- *0* arguments[2]
  ⚠️  function calls are not analysed yet

from#34 = ???*0*
- *0* arguments[2]
  ⚠️  function calls are not analysed yet

head#1801 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

head#38 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

head#39 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

head#46 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

head#50 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

head#58 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

head#59 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

head#66 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

head#83 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

head#84 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

head#85 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

head#89 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

head#94 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

head#99 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

hex#56 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

hex#7 = (...) => (
  | undefined
  | ch["charCodeAt"](0)["toString"](16)["toUpperCase"]()
)

i#22 = (???*0* | 0 | ???*1* | 1)
- *0* i
  ⚠️  pattern without value
- *1* updated with update expression

i#9 = (???*0* | 0 | ???*1*)
- *0* i
  ⚠️  pattern without value
- *1* updated with update expression

ignoreCase#107 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

ignoreCase#108 = ???*0*
- *0* arguments[2]
  ⚠️  function calls are not analysed yet

input = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

inverted = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

j = (???*0* | 1 | ???*1*)
- *0* j
  ⚠️  pattern without value
- *1* updated with update expression

joins = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

key = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

left = ???*0*
- *0* left
  ⚠️  pattern without value

list = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

literalEscape = (...) => (
  | undefined
  | s["replace"](/\\/g, "\\\\")["replace"](/"/g, "\\\"")["replace"](/\0/g, "\\0")["replace"](/\t/g, "\\t")["replace"](/\n/g, "\\n")["replace"](/\r/g, "\\r")["replace"](/[\x00-\x0F]/g, *anonymous function 1822*)["replace"](/[\x10-\x1F\x7F-\x9F]/g, *anonymous function 1920*)
)

location#105 = ???*0*
- *0* max number of linking steps reached

location#106 = ???*0*
- *0* max number of linking steps reached

location#123 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

location#124 = ???*0*
- *0* arguments[2]
  ⚠️  function calls are not analysed yet

location#28 = (...) => (undefined | peg$computeLocation(peg$savedPos, peg$currPos))

location#5 = ???*0*
- *0* arguments[3]
  ⚠️  function calls are not analysed yet

message#106 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

message#123 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

message#5 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

name#48 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

name#49 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

name#65 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

object#86 = ???*0*
- *0* object
  ⚠️  pattern without value

object#95 = ???*0*
- *0* object
  ⚠️  pattern without value

operator#1802 = ???*0*
- *0* operator
  ⚠️  pattern without value

operator#87 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

options = (???*0* | ???*1* | {})
- *0* arguments[1]
  ⚠️  function calls are not analysed yet
- *1* options
  ⚠️  circular variable reference

order = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

orderBy = ???*0*
- *0* arguments[4]
  ⚠️  function calls are not analysed yet

p = (???*0* | ???*1* | ???*2*)
- *0* p
  ⚠️  pattern without value
- *1* unsupported expression
- *2* updated with update expression

parent = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

parts = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

peg$FAILED = {}

peg$SyntaxError = (...) => undefined

peg$anyExpectation = (...) => (undefined | {"type": "any"})

peg$buildSimpleError = (...) => (undefined | ???*0*)
- *0* unknown new expression

peg$buildStructuredError = (...) => (undefined | ???*0*)
- *0* unknown new expression

peg$c0 = (...) => (undefined | {"type": "sql", "body": body})

peg$c1 = (...) => (undefined | v)

peg$c10 = (...) => (undefined | {"type": "select_specification", "value": value})

peg$c100 = (
  | undefined
  | {"type": "literal", "text": "NOT", "ignoreCase": true}
)

peg$c101 = (...) => (undefined | "NOT")

peg$c102 = "between"

peg$c103 = (
  | undefined
  | {"type": "literal", "text": "BETWEEN", "ignoreCase": true}
)

peg$c104 = "exists"

peg$c105 = (
  | undefined
  | {"type": "literal", "text": "EXISTS", "ignoreCase": true}
)

peg$c106 = "array"

peg$c107 = (
  | undefined
  | {"type": "literal", "text": "ARRAY", "ignoreCase": true}
)

peg$c108 = "null"

peg$c109 = (
  | undefined
  | {"type": "literal", "text": "null", "ignoreCase": false}
)

peg$c11 = ","

peg$c110 = "true"

peg$c111 = (
  | undefined
  | {"type": "literal", "text": "true", "ignoreCase": false}
)

peg$c112 = "false"

peg$c113 = (
  | undefined
  | {"type": "literal", "text": "false", "ignoreCase": false}
)

peg$c114 = "udf"

peg$c115 = (
  | undefined
  | {"type": "literal", "text": "udf", "ignoreCase": false}
)

peg$c116 = (...) => (undefined | {"type": "identifier", "name": name})

peg$c117 = /^[a-zA-Z_]/

peg$c118 = (
  | undefined
  | {"type": "class", "parts": [["a", "z"], ["A", "Z"], "_"], "inverted": false, "ignoreCase": false}
)

peg$c119 = /^[a-zA-Z0-9_]/

peg$c12 = (
  | undefined
  | {"type": "literal", "text": ",", "ignoreCase": false}
)

peg$c120 = (
  | undefined
  | {
        "type": "class",
        "parts": [["a", "z"], ["A", "Z"], ["0", "9"], "_"],
        "inverted": false,
        "ignoreCase": false
    }
)

peg$c121 = (...) => (undefined | (head + tail["join"]("")))

peg$c122 = "@"

peg$c123 = (
  | undefined
  | {"type": "literal", "text": "@", "ignoreCase": false}
)

peg$c124 = (...) => (undefined | {"type": "parameter_name", "name": text()})

peg$c125 = "+"

peg$c126 = (
  | undefined
  | {"type": "literal", "text": "+", "ignoreCase": false}
)

peg$c127 = "~"

peg$c128 = (
  | undefined
  | {"type": "literal", "text": "~", "ignoreCase": false}
)

peg$c129 = "\\"

peg$c13 = (...) => (undefined | v)

peg$c130 = (
  | undefined
  | {"type": "literal", "text": "\\", "ignoreCase": false}
)

peg$c131 = (...) => (undefined | text())

peg$c132 = (...) => (undefined | seq)

peg$c133 = (undefined | {"type": "any"})

peg$c134 = "b"

peg$c135 = (
  | undefined
  | {"type": "literal", "text": "b", "ignoreCase": false}
)

peg$c136 = (...) => (undefined | "\b")

peg$c137 = "f"

peg$c138 = (
  | undefined
  | {"type": "literal", "text": "f", "ignoreCase": false}
)

peg$c139 = (...) => (undefined | "\f")

peg$c14 = (...) => (
  | undefined
  | {"type": "object_property_list", "properties": ???*0*}
)
- *0* spread is not supported

peg$c140 = "n"

peg$c141 = (
  | undefined
  | {"type": "literal", "text": "n", "ignoreCase": false}
)

peg$c142 = (...) => (undefined | "\n")

peg$c143 = "r"

peg$c144 = (
  | undefined
  | {"type": "literal", "text": "r", "ignoreCase": false}
)

peg$c145 = (...) => (undefined | "\r")

peg$c146 = "t"

peg$c147 = (
  | undefined
  | {"type": "literal", "text": "t", "ignoreCase": false}
)

peg$c148 = (...) => (undefined | "\t")

peg$c149 = (...) => (undefined | text())

peg$c15 = (...) => (undefined | v)

peg$c150 = "u"

peg$c151 = (
  | undefined
  | {"type": "literal", "text": "u", "ignoreCase": false}
)

peg$c152 = (...) => (
  | undefined
  | FreeVar(String)["fromCharCode"](FreeVar(parseInt)(digits, 16))
)

peg$c153 = /^[0-9a-f]/i

peg$c154 = (
  | undefined
  | {"type": "class", "parts": [["0", "9"], ["a", "f"]], "inverted": false, "ignoreCase": true}
)

peg$c155 = (...) => (undefined | v)

peg$c156 = (...) => (undefined | {"property": property, "alias": alias})

peg$c157 = (...) => (undefined | expression)

peg$c158 = (...) => (
  | undefined
  | {"type": "array_subquery_expression", "expression": expression}
)

peg$c159 = (...) => (
  | undefined
  | {"type": "exists_subquery_expression", "expression": expression}
)

peg$c16 = (...) => (
  | undefined
  | {"type": "from_specification", "source": source, "joins": joins}
)

peg$c160 = (...) => (
  | undefined
  | {"type": "scalar_subquery_expression", "expression": expression}
)

peg$c161 = (...) => (undefined | {"property": property, "computed": false})

peg$c162 = (...) => (undefined | {"property": property, "computed": true})

peg$c163 = (...) => (undefined | tail["reduce"](*arrow function 13694*, head))

peg$c164 = (...) => (
  | undefined
  | {"type": "scalar_unary_expression", "operator": operator, "argument": argument}
)

peg$c165 = "?"

peg$c166 = (
  | undefined
  | {"type": "literal", "text": "?", "ignoreCase": false}
)

peg$c167 = ":"

peg$c168 = (
  | undefined
  | {"type": "literal", "text": ":", "ignoreCase": false}
)

peg$c169 = (...) => (
  | undefined
  | {
        "type": "scalar_conditional_expression",
        "test": test,
        "consequent": consequent,
        "alternate": alternate
    }
)

peg$c17 = (...) => (
  | undefined
  | {"type": "from_source", "expression": expression, "alias": alias, "iteration": true}
)

peg$c170 = "??"

peg$c171 = (
  | undefined
  | {"type": "literal", "text": "??", "ignoreCase": false}
)

peg$c172 = (...) => (undefined | buildBinaryExpression(head, tail))

peg$c173 = "="

peg$c174 = (
  | undefined
  | {"type": "literal", "text": "=", "ignoreCase": false}
)

peg$c175 = "!="

peg$c176 = (
  | undefined
  | {"type": "literal", "text": "!=", "ignoreCase": false}
)

peg$c177 = "<>"

peg$c178 = (
  | undefined
  | {"type": "literal", "text": "<>", "ignoreCase": false}
)

peg$c179 = "<="

peg$c18 = (...) => (undefined | v)

peg$c180 = (
  | undefined
  | {"type": "literal", "text": "<=", "ignoreCase": false}
)

peg$c181 = ">="

peg$c182 = (
  | undefined
  | {"type": "literal", "text": ">=", "ignoreCase": false}
)

peg$c183 = "<"

peg$c184 = (
  | undefined
  | {"type": "literal", "text": "<", "ignoreCase": false}
)

peg$c185 = ">"

peg$c186 = (
  | undefined
  | {"type": "literal", "text": ">", "ignoreCase": false}
)

peg$c187 = (...) => (
  | undefined
  | {"type": "scalar_in_expression", "value": value, "list": list}
)

peg$c188 = (...) => (
  | undefined
  | {"type": "scalar_between_expression", "value": value, "begin": begin, "end": end}
)

peg$c189 = "|"

peg$c19 = (...) => (
  | undefined
  | {"type": "from_source", "expression": expression, "alias": alias}
)

peg$c190 = (
  | undefined
  | {"type": "literal", "text": "|", "ignoreCase": false}
)

peg$c191 = "^"

peg$c192 = (
  | undefined
  | {"type": "literal", "text": "^", "ignoreCase": false}
)

peg$c193 = "&"

peg$c194 = (
  | undefined
  | {"type": "literal", "text": "&", "ignoreCase": false}
)

peg$c195 = "<<"

peg$c196 = (
  | undefined
  | {"type": "literal", "text": "<<", "ignoreCase": false}
)

peg$c197 = ">>>"

peg$c198 = (
  | undefined
  | {"type": "literal", "text": ">>>", "ignoreCase": false}
)

peg$c199 = ">>"

peg$c2 = (...) => (undefined | v)

peg$c20 = (...) => (
  | undefined
  | {"type": "filter_condition", "condition": condition}
)

peg$c200 = (
  | undefined
  | {"type": "literal", "text": ">>", "ignoreCase": false}
)

peg$c201 = "||"

peg$c202 = (
  | undefined
  | {"type": "literal", "text": "||", "ignoreCase": false}
)

peg$c203 = "/"

peg$c204 = (
  | undefined
  | {"type": "literal", "text": "/", "ignoreCase": false}
)

peg$c205 = "%"

peg$c206 = (
  | undefined
  | {"type": "literal", "text": "%", "ignoreCase": false}
)

peg$c207 = (...) => (undefined | {"key": key, "value": value})

peg$c208 = (...) => (
  | undefined
  | {"type": "collection_expression", "expression": expression}
)

peg$c209 = (...) => (undefined | tail["reduce"](*arrow function 16259*, head))

peg$c21 = (...) => (
  | undefined
  | {"type": "sort_specification", "expressions": ???*0*}
)
- *0* spread is not supported

peg$c210 = (...) => (
  | undefined
  | {"type": "collection_subquery_expression", "expression": expression}
)

peg$c211 = (...) => (undefined | {"type": "top_specification", "value": value})

peg$c212 = (...) => (
  | undefined
  | {"type": "number_constant", "value": FreeVar(Number)(text())}
)

peg$c213 = (...) => (undefined | ???*0* | [])
- *0* spread is not supported

peg$c214 = (...) => (undefined | subquery)

peg$c22 = (...) => (
  | undefined
  | {"type": "sort_expression", "expression": expression, "order": order}
)

peg$c23 = "."

peg$c24 = (
  | undefined
  | {"type": "literal", "text": ".", "ignoreCase": false}
)

peg$c25 = "("

peg$c26 = (
  | undefined
  | {"type": "literal", "text": "(", "ignoreCase": false}
)

peg$c27 = ")"

peg$c28 = (
  | undefined
  | {"type": "literal", "text": ")", "ignoreCase": false}
)

peg$c29 = (...) => (
  | undefined
  | {"type": "scalar_function_expression", "name": name, "arguments": args, "udf": true}
)

peg$c3 = (...) => (undefined | v)

peg$c30 = (...) => (
  | undefined
  | {"type": "scalar_function_expression", "name": name, "arguments": args}
)

peg$c31 = "{"

peg$c32 = (
  | undefined
  | {"type": "literal", "text": "{", "ignoreCase": false}
)

peg$c33 = "}"

peg$c34 = (
  | undefined
  | {"type": "literal", "text": "}", "ignoreCase": false}
)

peg$c35 = (...) => (
  | undefined
  | {"type": "scalar_object_expression", "properties": (???*0* | [])}
)
- *0* spread is not supported

peg$c36 = "["

peg$c37 = (
  | undefined
  | {"type": "literal", "text": "[", "ignoreCase": false}
)

peg$c38 = "]"

peg$c39 = (
  | undefined
  | {"type": "literal", "text": "]", "ignoreCase": false}
)

peg$c4 = (...) => (undefined | v)

peg$c40 = (...) => (
  | undefined
  | {"type": "scalar_array_expression", "elements": elements}
)

peg$c41 = "undefined"

peg$c42 = (
  | undefined
  | {"type": "literal", "text": "undefined", "ignoreCase": false}
)

peg$c43 = (...) => (undefined | {"type": "undefined_constant"})

peg$c44 = (...) => (undefined | {"type": "null_constant"})

peg$c45 = (...) => (undefined | {"type": "boolean_constant", "value": false})

peg$c46 = (...) => (undefined | {"type": "boolean_constant", "value": true})

peg$c47 = "-"

peg$c48 = (
  | undefined
  | {"type": "literal", "text": "-", "ignoreCase": false}
)

peg$c49 = "0x"

peg$c5 = (...) => (
  | undefined
  | {
        "type": "select_query",
        "top": top,
        "select": select,
        "from": from,
        "where": where,
        "orderBy": orderBy
    }
)

peg$c50 = (
  | undefined
  | {"type": "literal", "text": "0x", "ignoreCase": false}
)

peg$c51 = /^[0-9]/

peg$c52 = (
  | undefined
  | {"type": "class", "parts": [["0", "9"]], "inverted": false, "ignoreCase": false}
)

peg$c53 = (...) => (
  | undefined
  | {
        "type": "number_constant",
        "value": (FreeVar(parseInt)(text(), 16) | FreeVar(parseFloat)(text()))
    }
)

peg$c54 = "\""

peg$c55 = (
  | undefined
  | {"type": "literal", "text": "\"", "ignoreCase": false}
)

peg$c56 = (...) => (
  | undefined
  | {"type": "string_constant", "value": chars["join"]("")}
)

peg$c57 = "'"

peg$c58 = (
  | undefined
  | {"type": "literal", "text": "'", "ignoreCase": false}
)

peg$c59 = (...) => (undefined | {"type": "array_constant", "elements": ???*0*})
- *0* spread is not supported

peg$c6 = "*"

peg$c60 = (...) => (undefined | {"type": "object_constant", "properties": ???*0*})
- *0* spread is not supported

peg$c61 = /^[ \t\n\r]/

peg$c62 = (
  | undefined
  | {"type": "class", "parts": [" ", "\t", "\n", "\r"], "inverted": false, "ignoreCase": false}
)

peg$c63 = "--"

peg$c64 = (
  | undefined
  | {"type": "literal", "text": "--", "ignoreCase": false}
)

peg$c65 = /^[\n\r]/

peg$c66 = (
  | undefined
  | {"type": "class", "parts": ["\n", "\r"], "inverted": false, "ignoreCase": false}
)

peg$c67 = "select"

peg$c68 = (
  | undefined
  | {"type": "literal", "text": "SELECT", "ignoreCase": true}
)

peg$c69 = "top"

peg$c7 = (
  | undefined
  | {"type": "literal", "text": "*", "ignoreCase": false}
)

peg$c70 = (
  | undefined
  | {"type": "literal", "text": "TOP", "ignoreCase": true}
)

peg$c71 = "from"

peg$c72 = (
  | undefined
  | {"type": "literal", "text": "FROM", "ignoreCase": true}
)

peg$c73 = "where"

peg$c74 = (
  | undefined
  | {"type": "literal", "text": "WHERE", "ignoreCase": true}
)

peg$c75 = "order"

peg$c76 = (
  | undefined
  | {"type": "literal", "text": "ORDER", "ignoreCase": true}
)

peg$c77 = "by"

peg$c78 = (
  | undefined
  | {"type": "literal", "text": "BY", "ignoreCase": true}
)

peg$c79 = "as"

peg$c8 = (...) => (undefined | {"type": "select_specification", "*": true})

peg$c80 = (
  | undefined
  | {"type": "literal", "text": "AS", "ignoreCase": true}
)

peg$c81 = "join"

peg$c82 = (
  | undefined
  | {"type": "literal", "text": "JOIN", "ignoreCase": true}
)

peg$c83 = "in"

peg$c84 = (
  | undefined
  | {"type": "literal", "text": "IN", "ignoreCase": true}
)

peg$c85 = "value"

peg$c86 = (
  | undefined
  | {"type": "literal", "text": "VALUE", "ignoreCase": true}
)

peg$c87 = "asc"

peg$c88 = (
  | undefined
  | {"type": "literal", "text": "ASC", "ignoreCase": true}
)

peg$c89 = (...) => (undefined | "ASC")

peg$c9 = (...) => (
  | undefined
  | {"type": "select_specification", "properties": properties}
)

peg$c90 = "desc"

peg$c91 = (
  | undefined
  | {"type": "literal", "text": "DESC", "ignoreCase": true}
)

peg$c92 = (...) => (undefined | "DESC")

peg$c93 = "and"

peg$c94 = (
  | undefined
  | {"type": "literal", "text": "AND", "ignoreCase": true}
)

peg$c95 = (...) => (undefined | "AND")

peg$c96 = "or"

peg$c97 = (
  | undefined
  | {"type": "literal", "text": "OR", "ignoreCase": true}
)

peg$c98 = (...) => (undefined | "OR")

peg$c99 = "not"

peg$classExpectation = (...) => (
  | undefined
  | {"type": "class", "parts": parts, "inverted": inverted, "ignoreCase": ignoreCase}
)

peg$computeLocation = (...) => (
  | undefined
  | {
        "start": {"offset": startPos, "line": startPosDetails["line"], "column": startPosDetails["column"]},
        "end": {"offset": endPos, "line": endPosDetails["line"], "column": endPosDetails["column"]}
    }
)

peg$computePosDetails = (...) => (undefined | details)

peg$currPos = ???*0*
- *0* max number of linking steps reached

peg$endExpectation = (...) => (undefined | {"type": "end"})

peg$fail = (...) => (undefined | FreeVar(undefined))

peg$literalExpectation = (...) => (
  | undefined
  | {"type": "literal", "text": text, "ignoreCase": ignoreCase}
)

peg$maxFailExpected = []

peg$maxFailPos = ???*0*
- *0* max number of linking steps reached

peg$otherExpectation = (...) => (undefined | {"type": "other", "description": description})

peg$parse = (...) => (undefined | peg$result)

peg$parse_ = (...) => (undefined | s0)

peg$parseand = (...) => (undefined | s0)

peg$parsearray = (...) => (undefined | s0)

peg$parsearray_constant = (...) => (undefined | s0)

peg$parsearray_subquery_expression = (...) => (undefined | s0)

peg$parseas = (...) => (undefined | s0)

peg$parseasc = (...) => (undefined | s0)

peg$parsebetween = (...) => (undefined | s0)

peg$parseboolean_constant = (...) => (undefined | s0)

peg$parseby = (...) => (undefined | s0)

peg$parsecharactor_escape_sequence = (...) => (undefined | s0)

peg$parsecollection_expression = (...) => (undefined | s0)

peg$parsecollection_member_expression = (...) => (undefined | s0)

peg$parsecollection_primary_expression = (...) => (undefined | s0)

peg$parsecollection_subquery_expression = (...) => (undefined | s0)

peg$parsecomment = (...) => (undefined | s0)

peg$parseconstant = (...) => (undefined | s0)

peg$parsedesc = (...) => (undefined | s0)

peg$parsedouble_string_character = (...) => (undefined | s0)

peg$parseescape_character = (...) => (undefined | s0)

peg$parseescape_sequence = (...) => (undefined | s0)

peg$parseexists = (...) => (undefined | s0)

peg$parseexists_subquery_expression = (...) => (undefined | s0)

peg$parsefalse = (...) => (undefined | s0)

peg$parsefilter_condition = (...) => (undefined | s0)

peg$parsefrom = (...) => (undefined | s0)

peg$parsefrom_source = (...) => (undefined | s0)

peg$parsefrom_specification = (...) => (undefined | s0)

peg$parsehex_digit = (...) => (undefined | s0)

peg$parseidentifier = (...) => (undefined | s0)

peg$parseidentifier_name = (...) => (undefined | s0)

peg$parseidentifier_start = (...) => (undefined | s0)

peg$parsein = (...) => (undefined | s0)

peg$parsejoin = (...) => (undefined | s0)

peg$parsenon_escape_character = (...) => (undefined | s0)

peg$parsenot = (...) => (undefined | s0)

peg$parsenull = (...) => (undefined | s0)

peg$parsenull_constant = (...) => (undefined | s0)

peg$parsenumber_constant = (...) => (undefined | s0)

peg$parseobject_constant = (...) => (undefined | s0)

peg$parseobject_constant_property = (...) => (undefined | s0)

peg$parseobject_property = (...) => (undefined | s0)

peg$parseobject_property_list = (...) => (undefined | s0)

peg$parseor = (...) => (undefined | s0)

peg$parseorder = (...) => (undefined | s0)

peg$parseparameter_name = (...) => (undefined | s0)

peg$parsereserved = (...) => (undefined | s0)

peg$parsescalar_array_expression = (...) => (undefined | s0)

peg$parsescalar_between_expression = (...) => (undefined | s0)

peg$parsescalar_binary_additive_expression = (...) => (undefined | s0)

peg$parsescalar_binary_and_expression = (...) => (undefined | s0)

peg$parsescalar_binary_bitwise_and_expression = (...) => (undefined | s0)

peg$parsescalar_binary_bitwise_or_expression = (...) => (undefined | s0)

peg$parsescalar_binary_bitwise_xor_expression = (...) => (undefined | s0)

peg$parsescalar_binary_equality_expression = (...) => (undefined | s0)

peg$parsescalar_binary_multiplicative_expression = (...) => (undefined | s0)

peg$parsescalar_binary_or_expression = (...) => (undefined | s0)

peg$parsescalar_binary_relational_expression = (...) => (undefined | s0)

peg$parsescalar_binary_shift_expression = (...) => (undefined | s0)

peg$parsescalar_conditional_expression = (...) => (undefined | s0)

peg$parsescalar_expression_list = (...) => (undefined | s0)

peg$parsescalar_function_expression = (...) => (undefined | s0)

peg$parsescalar_in_expression = (...) => (undefined | s0)

peg$parsescalar_member_expression = (...) => (undefined | s0)

peg$parsescalar_object_element_property = (...) => (undefined | s0)

peg$parsescalar_object_expression = (...) => (undefined | s0)

peg$parsescalar_primary_expression = (...) => (undefined | s0)

peg$parsescalar_subquery_expression = (...) => (undefined | s0)

peg$parsescalar_unary_expression = (...) => (undefined | s0)

peg$parseselect = (...) => (undefined | s0)

peg$parseselect_query = (...) => (undefined | s0)

peg$parseselect_specification = (...) => (undefined | s0)

peg$parsesingle_escape_character = (...) => (undefined | s0)

peg$parsesingle_string_character = (...) => (undefined | s0)

peg$parsesort_expression = (...) => (undefined | s0)

peg$parsesort_specification = (...) => (undefined | s0)

peg$parsesource_character = (...) => (undefined | s0)

peg$parsesql = (...) => (undefined | s0)

peg$parsestring_constant = (...) => (undefined | s0)

peg$parsesubquery = (...) => (undefined | s0)

peg$parsesubquery_expression = (...) => (undefined | s0)

peg$parsetop = (...) => (undefined | s0)

peg$parsetop_specification = (...) => (undefined | s0)

peg$parsetrue = (...) => (undefined | s0)

peg$parseudf = (...) => (undefined | s0)

peg$parseunary_operator = (...) => (undefined | s0)

peg$parseundefined_constant = (...) => (undefined | s0)

peg$parseunicode_escape_sequence = (...) => (undefined | s0)

peg$parseunsigned_integer = (...) => (undefined | s0)

peg$parsevalue = (...) => (undefined | s0)

peg$parsewhere = (...) => (undefined | s0)

peg$parsewhitespace = (...) => (undefined | s0)

peg$posDetailsCache = [{"line": 1, "column": 1}]

peg$result = ???*0*
- *0* max number of linking steps reached

peg$savedPos = ???*0*
- *0* max number of linking steps reached

peg$silentFails = (0 | ???*0*)
- *0* updated with update expression

peg$startRuleFunction = ((...) => (undefined | s0) | ???*0*)
- *0* {}[???*1*]
  ⚠️  unknown object prototype methods or values
- *1* ???*2*["startRule"]
  ⚠️  unknown object
- *2* arguments[1]
  ⚠️  function calls are not analysed yet

peg$startRuleFunctions = {"sql": (...) => (undefined | s0)}

peg$subclass = (...) => undefined

pos = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

properties = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

property#77 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

property#78 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

property#83 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

property#84 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

right = ???*0*
- *0* right
  ⚠️  pattern without value

s#15 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

s#18 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

s0#1019 = ???*0*
- *0* max number of linking steps reached

s0#1026 = ???*0*
- *0* max number of linking steps reached

s0#1031 = ???*0*
- *0* max number of linking steps reached

s0#1049 = (???*0* | ???*1* | {})
- *0* s0
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s0#1053 = ???*0*
- *0* max number of linking steps reached

s0#1070 = ???*0*
- *0* max number of linking steps reached

s0#1093 = ???*0*
- *0* max number of linking steps reached

s0#1096 = ???*0*
- *0* max number of linking steps reached

s0#1103 = ???*0*
- *0* max number of linking steps reached

s0#1110 = ???*0*
- *0* max number of linking steps reached

s0#1112 = ???*0*
- *0* max number of linking steps reached

s0#1186 = ???*0*
- *0* max number of linking steps reached

s0#1195 = ???*0*
- *0* max number of linking steps reached

s0#1221 = ???*0*
- *0* max number of linking steps reached

s0#125 = ???*0*
- *0* max number of linking steps reached

s0#1251 = ???*0*
- *0* max number of linking steps reached

s0#1273 = ???*0*
- *0* max number of linking steps reached

s0#1317 = ???*0*
- *0* max number of linking steps reached

s0#132 = ???*0*
- *0* max number of linking steps reached

s0#1369 = ???*0*
- *0* max number of linking steps reached

s0#1395 = ???*0*
- *0* max number of linking steps reached

s0#1415 = ???*0*
- *0* max number of linking steps reached

s0#1443 = ???*0*
- *0* max number of linking steps reached

s0#1471 = ???*0*
- *0* max number of linking steps reached

s0#1499 = ???*0*
- *0* max number of linking steps reached

s0#1543 = ???*0*
- *0* max number of linking steps reached

s0#1587 = ???*0*
- *0* max number of linking steps reached

s0#1631 = ???*0*
- *0* max number of linking steps reached

s0#1646 = ???*0*
- *0* max number of linking steps reached

s0#1661 = ???*0*
- *0* max number of linking steps reached

s0#1663 = ???*0*
- *0* max number of linking steps reached

s0#1739 = ???*0*
- *0* max number of linking steps reached

s0#1741 = ???*0*
- *0* max number of linking steps reached

s0#1744 = ???*0*
- *0* max number of linking steps reached

s0#1755 = ???*0*
- *0* max number of linking steps reached

s0#1784 = ???*0*
- *0* max number of linking steps reached

s0#187 = ???*0*
- *0* max number of linking steps reached

s0#201 = ???*0*
- *0* max number of linking steps reached

s0#229 = ???*0*
- *0* max number of linking steps reached

s0#251 = ???*0*
- *0* max number of linking steps reached

s0#279 = ???*0*
- *0* max number of linking steps reached

s0#282 = ???*0*
- *0* max number of linking steps reached

s0#284 = ???*0*
- *0* max number of linking steps reached

s0#312 = ???*0*
- *0* max number of linking steps reached

s0#323 = ???*0*
- *0* max number of linking steps reached

s0#376 = ???*0*
- *0* max number of linking steps reached

s0#419 = ???*0*
- *0* max number of linking steps reached

s0#436 = ???*0*
- *0* max number of linking steps reached

s0#443 = ???*0*
- *0* max number of linking steps reached

s0#448 = ???*0*
- *0* max number of linking steps reached

s0#450 = ???*0*
- *0* max number of linking steps reached

s0#454 = ???*0*
- *0* max number of linking steps reached

s0#497 = ???*0*
- *0* max number of linking steps reached

s0#525 = ???*0*
- *0* max number of linking steps reached

s0#567 = ???*0*
- *0* max number of linking steps reached

s0#609 = (???*0* | [])
- *0* s0
  ⚠️  pattern without value

s0#613 = (???*0* | ???*1* | {})
- *0* s0
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s0#617 = ???*0*
- *0* max number of linking steps reached

s0#644 = ???*0*
- *0* max number of linking steps reached

s0#654 = ???*0*
- *0* max number of linking steps reached

s0#664 = ???*0*
- *0* max number of linking steps reached

s0#674 = ???*0*
- *0* max number of linking steps reached

s0#684 = ???*0*
- *0* max number of linking steps reached

s0#694 = ???*0*
- *0* max number of linking steps reached

s0#704 = ???*0*
- *0* max number of linking steps reached

s0#714 = ???*0*
- *0* max number of linking steps reached

s0#724 = ???*0*
- *0* max number of linking steps reached

s0#734 = ???*0*
- *0* max number of linking steps reached

s0#744 = ???*0*
- *0* max number of linking steps reached

s0#754 = ???*0*
- *0* max number of linking steps reached

s0#764 = ???*0*
- *0* max number of linking steps reached

s0#774 = ???*0*
- *0* max number of linking steps reached

s0#784 = ???*0*
- *0* max number of linking steps reached

s0#794 = ???*0*
- *0* max number of linking steps reached

s0#804 = ???*0*
- *0* max number of linking steps reached

s0#814 = ???*0*
- *0* max number of linking steps reached

s0#824 = ???*0*
- *0* max number of linking steps reached

s0#834 = ???*0*
- *0* max number of linking steps reached

s0#844 = ???*0*
- *0* max number of linking steps reached

s0#854 = ???*0*
- *0* max number of linking steps reached

s0#864 = ???*0*
- *0* max number of linking steps reached

s0#886 = ???*0*
- *0* max number of linking steps reached

s0#893 = (???*0* | ???*1* | {})
- *0* s0
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s0#897 = ???*0*
- *0* max number of linking steps reached

s0#909 = ???*0*
- *0* max number of linking steps reached

s0#917 = ???*0*
- *0* max number of linking steps reached

s0#930 = ???*0*
- *0* max number of linking steps reached

s0#952 = ???*0*
- *0* max number of linking steps reached

s0#974 = (???*0* | ???*1* | {})
- *0* s0
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s0#978 = ???*0*
- *0* max number of linking steps reached

s0#980 = ???*0*
- *0* max number of linking steps reached

s0#982 = ???*0*
- *0* max number of linking steps reached

s1#1019 = ???*0*
- *0* max number of linking steps reached

s1#1031 = ???*0*
- *0* max number of linking steps reached

s1#1053 = ???*0*
- *0* max number of linking steps reached

s1#1070 = ???*0*
- *0* max number of linking steps reached

s1#1096 = ???*0*
- *0* max number of linking steps reached

s1#1103 = ???*0*
- *0* max number of linking steps reached

s1#1110 = ???*0*
- *0* max number of linking steps reached

s1#1112 = ???*0*
- *0* max number of linking steps reached

s1#1186 = ???*0*
- *0* max number of linking steps reached

s1#1195 = ???*0*
- *0* max number of linking steps reached

s1#1221 = ???*0*
- *0* max number of linking steps reached

s1#125 = ???*0*
- *0* max number of linking steps reached

s1#1251 = ???*0*
- *0* max number of linking steps reached

s1#1273 = ???*0*
- *0* max number of linking steps reached

s1#1317 = ???*0*
- *0* max number of linking steps reached

s1#132 = ???*0*
- *0* max number of linking steps reached

s1#1369 = ???*0*
- *0* max number of linking steps reached

s1#1395 = ???*0*
- *0* max number of linking steps reached

s1#1415 = ???*0*
- *0* max number of linking steps reached

s1#1443 = ???*0*
- *0* max number of linking steps reached

s1#1471 = ???*0*
- *0* max number of linking steps reached

s1#1499 = ???*0*
- *0* max number of linking steps reached

s1#1543 = ???*0*
- *0* max number of linking steps reached

s1#1587 = ???*0*
- *0* max number of linking steps reached

s1#1631 = ???*0*
- *0* max number of linking steps reached

s1#1646 = ???*0*
- *0* max number of linking steps reached

s1#1661 = ???*0*
- *0* max number of linking steps reached

s1#1663 = ???*0*
- *0* max number of linking steps reached

s1#1739 = ???*0*
- *0* max number of linking steps reached

s1#1741 = ???*0*
- *0* max number of linking steps reached

s1#1744 = (???*0* | [] | {} | undefined | {"type": "number_constant", "value": ???*1*})
- *0* s1
  ⚠️  pattern without value
- *1* ???*2*(text())
  ⚠️  unknown callee
- *2* FreeVar(Number)
  ⚠️  unknown global

s1#1755 = ???*0*
- *0* max number of linking steps reached

s1#1784 = ???*0*
- *0* max number of linking steps reached

s1#187 = ???*0*
- *0* max number of linking steps reached

s1#201 = ???*0*
- *0* max number of linking steps reached

s1#229 = ???*0*
- *0* max number of linking steps reached

s1#251 = ???*0*
- *0* max number of linking steps reached

s1#282 = ???*0*
- *0* max number of linking steps reached

s1#284 = ???*0*
- *0* max number of linking steps reached

s1#312 = ???*0*
- *0* max number of linking steps reached

s1#323 = ???*0*
- *0* max number of linking steps reached

s1#376 = ???*0*
- *0* max number of linking steps reached

s1#419 = ???*0*
- *0* max number of linking steps reached

s1#443 = (???*0* | "undefined" | {} | undefined | {"type": "undefined_constant"})
- *0* s1
  ⚠️  pattern without value

s1#448 = ???*0*
- *0* max number of linking steps reached

s1#450 = ???*0*
- *0* max number of linking steps reached

s1#454 = (???*0* | "-" | {} | null | undefined | {"type": "number_constant", "value": ???*1*})
- *0* s1
  ⚠️  pattern without value
- *1* ???*2*(text(), 16)
  ⚠️  unknown callee
- *2* FreeVar(parseInt)
  ⚠️  unknown global

s1#497 = (
  | ???*0*
  | "\""
  | {}
  | undefined
  | {"type": "string_constant", "value": (???*1* | ???*3*)}
  | "'"
)
- *0* s1
  ⚠️  pattern without value
- *1* ???*2*["join"]("")
  ⚠️  unknown callee object
- *2* s2
  ⚠️  pattern without value
- *3* ???*4*("")
  ⚠️  unknown callee
- *4* []["join"]
  ⚠️  non-num constant property on array

s1#525 = ???*0*
- *0* max number of linking steps reached

s1#567 = ???*0*
- *0* max number of linking steps reached

s1#609 = ???*0*
- *0* max number of linking steps reached

s1#617 = (
  | ???*0*
  | "--"
  | {}
  | [(???*1* | "--" | {} | [???*2*, (???*3* | [])]), (???*4* | [])]
)
- *0* s1
  ⚠️  pattern without value
- *1* s1
  ⚠️  pattern without value
- *2* s1
  ⚠️  circular variable reference
- *3* s2
  ⚠️  pattern without value
- *4* s2
  ⚠️  pattern without value

s1#644 = ???*0*
- *0* max number of linking steps reached

s1#654 = ???*0*
- *0* max number of linking steps reached

s1#664 = ???*0*
- *0* max number of linking steps reached

s1#674 = ???*0*
- *0* max number of linking steps reached

s1#684 = ???*0*
- *0* max number of linking steps reached

s1#694 = ???*0*
- *0* max number of linking steps reached

s1#704 = ???*0*
- *0* max number of linking steps reached

s1#714 = ???*0*
- *0* max number of linking steps reached

s1#724 = ???*0*
- *0* max number of linking steps reached

s1#734 = ???*0*
- *0* max number of linking steps reached

s1#744 = (???*0* | ???*1* | {} | undefined | "ASC")
- *0* s1
  ⚠️  pattern without value
- *1* ???*2*["substr"](peg$currPos, 3)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s1#754 = (???*0* | ???*1* | {} | undefined | "DESC")
- *0* s1
  ⚠️  pattern without value
- *1* ???*2*["substr"](peg$currPos, 4)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s1#764 = (???*0* | ???*1* | {} | undefined | "AND")
- *0* s1
  ⚠️  pattern without value
- *1* ???*2*["substr"](peg$currPos, 3)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s1#774 = (???*0* | ???*1* | {} | undefined | "OR")
- *0* s1
  ⚠️  pattern without value
- *1* ???*2*["substr"](peg$currPos, 2)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s1#784 = (???*0* | ???*1* | {} | undefined | "NOT")
- *0* s1
  ⚠️  pattern without value
- *1* ???*2*["substr"](peg$currPos, 3)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s1#794 = ???*0*
- *0* max number of linking steps reached

s1#804 = ???*0*
- *0* max number of linking steps reached

s1#814 = ???*0*
- *0* max number of linking steps reached

s1#824 = ???*0*
- *0* max number of linking steps reached

s1#834 = ???*0*
- *0* max number of linking steps reached

s1#844 = ???*0*
- *0* max number of linking steps reached

s1#854 = ???*0*
- *0* max number of linking steps reached

s1#886 = ???*0*
- *0* max number of linking steps reached

s1#897 = (
  | ???*0*
  | undefined
  | ???*1*
  | {}
  | ((???*3* | undefined | ???*4* | {} | ???*6*) + (???*12* | ???*14*))
)
- *0* s1
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet
- *3* s1
  ⚠️  pattern without value
- *4* ???*5*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *5* arguments[0]
  ⚠️  function calls are not analysed yet
- *6* (???*7* + (???*8* | ???*10*))
  ⚠️  nested operation
- *7* s1
  ⚠️  circular variable reference
- *8* ???*9*["join"]("")
  ⚠️  unknown callee object
- *9* s2
  ⚠️  pattern without value
- *10* ???*11*("")
  ⚠️  unknown callee
- *11* []["join"]
  ⚠️  non-num constant property on array
- *12* ???*13*["join"]("")
  ⚠️  unknown callee object
- *13* s2
  ⚠️  pattern without value
- *14* ???*15*("")
  ⚠️  unknown callee
- *15* []["join"]
  ⚠️  non-num constant property on array

s1#909 = (
  | ???*0*
  | "@"
  | {}
  | undefined
  | {"type": "parameter_name", "name": (undefined | ???*1*)}
)
- *0* s1
  ⚠️  pattern without value
- *1* ???*2*["substring"](peg$savedPos, peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s1#930 = ???*0*
- *0* max number of linking steps reached

s1#952 = ???*0*
- *0* max number of linking steps reached

s1#982 = (???*0* | "b" | {} | undefined | "\b" | "f" | "\f" | "n" | "\n" | "r" | "\r" | "t" | "\t")
- *0* s1
  ⚠️  pattern without value

s10#132 = ???*0*
- *0* max number of linking steps reached

s10#323 = (???*0* | undefined | [])
- *0* s10
  ⚠️  pattern without value

s11#132 = ???*0*
- *0* max number of linking steps reached

s11#323 = (???*0* | ")" | {})
- *0* s11
  ⚠️  pattern without value

s12 = ???*0*
- *0* max number of linking steps reached

s13 = (???*0* | undefined | [])
- *0* s13
  ⚠️  pattern without value

s14 = ???*0*
- *0* max number of linking steps reached

s15 = (???*0* | undefined | [])
- *0* s15
  ⚠️  pattern without value

s16 = ???*0*
- *0* max number of linking steps reached

s2#1019 = ???*0*
- *0* max number of linking steps reached

s2#1031 = ???*0*
- *0* max number of linking steps reached

s2#1053 = ???*0*
- *0* max number of linking steps reached

s2#1070 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#1096 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#1103 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#1112 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#1186 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#1195 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#1221 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#125 = ???*0*
- *0* max number of linking steps reached

s2#1251 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#1273 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#1317 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#132 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#1369 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#1395 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#1415 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#1443 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#1471 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#1499 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#1543 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#1587 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#1631 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#1646 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#1663 = (???*0* | [] | {})
- *0* s2
  ⚠️  pattern without value

s2#1744 = (???*0* | ???*1* | {})
- *0* s2
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s2#1755 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#1784 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#187 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#201 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#229 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#251 = ???*0*
- *0* max number of linking steps reached

s2#284 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#312 = ???*0*
- *0* max number of linking steps reached

s2#323 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#376 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#419 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#454 = (???*0* | "0x" | {} | null)
- *0* s2
  ⚠️  pattern without value

s2#497 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#525 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#567 = (???*0* | undefined | [])
- *0* s2
  ⚠️  pattern without value

s2#617 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#644 = ???*0*
- *0* max number of linking steps reached

s2#654 = ???*0*
- *0* max number of linking steps reached

s2#664 = ???*0*
- *0* max number of linking steps reached

s2#674 = ???*0*
- *0* max number of linking steps reached

s2#684 = ???*0*
- *0* max number of linking steps reached

s2#694 = ???*0*
- *0* max number of linking steps reached

s2#704 = ???*0*
- *0* max number of linking steps reached

s2#714 = ???*0*
- *0* max number of linking steps reached

s2#724 = ???*0*
- *0* max number of linking steps reached

s2#734 = ???*0*
- *0* max number of linking steps reached

s2#744 = ???*0*
- *0* max number of linking steps reached

s2#754 = ???*0*
- *0* max number of linking steps reached

s2#764 = ???*0*
- *0* max number of linking steps reached

s2#774 = ???*0*
- *0* max number of linking steps reached

s2#784 = ???*0*
- *0* max number of linking steps reached

s2#794 = ???*0*
- *0* max number of linking steps reached

s2#804 = ???*0*
- *0* max number of linking steps reached

s2#814 = ???*0*
- *0* max number of linking steps reached

s2#824 = ???*0*
- *0* max number of linking steps reached

s2#834 = ???*0*
- *0* max number of linking steps reached

s2#844 = ???*0*
- *0* max number of linking steps reached

s2#854 = ???*0*
- *0* max number of linking steps reached

s2#886 = ???*0*
- *0* max number of linking steps reached

s2#897 = (???*0* | [])
- *0* s2
  ⚠️  pattern without value

s2#909 = ???*0*
- *0* max number of linking steps reached

s2#930 = ???*0*
- *0* max number of linking steps reached

s2#952 = ???*0*
- *0* max number of linking steps reached

s3#1031 = ???*0*
- *0* max number of linking steps reached

s3#1053 = ???*0*
- *0* max number of linking steps reached

s3#1070 = ???*0*
- *0* max number of linking steps reached

s3#1096 = ???*0*
- *0* max number of linking steps reached

s3#1103 = ???*0*
- *0* max number of linking steps reached

s3#1112 = ???*0*
- *0* max number of linking steps reached

s3#1186 = ???*0*
- *0* max number of linking steps reached

s3#1195 = (???*0* | "?" | {})
- *0* s3
  ⚠️  pattern without value

s3#1221 = ???*0*
- *0* max number of linking steps reached

s3#125 = (???*0* | undefined | [])
- *0* s3
  ⚠️  pattern without value

s3#1251 = ???*0*
- *0* max number of linking steps reached

s3#1273 = ???*0*
- *0* max number of linking steps reached

s3#1317 = ???*0*
- *0* max number of linking steps reached

s3#132 = ???*0*
- *0* max number of linking steps reached

s3#1369 = ???*0*
- *0* max number of linking steps reached

s3#1395 = ???*0*
- *0* max number of linking steps reached

s3#1415 = ???*0*
- *0* max number of linking steps reached

s3#1443 = ???*0*
- *0* max number of linking steps reached

s3#1471 = ???*0*
- *0* max number of linking steps reached

s3#1499 = ???*0*
- *0* max number of linking steps reached

s3#1543 = ???*0*
- *0* max number of linking steps reached

s3#1587 = ???*0*
- *0* max number of linking steps reached

s3#1631 = (???*0* | ":" | {})
- *0* s3
  ⚠️  pattern without value

s3#1646 = (???*0* | ":" | {})
- *0* s3
  ⚠️  pattern without value

s3#1663 = ???*0*
- *0* max number of linking steps reached

s3#1755 = ???*0*
- *0* max number of linking steps reached

s3#1784 = ???*0*
- *0* max number of linking steps reached

s3#187 = ???*0*
- *0* max number of linking steps reached

s3#201 = ???*0*
- *0* max number of linking steps reached

s3#229 = ???*0*
- *0* max number of linking steps reached

s3#251 = ???*0*
- *0* max number of linking steps reached

s3#284 = ???*0*
- *0* max number of linking steps reached

s3#312 = ???*0*
- *0* max number of linking steps reached

s3#323 = (???*0* | "." | {} | "(")
- *0* s3
  ⚠️  pattern without value

s3#376 = ???*0*
- *0* max number of linking steps reached

s3#419 = ???*0*
- *0* max number of linking steps reached

s3#454 = (???*0* | [] | {})
- *0* s3
  ⚠️  pattern without value

s3#497 = ???*0*
- *0* max number of linking steps reached

s3#525 = ???*0*
- *0* max number of linking steps reached

s3#567 = ???*0*
- *0* max number of linking steps reached

s3#617 = ???*0*
- *0* max number of linking steps reached

s3#644 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#654 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#664 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#674 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#684 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#694 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#704 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#714 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#724 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#734 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#744 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#754 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#764 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#774 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#784 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#794 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#804 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#814 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#824 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#834 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#844 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#854 = (???*0* | undefined | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s3#897 = (???*0* | ???*1* | {})
- *0* s3
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s4#1031 = (
  | ???*0*
  | undefined
  | ???*1*
  | {}
  | [
        (
          | ???*3*
          | undefined
          | ???*4*
          | {}
          | [
                ???*6*,
                (???*7* | undefined | ???*8* | {}),
                (???*10* | undefined | ???*11* | {}),
                (???*13* | undefined | ???*14* | {})
            ]
        ),
        (???*16* | undefined | ???*17* | {}),
        (???*19* | undefined | ???*20* | {}),
        (???*22* | undefined | ???*23* | {})
    ]
)
- *0* s4
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet
- *3* s4
  ⚠️  pattern without value
- *4* ???*5*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *5* arguments[0]
  ⚠️  function calls are not analysed yet
- *6* s4
  ⚠️  circular variable reference
- *7* s5
  ⚠️  pattern without value
- *8* ???*9*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *9* arguments[0]
  ⚠️  function calls are not analysed yet
- *10* s6
  ⚠️  pattern without value
- *11* ???*12*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *12* arguments[0]
  ⚠️  function calls are not analysed yet
- *13* s7
  ⚠️  pattern without value
- *14* ???*15*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *15* arguments[0]
  ⚠️  function calls are not analysed yet
- *16* s5
  ⚠️  pattern without value
- *17* ???*18*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *18* arguments[0]
  ⚠️  function calls are not analysed yet
- *19* s6
  ⚠️  pattern without value
- *20* ???*21*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *21* arguments[0]
  ⚠️  function calls are not analysed yet
- *22* s7
  ⚠️  pattern without value
- *23* ???*24*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *24* arguments[0]
  ⚠️  function calls are not analysed yet

s4#1053 = ???*0*
- *0* max number of linking steps reached

s4#1070 = (???*0* | undefined | [])
- *0* s4
  ⚠️  pattern without value

s4#1112 = ???*0*
- *0* max number of linking steps reached

s4#1195 = (???*0* | undefined | [])
- *0* s4
  ⚠️  pattern without value

s4#1221 = ???*0*
- *0* max number of linking steps reached

s4#1251 = ???*0*
- *0* max number of linking steps reached

s4#1273 = ???*0*
- *0* max number of linking steps reached

s4#1317 = ???*0*
- *0* max number of linking steps reached

s4#132 = ???*0*
- *0* max number of linking steps reached

s4#1369 = (???*0* | undefined | [])
- *0* s4
  ⚠️  pattern without value

s4#1395 = (???*0* | undefined | [])
- *0* s4
  ⚠️  pattern without value

s4#1415 = ???*0*
- *0* max number of linking steps reached

s4#1443 = ???*0*
- *0* max number of linking steps reached

s4#1471 = ???*0*
- *0* max number of linking steps reached

s4#1499 = ???*0*
- *0* max number of linking steps reached

s4#1543 = ???*0*
- *0* max number of linking steps reached

s4#1587 = ???*0*
- *0* max number of linking steps reached

s4#1631 = (???*0* | undefined | [])
- *0* s4
  ⚠️  pattern without value

s4#1646 = (???*0* | undefined | [])
- *0* s4
  ⚠️  pattern without value

s4#1663 = ???*0*
- *0* max number of linking steps reached

s4#1755 = ???*0*
- *0* max number of linking steps reached

s4#1784 = (???*0* | undefined | [])
- *0* s4
  ⚠️  pattern without value

s4#201 = ???*0*
- *0* max number of linking steps reached

s4#229 = ???*0*
- *0* max number of linking steps reached

s4#251 = ???*0*
- *0* max number of linking steps reached

s4#284 = ???*0*
- *0* max number of linking steps reached

s4#312 = ???*0*
- *0* max number of linking steps reached

s4#323 = (???*0* | undefined | [])
- *0* s4
  ⚠️  pattern without value

s4#376 = (???*0* | [])
- *0* s4
  ⚠️  pattern without value

s4#419 = (???*0* | undefined | [])
- *0* s4
  ⚠️  pattern without value

s4#454 = ???*0*
- *0* max number of linking steps reached

s4#525 = (???*0* | [])
- *0* s4
  ⚠️  pattern without value

s4#567 = (???*0* | [])
- *0* s4
  ⚠️  pattern without value

s4#617 = ???*0*
- *0* max number of linking steps reached

s5#1031 = (???*0* | undefined | ???*1* | {})
- *0* s5
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s5#1053 = ???*0*
- *0* max number of linking steps reached

s5#1070 = (???*0* | ")" | {})
- *0* s5
  ⚠️  pattern without value

s5#1112 = (???*0* | "." | {} | "[")
- *0* s5
  ⚠️  pattern without value

s5#1195 = ???*0*
- *0* max number of linking steps reached

s5#1221 = ???*0*
- *0* max number of linking steps reached

s5#1251 = ???*0*
- *0* max number of linking steps reached

s5#1273 = (???*0* | "=" | {} | "!=" | "<>")
- *0* s5
  ⚠️  pattern without value

s5#1317 = (???*0* | "<=" | {} | ">=" | "<" | ">")
- *0* s5
  ⚠️  pattern without value

s5#132 = ???*0*
- *0* max number of linking steps reached

s5#1369 = (???*0* | "(" | {})
- *0* s5
  ⚠️  pattern without value

s5#1395 = ???*0*
- *0* max number of linking steps reached

s5#1415 = (???*0* | "|" | {})
- *0* s5
  ⚠️  pattern without value

s5#1443 = (???*0* | "^" | {})
- *0* s5
  ⚠️  pattern without value

s5#1471 = (???*0* | "&" | {})
- *0* s5
  ⚠️  pattern without value

s5#1499 = (???*0* | "<<" | {} | ">>>" | ">>")
- *0* s5
  ⚠️  pattern without value

s5#1543 = (???*0* | "+" | {} | "-" | "||")
- *0* s5
  ⚠️  pattern without value

s5#1587 = (???*0* | "*" | {} | "/" | "%")
- *0* s5
  ⚠️  pattern without value

s5#1631 = ???*0*
- *0* max number of linking steps reached

s5#1646 = ???*0*
- *0* max number of linking steps reached

s5#1663 = (???*0* | "." | {} | "[")
- *0* s5
  ⚠️  pattern without value

s5#1755 = (???*0* | "," | {})
- *0* s5
  ⚠️  pattern without value

s5#1784 = (???*0* | ")" | {})
- *0* s5
  ⚠️  pattern without value

s5#201 = (???*0* | "," | {})
- *0* s5
  ⚠️  pattern without value

s5#229 = ???*0*
- *0* max number of linking steps reached

s5#251 = ???*0*
- *0* max number of linking steps reached

s5#284 = (???*0* | "," | {})
- *0* s5
  ⚠️  pattern without value

s5#323 = ???*0*
- *0* max number of linking steps reached

s5#376 = ???*0*
- *0* max number of linking steps reached

s5#419 = (???*0* | "]" | {})
- *0* s5
  ⚠️  pattern without value

s5#454 = (
  | ???*0*
  | "."
  | {}
  | [(???*1* | "." | {} | [???*2*, (???*3* | [] | {})]), (???*4* | [] | {})]
)
- *0* s5
  ⚠️  pattern without value
- *1* s5
  ⚠️  pattern without value
- *2* s5
  ⚠️  circular variable reference
- *3* s6
  ⚠️  pattern without value
- *4* s6
  ⚠️  pattern without value

s5#525 = ???*0*
- *0* max number of linking steps reached

s5#567 = ???*0*
- *0* max number of linking steps reached

s5#617 = (???*0* | ???*1* | {} | undefined)
- *0* s5
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s6#1031 = (???*0* | undefined | ???*1* | {})
- *0* s6
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s6#1112 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#1195 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#1221 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#1251 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#1273 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#1317 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#132 = ???*0*
- *0* max number of linking steps reached

s6#1369 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#1395 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#1415 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#1443 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#1471 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#1499 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#1543 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#1587 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#1663 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#1755 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#201 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#229 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#284 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#323 = (???*0* | undefined | [])
- *0* s6
  ⚠️  pattern without value

s6#376 = ???*0*
- *0* max number of linking steps reached

s6#454 = (???*0* | [] | {})
- *0* s6
  ⚠️  pattern without value

s6#525 = ???*0*
- *0* max number of linking steps reached

s6#567 = ???*0*
- *0* max number of linking steps reached

s7#1031 = (???*0* | undefined | ???*1* | {})
- *0* s7
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s7#1112 = ???*0*
- *0* max number of linking steps reached

s7#1195 = (???*0* | ":" | {})
- *0* s7
  ⚠️  pattern without value

s7#1221 = ???*0*
- *0* max number of linking steps reached

s7#1251 = ???*0*
- *0* max number of linking steps reached

s7#1273 = ???*0*
- *0* max number of linking steps reached

s7#1317 = ???*0*
- *0* max number of linking steps reached

s7#132 = ???*0*
- *0* max number of linking steps reached

s7#1369 = ???*0*
- *0* max number of linking steps reached

s7#1395 = ???*0*
- *0* max number of linking steps reached

s7#1415 = ???*0*
- *0* max number of linking steps reached

s7#1443 = ???*0*
- *0* max number of linking steps reached

s7#1471 = ???*0*
- *0* max number of linking steps reached

s7#1499 = ???*0*
- *0* max number of linking steps reached

s7#1543 = ???*0*
- *0* max number of linking steps reached

s7#1587 = ???*0*
- *0* max number of linking steps reached

s7#1663 = ???*0*
- *0* max number of linking steps reached

s7#1755 = ???*0*
- *0* max number of linking steps reached

s7#201 = ???*0*
- *0* max number of linking steps reached

s7#229 = ???*0*
- *0* max number of linking steps reached

s7#284 = ???*0*
- *0* max number of linking steps reached

s7#323 = (???*0* | "(" | {} | ")")
- *0* s7
  ⚠️  pattern without value

s7#376 = (???*0* | "," | {})
- *0* s7
  ⚠️  pattern without value

s7#454 = (???*0* | ???*1* | {})
- *0* s7
  ⚠️  pattern without value
- *1* ???*2*["charAt"](peg$currPos)
  ⚠️  unknown callee object
- *2* arguments[0]
  ⚠️  function calls are not analysed yet

s7#525 = (???*0* | "," | {})
- *0* s7
  ⚠️  pattern without value

s7#567 = (???*0* | "," | {})
- *0* s7
  ⚠️  pattern without value

s8#1112 = (???*0* | undefined | [])
- *0* s8
  ⚠️  pattern without value

s8#1195 = (???*0* | undefined | [])
- *0* s8
  ⚠️  pattern without value

s8#132 = ???*0*
- *0* max number of linking steps reached

s8#1369 = (???*0* | undefined | [])
- *0* s8
  ⚠️  pattern without value

s8#1395 = (???*0* | undefined | [])
- *0* s8
  ⚠️  pattern without value

s8#1663 = (???*0* | undefined | [])
- *0* s8
  ⚠️  pattern without value

s8#323 = (???*0* | undefined | [])
- *0* s8
  ⚠️  pattern without value

s8#376 = (???*0* | undefined | [])
- *0* s8
  ⚠️  pattern without value

s8#525 = (???*0* | undefined | [])
- *0* s8
  ⚠️  pattern without value

s8#567 = (???*0* | undefined | [])
- *0* s8
  ⚠️  pattern without value

s9#1112 = (???*0* | "]" | {})
- *0* s9
  ⚠️  pattern without value

s9#1195 = ???*0*
- *0* max number of linking steps reached

s9#132 = ???*0*
- *0* max number of linking steps reached

s9#1369 = (???*0* | ")" | {})
- *0* s9
  ⚠️  pattern without value

s9#1395 = ???*0*
- *0* max number of linking steps reached

s9#1663 = (???*0* | "]" | {})
- *0* s9
  ⚠️  pattern without value

s9#323 = ???*0*
- *0* max number of linking steps reached

s9#376 = ???*0*
- *0* max number of linking steps reached

s9#525 = ???*0*
- *0* max number of linking steps reached

s9#567 = ???*0*
- *0* max number of linking steps reached

select#31 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

select#32 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

select#33 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

select#34 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

seq = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

source#40 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

source#41 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

startPos = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

startPosDetails = (undefined | {"line": 1, "column": 1} | ???*0* | {"line": ???*2*, "column": ???*4*})
- *0* [][???*1*]
  ⚠️  unknown array prototype methods or values
- *1* arguments[0]
  ⚠️  function calls are not analysed yet
- *2* ???*3*["line"]
  ⚠️  unknown object
- *3* details
  ⚠️  circular variable reference
- *4* ???*5*["column"]
  ⚠️  unknown object
- *5* details
  ⚠️  circular variable reference

subquery = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

tail#1801 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

tail#39 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

tail#46 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

tail#50 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

tail#58 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

tail#59 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

tail#66 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

tail#85 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

tail#89 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

tail#94 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

tail#99 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

test = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

text#107 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

text#28 = (...) => (undefined | input["substring"](peg$savedPos, peg$currPos))

top#31 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

top#32 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

top#33 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

top#34 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

v#30 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

v#31 = ???*0*
- *0* arguments[2]
  ⚠️  function calls are not analysed yet

v#32 = ???*0*
- *0* arguments[3]
  ⚠️  function calls are not analysed yet

v#33 = ???*0*
- *0* arguments[4]
  ⚠️  function calls are not analysed yet

v#38 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

v#40 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

v#43 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

v#77 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

value#37 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

value#90 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

value#91 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

value#92 = ???*0*
- *0* arguments[1]
  ⚠️  function calls are not analysed yet

value#97 = ???*0*
- *0* arguments[0]
  ⚠️  function calls are not analysed yet

where#33 = ???*0*
- *0* arguments[3]
  ⚠️  function calls are not analysed yet

where#34 = ???*0*
- *0* arguments[3]
  ⚠️  function calls are not analysed yet
