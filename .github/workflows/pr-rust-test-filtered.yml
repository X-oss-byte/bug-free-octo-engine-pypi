name: Test

on:
  push:
    # Runs on every commit on main that affects turbopack
    branches: [main]
    paths:
      - "crates/**"
      - "Cargo.*"
      - ".cargo/**"
      - ".github/**"
      - "rust-toolchain"
  pull_request:
    # Runs on every PR affects turbopack
    branches: [main]
    paths:
      - "crates/**"
      - "Cargo.*"
      - ".cargo/**"
      - ".github/**"
      - "rust-toolchain"

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

concurrency:
  group: test-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: ubuntu
            runner: ubuntu-latest-16-core-oss
            nextest: linux
          - name: macos
            runner: macos-latest
            nextest: mac
          - name: windows
            runner: windows-latest
            nextest: windows-tar
    runs-on: ${{ matrix.os.runner }}
    name: test - ${{ matrix.os.name }}

    steps:
      - name: Set git to use LF line endings
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
        if: matrix.os.name == 'windows'

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup rust
        uses: actions-rs/toolchain@v1

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: test

      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: 6
        if: matrix.os.name == 'ubuntu'

      - name: Set Redis URL
        run: echo "BULL_REDIS_CONNECTION=redis://127.0.0.1:6379" >> $GITHUB_ENV
        if: matrix.os.name == 'ubuntu'

      - uses: ./.github/actions/setup-go
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - uses: ./.github/actions/setup-node

      - name: Prepare toolchain on Windows
        run: |
          pnpx node-gyp install
          choco install protoc -y
          echo 'node-linker = "hoisted"' > crates/turbopack/tests/node-file-trace/.npmrc
        if: matrix.os.name == 'windows'

      - name: Install tests dependencies
        working-directory: crates/turbopack/tests/node-file-trace
        run: pnpm install -r --side-effects-cache false

      - name: Install tests dependencies in examples/basic
        working-directory: examples/basic
        run: npm install

      - name: Install nextest
        run: curl -LsSf https://get.nexte.st/latest/${{ matrix.os.nextest }} | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
        shell: bash

      - name: Run nextest
        uses: actions-rs/cargo@v1
        timeout-minutes: 120
        with:
          command: nextest
          args: run --workspace --release --no-fail-fast

  test-bench:
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: ubuntu
            runner: ubuntu-latest-16-core-oss
            nextest: linux
          - name: macos
            runner: macos-latest
            nextest: mac
          # Temporarily disable windows bench due to consistent timeouts
          # - name: windows
          #   runner: windows-2019
          #   nextest: windows-tar
    runs-on: ${{ matrix.os.runner }}
    name: test-bench - ${{ matrix.os.name }}

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
        if: matrix.os.name == 'windows'
      - uses: actions/checkout@v3

      - name: Setup rust
        uses: actions-rs/toolchain@v1

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: test-bench

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: ./.github/actions/setup-go
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Run cargo test on benchmarks
        uses: actions-rs/cargo@v1
        timeout-minutes: 120
        env:
          TURBOPACK_BENCH_COUNTS: "100"
        with:
          command: test
          args: --benches --release
