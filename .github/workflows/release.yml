name: Release

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      increment:
        description: "SemVer Increment"
        required: true
        default: "prerelease"
        type: choice
        options:
          - prerelease
          - prepatch
          - preminor
          - premajor
          - patch
          - minor
          - major
      identifier:
        description: "npm Tag"
        required: true
        default: "canary"
        type: choice
        options:
          - canary
          - latest

# Plan:
# 1. verification step -> lint, test
# 2. in parallel, build artifacts
# 3. Download artifacts, run publish process, including npm. No building / verification here
jobs:
  smoke-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.TURBOBOT }}
      - uses: ./.github/actions/setup-node
        with:
          enable-corepack: false
      - uses: ./.github/actions/setup-go
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: test
        run: pnpm -- turbo run test --filter=cli --color

  darwin:
    needs: [smoke-test]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.TURBOBOT }}
      - uses: ./.github/actions/setup-node
        with:
          enable-corepack: false
      - uses: ./.github/actions/setup-go
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: latest
          install-only: true
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
      - name: Version
        run: |
          ./scripts/version.js ${{ inputs.increment }} ${{ inputs.identifier }}
          cat version.txt
      - name: Build Artifacts
        run: cd cli && make publish-turbo-darwin
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: turbo-artifacts-darwin
          path: cli/dist-darwin

  cross:
    needs: [smoke-test]
    runs-on: ubuntu-latest
    container:
      image: docker://ghcr.io/gsoltis/turbo-cross:v1.18.5
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.TURBOBOT }}
      - uses: ./.github/actions/setup-node
        with:
          enable-corepack: false
      - uses: ./.github/actions/setup-go
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: latest
          install-only: true
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
      - name: Version
        run: |
          ./scripts/version.js ${{ inputs.increment }} ${{ inputs.identifier }}
          cat version.txt
      - name: Build Artifacts
        run: cd cli && make publish-turbo-cross
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: turbo-artifacts-cross
          path: cli/dist-cross

  final-publish:
    needs: [cross, darwin]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.TURBOBOT }}
      - uses: ./.github/actions/setup-node
        with:
          enable-corepack: false
      - uses: ./.github/actions/setup-go
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      # - name: golangci-lint
      #   uses: golangci/golangci-lint-action@v3
      #   with:
      #     # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
      #     version: latest

      #     # Optional: working directory, useful for monorepos
      #     working-directory: cli

      #     # `golangci-lint-action` does not have an "install only" option.
      #     # We ignore the output of this run, instead using it just to install the binary.
      #     args: --issues-exit-code=0

      - name: Configure git
        run: |
          git config --global user.name 'Turbobot'
          git config --global user.email 'turbobot@vercel.com'

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser-pro
          version: latest
          install-only: true
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: Version
        run: |
          ./scripts/version.js ${{ inputs.increment }} ${{ inputs.identifier }}
          cat version.txt

      - name: Download Cross-compiled Artifacts
        uses: actions/download-artifact@v3
        with:
          name: turbo-snapshot-cross
          path: cli/dist-cross

      - name: Download Darwin Artifacts
        uses: actions/download-artifact@v3
        with:
          name: turbo-snapshot-darwin
          path: cli/dist-darwin

      - name: Combine Artifacts
        run: cd cli && mkdir -p dist-combined && cp -a dist-cross/. dist-combined/ && cp -a dist-darwin/. dist-combined/

      - name: Release
        run: cd cli && make publish
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
