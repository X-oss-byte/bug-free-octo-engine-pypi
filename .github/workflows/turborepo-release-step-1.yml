# Turborepo Release Pipeline
#
# This release consists of 3 steps. The first, is this one.
#
# 1. Kick off the release flow with a manual workflow_dispatch
#    which increments the version and creates a new branch,
#    with a commit incrementing version.go as well as version.txt.
#    For more detail, see `stage-release` in cli/Makefile
# 2. Stage two takes the newly-created staging branch and compiles
#    a production Go build, the artifacts for which are stored
#    in the build cache
# 3. Stage three, if it has not successfully run before, builds
#    the rust binaries, and then finally loads both of them
#    into a new container where the final npm package assembly
#    is performed. If opting-in to a dry run, the tarballs will
#    be uploaded and the build will terminate.

name: 1. Turborepo Release (release branch)

# TODO: Once we have confidence with the release process, add an
# input to allow automatically kicking off the downstream release.
on:
  workflow_dispatch:
    inputs:
      increment:
        description: "SemVer Increment (prerelease = bump canary)"
        required: true
        default: "prerelease"
        type: choice
        options:
          - prerelease
          - prepatch
          - preminor
          - premajor
          - patch
          - minor
          - major

jobs:
  stage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.TURBOBOT }}
      - uses: ./.github/actions/setup-node
        with:
          enable-corepack: false
      - name: Configure git
        run: |
          git config --global user.name 'Turbobot'
          git config --global user.email 'turbobot@vercel.com'
      - name: Version
        run: |
          ./scripts/version.js ${{ inputs.increment }}
          cat version.txt
      - name: Stage Commit
        run: cd cli && make stage-release && echo "STAGE_BRANCH=$(git branch --show-current)" >> $GITHUB_ENV
      - name: Show Stage Commit
        run: echo "${{ env.STAGE_BRANCH }}"
