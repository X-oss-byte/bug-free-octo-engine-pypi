name: golangci-lint

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

on:
  # push:
  #   tags:
  #     - v*
  #   branches:
  #     - master
  #     - main
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read
jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
          cache: true
          cache-dependency-path: cli/go.sum

      - name: Set Up Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: "3.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Up Go and GRPC protobuf
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28.0
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2.0

      - name: Setup Protos
        run: cd cli && make compile-protos

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          working-directory: cli

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0
          args: --new-from-rev=${{github.event.pull_request.base.sha}}

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
