name: "Turbo Rust Setup"
description: "Sets up the Rust toolchain for CI"
inputs:
  target:
    description: "Compilation target"
    required: true

  targets:
    description: "Comma-separated list of target triples to install for this toolchain"
    required: false
  components:
    description: "Comma-separated list of components to be additionally installed"
    required: false

  shared-cache-key:
    description: "A cache key that is used instead of the automatic `job`-based key, and is stable over multiple jobs."
    required: false
  cache-key:
    description: "An additional cache key that is added alongside the automatic `job`-based cache key and can be used to further differentiate jobs."
    required: false
  save-cache:
    description: "Determiners whether the cache should be saved. If `false`, the cache is only restored."
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: "Get toolchain version from file"
      id: file
      shell: bash
      run: echo "toolchain=$(cat ./rust-toolchain)" >> $GITHUB_OUTPUT

    - name: "Setup Rust toolchain"
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ steps.file.outputs.toolchain }}
        targets: ${{ inputs.targets }}
        components: ${{ inputs.components }}

    - name: "Set Windows default host to MinGW"
      if: ${{ inputs.target == 'windows' }}
      shell: bash
      run: rustup set default-host x86_64-pc-windows-gnu && rustup show

    - name: "Add cargo problem matchers"
      shell: bash
      run: echo "::add-matcher::.github/actions/setup-rust/matchers.json"

    - name: "Setup Rust Cache"
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ${{ inputs.shared-cache-key }}
        key: ${{ inputs.cache-key }}
        # the cache is huge and we only get 10gb max, so we only save on master
        save-if: ${{ github.ref == 'refs/heads/main' && inputs.save-cache || 'false' }}
