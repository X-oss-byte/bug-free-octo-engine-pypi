{
  "ref": "ef00dc3d76b9b51efe6c68e6272d5400394905df",
  "nextjsVersion": "Next.js v13.1.7-canary.8",
  "result": [
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 1)",
      "name": "test/development/acceptance-app/component-stack.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 9,
        "numPassedTestSuites": 0,
        "numPassedTests": 7,
        "numPendingTestSuites": 0,
        "numPendingTests": 20,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 36,
        "openHandles": [],
        "snapshot": {
          "added": 7,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 1,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 7,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676052299662,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default should strip whitespace correctly with newline",
                "location": null,
                "status": "pending",
                "title": "should strip whitespace correctly with newline"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default module init error not shown",
                "location": null,
                "status": "pending",
                "title": "module init error not shown"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default boundaries",
                "location": null,
                "status": "pending",
                "title": "boundaries"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default internal package errors",
                "location": null,
                "status": "pending",
                "title": "internal package errors"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default unterminated JSX",
                "location": null,
                "status": "pending",
                "title": "unterminated JSX"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default conversion to class component (1)",
                "location": null,
                "status": "pending",
                "title": "conversion to class component (1)"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default css syntax errors",
                "location": null,
                "status": "pending",
                "title": "css syntax errors"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default logbox: anchors links in error messages",
                "location": null,
                "status": "pending",
                "title": "logbox: anchors links in error messages"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default non-Error errors are handled properly",
                "location": null,
                "status": "pending",
                "title": "non-Error errors are handled properly"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default Should not show __webpack_exports__ when exporting anonymous arrow function",
                "location": null,
                "status": "pending",
                "title": "Should not show __webpack_exports__ when exporting anonymous arrow function"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default Unhandled errors and rejections opens up in the minimized state",
                "location": null,
                "status": "pending",
                "title": "Unhandled errors and rejections opens up in the minimized state"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default Call stack count is correct for server error",
                "location": null,
                "status": "pending",
                "title": "Call stack count is correct for server error"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default Call stack count is correct for client error",
                "location": null,
                "status": "pending",
                "title": "Call stack count is correct for client error"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default Server component errors should open up in fullscreen",
                "location": null,
                "status": "pending",
                "title": "Server component errors should open up in fullscreen"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default Import trace when module not found in layout",
                "location": null,
                "status": "pending",
                "title": "Import trace when module not found in layout"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default Can't resolve @import in CSS file",
                "location": null,
                "status": "pending",
                "title": "Can't resolve @import in CSS file"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default server component can recover from error thrown in the module",
                "location": null,
                "status": "pending",
                "title": "server component can recover from error thrown in the module"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default client component can recover from error thrown in the module",
                "location": null,
                "status": "pending",
                "title": "client component can recover from error thrown in the module"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo should strip whitespace correctly with newline",
                "location": null,
                "status": "passed",
                "title": "should strip whitespace correctly with newline"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo module init error not shown",
                "location": null,
                "status": "passed",
                "title": "module init error not shown"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo boundaries",
                "location": null,
                "status": "passed",
                "title": "boundaries"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo internal package errors",
                "location": null,
                "status": "pending",
                "title": "internal package errors"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo unterminated JSX",
                "location": null,
                "status": "passed",
                "title": "unterminated JSX"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/work/test/development/acceptance-app/ReactRefreshLogBox.test.ts:279:45)"
                ],
                "fullName": "ReactRefreshLogBox app turbo conversion to class component (1)",
                "location": null,
                "status": "failed",
                "title": "conversion to class component (1)"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/work/test/development/acceptance-app/ReactRefreshLogBox.test.ts:324:45)"
                ],
                "fullName": "ReactRefreshLogBox app turbo css syntax errors",
                "location": null,
                "status": "failed",
                "title": "css syntax errors"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('[data-nextjs-toast]')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "ReactRefreshLogBox app turbo logbox: anchors links in error messages",
                "location": null,
                "status": "failed",
                "title": "logbox: anchors links in error messages"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo non-Error errors are handled properly",
                "location": null,
                "status": "pending",
                "title": "non-Error errors are handled properly"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/work/test/development/acceptance-app/ReactRefreshLogBox.test.ts:668:45)"
                ],
                "fullName": "ReactRefreshLogBox app turbo Should not show __webpack_exports__ when exporting anonymous arrow function",
                "location": null,
                "status": "failed",
                "title": "Should not show __webpack_exports__ when exporting anonymous arrow function"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('.nextjs-toast-errors')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "ReactRefreshLogBox app turbo Unhandled errors and rejections opens up in the minimized state",
                "location": null,
                "status": "failed",
                "title": "Unhandled errors and rejections opens up in the minimized state"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('[data-nextjs-data-runtime-error-collapsed-action]')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "ReactRefreshLogBox app turbo Call stack count is correct for server error",
                "location": null,
                "status": "failed",
                "title": "Call stack count is correct for server error"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('[data-nextjs-data-runtime-error-collapsed-action]')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "ReactRefreshLogBox app turbo Call stack count is correct for client error",
                "location": null,
                "status": "failed",
                "title": "Call stack count is correct for client error"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#text')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "ReactRefreshLogBox app turbo Server component errors should open up in fullscreen",
                "location": null,
                "status": "failed",
                "title": "Server component errors should open up in fullscreen"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo Import trace when module not found in layout",
                "location": null,
                "status": "passed",
                "title": "Import trace when module not found in layout"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/work/test/development/acceptance-app/ReactRefreshLogBox.test.ts:912:45)"
                ],
                "fullName": "ReactRefreshLogBox app turbo Can't resolve @import in CSS file",
                "location": null,
                "status": "failed",
                "title": "Can't resolve @import in CSS file"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo server component can recover from error thrown in the module",
                "location": null,
                "status": "passed",
                "title": "server component can recover from error thrown in the module"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo client component can recover from error thrown in the module",
                "location": null,
                "status": "passed",
                "title": "client component can recover from error thrown in the module"
              }
            ],
            "endTime": 1676052851330,
            "message": "  ● ReactRefreshLogBox app turbo › conversion to class component (1)\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      277 |       )\n      278 |\n    > 279 |       expect(await session.hasRedbox(true)).toBe(true)\n          |                                             ^\n      280 |       expect(await session.getRedboxSource()).toMatchSnapshot()\n      281 |\n      282 |       await session.patch(\n\n      at Object.<anonymous> (development/acceptance-app/ReactRefreshLogBox.test.ts:279:45)\n\n  ● ReactRefreshLogBox app turbo › css syntax errors\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      322 |       // Syntax error\n      323 |       await session.patch('index.module.css', `.button {`)\n    > 324 |       expect(await session.hasRedbox(true)).toBe(true)\n          |                                             ^\n      325 |       const source = await session.getRedboxSource()\n      326 |       expect(source).toMatch('./index.module.css:1:1')\n      327 |       expect(source).toMatch('Syntax error: ')\n\n      at Object.<anonymous> (development/acceptance-app/ReactRefreshLogBox.test.ts:324:45)\n\n  ● ReactRefreshLogBox app turbo › logbox: anchors links in error messages\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('[data-nextjs-toast]')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● ReactRefreshLogBox app turbo › Should not show __webpack_exports__ when exporting anonymous arrow function\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      666 |       )\n      667 |\n    > 668 |       expect(await session.hasRedbox(true)).toBe(true)\n          |                                             ^\n      669 |       expect(await session.getRedboxSource()).toMatchSnapshot()\n      670 |\n      671 |       await cleanup()\n\n      at Object.<anonymous> (development/acceptance-app/ReactRefreshLogBox.test.ts:668:45)\n\n  ● ReactRefreshLogBox app turbo › Unhandled errors and rejections opens up in the minimized state\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('.nextjs-toast-errors')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● ReactRefreshLogBox app turbo › Call stack count is correct for server error\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('[data-nextjs-data-runtime-error-collapsed-action]')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● ReactRefreshLogBox app turbo › Call stack count is correct for client error\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('[data-nextjs-data-runtime-error-collapsed-action]')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● ReactRefreshLogBox app turbo › Server component errors should open up in fullscreen\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#text')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● ReactRefreshLogBox app turbo › Can't resolve @import in CSS file\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      910 |       )\n      911 |\n    > 912 |       expect(await session.hasRedbox(true)).toBe(true)\n          |                                             ^\n      913 |       expect(await session.getRedboxSource()).toMatchSnapshot()\n      914 |\n      915 |       await cleanup()\n\n      at Object.<anonymous> (development/acceptance-app/ReactRefreshLogBox.test.ts:912:45)\n",
            "name": "/work/test/development/acceptance-app/ReactRefreshLogBox.test.ts",
            "startTime": 1676052299755,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 1)",
      "name": "test/e2e/postcss-config-cjs/index.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 1,
        "numPassedTestSuites": 0,
        "numPassedTests": 6,
        "numPendingTestSuites": 0,
        "numPendingTests": 7,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 14,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676053258237,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should not include edge api routes and edge ssr routes into dev middleware manifest",
                "location": null,
                "status": "passed",
                "title": "should not include edge api routes and edge ssr routes into dev middleware manifest"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should sort edge SSR routes correctly",
                "location": null,
                "status": "passed",
                "title": "should sort edge SSR routes correctly"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should be able to navigate between edge SSR routes without any errors",
                "location": null,
                "status": "passed",
                "title": "should be able to navigate between edge SSR routes without any errors"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should support client side navigation to ssr rsc pages",
                "location": null,
                "status": "pending",
                "title": "should support client side navigation to ssr rsc pages"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should support client side navigation to ssg rsc pages",
                "location": null,
                "status": "pending",
                "title": "should support client side navigation to ssg rsc pages"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should support client side navigation to static rsc pages",
                "location": null,
                "status": "pending",
                "title": "should support client side navigation to static rsc pages"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should not consume server.js file extension",
                "location": null,
                "status": "passed",
                "title": "should not consume server.js file extension"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, open '/tmp/next-install-b643505688babb94316bfb0b3c265f759ecbbb98030afb9b622e8fcdb705b55a/.next/server/middleware-manifest.json'"
                ],
                "fullName": "Switchable runtime Switchable runtime (dev) should build /api/hello and /api/edge as an api route with edge runtime",
                "location": null,
                "status": "failed",
                "title": "should build /api/hello and /api/edge as an api route with edge runtime"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should be possible to switch between runtimes in API routes",
                "location": null,
                "status": "passed",
                "title": "should be possible to switch between runtimes in API routes"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should be possible to switch between runtimes in pages",
                "location": null,
                "status": "passed",
                "title": "should be possible to switch between runtimes in pages"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should be possible to switch between runtimes with same content",
                "location": null,
                "status": "pending",
                "title": "should be possible to switch between runtimes with same content"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should recover from syntax error when using edge runtime",
                "location": null,
                "status": "pending",
                "title": "should recover from syntax error when using edge runtime"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should not crash the dev server when invalid runtime is configured",
                "location": null,
                "status": "pending",
                "title": "should not crash the dev server when invalid runtime is configured"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should give proper errors for invalid runtime in app dir",
                "location": null,
                "status": "pending",
                "title": "should give proper errors for invalid runtime in app dir"
              }
            ],
            "endTime": 1676053298838,
            "message": "  ● Switchable runtime › Switchable runtime (dev) › should build /api/hello and /api/edge as an api route with edge runtime\n\n    ENOENT: no such file or directory, open '/tmp/next-install-b643505688babb94316bfb0b3c265f759ecbbb98030afb9b622e8fcdb705b55a/.next/server/middleware-manifest.json'\n\n\n",
            "name": "/work/test/e2e/switchable-runtime/index.test.ts",
            "startTime": 1676053258331,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 1)",
      "name": "test/integration/compression/test/index.test.js",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 33,
        "numPassedTestSuites": 0,
        "numPassedTests": 125,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 158,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676054670614,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /about/ should redirect to /about",
                "location": null,
                "status": "passed",
                "title": "/about/ should redirect to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /catch-all/hello/world/ should redirect to /catch-all/hello/world",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world/ should redirect to /catch-all/hello/world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /catch-all/hello.world/ should redirect to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello.world/ should redirect to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false / should resolve to /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should resolve to /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /about should resolve to /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /catch-all/hello/world should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /about?hello=world should resolve to /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about?hello=world should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false / should client side render /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should client side render /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /about should client side render /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /catch-all/hello/world should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /about?hello=world should client side render /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about?hello=world should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/ should have href /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should have href /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about should have href /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should have href /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/ should have href /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should have href /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about?hello=world should have href /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should have href /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/?hello=world should have href /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should have href /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello/ should have href /catch-all/hello",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should have href /catch-all/hello"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/ should navigate to /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should navigate to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about should navigate to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should navigate to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/ should navigate to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should navigate to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about?hello=world should navigate to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should navigate to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/?hello=world should navigate to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should navigate to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello/ should navigate to /catch-all/hello",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should navigate to /catch-all/hello"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/ should push route to /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should push route to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about should push route to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should push route to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/ should push route to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should push route to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about?hello=world should push route to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should push route to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/?hello=world should push route to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should push route to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello/ should push route to /catch-all/hello",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should push route to /catch-all/hello"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /external-linker?href=https://nextjs.org should have href https://nextjs.org",
                "location": null,
                "status": "passed",
                "title": "/external-linker?href=https://nextjs.org should have href https://nextjs.org"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
                "location": null,
                "status": "passed",
                "title": "/external-linker?href=https://nextjs.org/ should have href https://nextjs.org/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /about should redirect to /about/",
                "location": null,
                "status": "passed",
                "title": "/about should redirect to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /catch-all/hello/world should redirect to /catch-all/hello/world/",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world should redirect to /catch-all/hello/world/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /catch-all/hello.world/ should redirect to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello.world/ should redirect to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: true / should resolve to /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should resolve to /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at /work/test/integration/trailing-slashes/test/index.test.js:41:26\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /about/ should resolve to /about.js, with router path /about",
                "location": null,
                "status": "failed",
                "title": "/about/ should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /catch-all/hello/world/ should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world/ should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at /work/test/integration/trailing-slashes/test/index.test.js:41:26\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /about/?hello=world should resolve to /about.js, with router path /about",
                "location": null,
                "status": "failed",
                "title": "/about/?hello=world should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: true / should client side render /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should client side render /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#hydration-marker')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /about/ should client side render /about.js, with router path /about",
                "location": null,
                "status": "failed",
                "title": "/about/ should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /catch-all/hello/world/ should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world/ should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#hydration-marker')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /about/?hello=world should client side render /about.js, with router path /about",
                "location": null,
                "status": "failed",
                "title": "/about/?hello=world should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/ should have href /",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/ should have href /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/about/\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about should have href /about/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about should have href /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/about/\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/ should have href /about/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about/ should have href /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/about/?hello=world\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about?hello=world should have href /about/?hello=world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about?hello=world should have href /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/about/?hello=world\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/?hello=world should have href /about/?hello=world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about/?hello=world should have href /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/catch-all/hello/\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello/ should have href /catch-all/hello/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/catch-all/hello/ should have href /catch-all/hello/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/catch-all/hello.world\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/ should navigate to /",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/ should navigate to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about should navigate to /about/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about should navigate to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/ should navigate to /about/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about/ should navigate to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about?hello=world should navigate to /about/?hello=world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about?hello=world should navigate to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/?hello=world should navigate to /about/?hello=world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about/?hello=world should navigate to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello/ should navigate to /catch-all/hello/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/catch-all/hello/ should navigate to /catch-all/hello/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/ should push route to /",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/ should push route to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about should push route to /about/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about should push route to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/ should push route to /about/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about/ should push route to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about?hello=world should push route to /about/?hello=world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about?hello=world should push route to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/?hello=world should push route to /about/?hello=world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about/?hello=world should push route to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello/ should push route to /catch-all/hello/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/catch-all/hello/ should push route to /catch-all/hello/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"https://nextjs.org\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:75:39\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /external-linker?href=https://nextjs.org should have href https://nextjs.org",
                "location": null,
                "status": "failed",
                "title": "/external-linker?href=https://nextjs.org should have href https://nextjs.org"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"https://nextjs.org/\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:75:39\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
                "location": null,
                "status": "failed",
                "title": "/external-linker?href=https://nextjs.org/ should have href https://nextjs.org/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /about/ should redirect to /about",
                "location": null,
                "status": "passed",
                "title": "/about/ should redirect to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /catch-all/hello/world/ should redirect to /catch-all/hello/world",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world/ should redirect to /catch-all/hello/world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /catch-all/hello.world/ should redirect to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello.world/ should redirect to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false / should resolve to /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should resolve to /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /about should resolve to /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /catch-all/hello/world should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /about?hello=world should resolve to /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about?hello=world should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false / should client side render /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should client side render /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /about should client side render /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /catch-all/hello/world should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /about?hello=world should client side render /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about?hello=world should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/ should have href /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should have href /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about should have href /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should have href /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about/ should have href /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should have href /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about?hello=world should have href /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should have href /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about/?hello=world should have href /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should have href /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello/ should have href /catch-all/hello",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should have href /catch-all/hello"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/ should navigate to /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should navigate to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about should navigate to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should navigate to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about/ should navigate to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should navigate to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about?hello=world should navigate to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should navigate to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about/?hello=world should navigate to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should navigate to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello/ should navigate to /catch-all/hello",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should navigate to /catch-all/hello"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/ should push route to /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should push route to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about should push route to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should push route to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about/ should push route to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should push route to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about?hello=world should push route to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should push route to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about/?hello=world should push route to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should push route to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello/ should push route to /catch-all/hello",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should push route to /catch-all/hello"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /external-linker?href=https://nextjs.org should have href https://nextjs.org",
                "location": null,
                "status": "passed",
                "title": "/external-linker?href=https://nextjs.org should have href https://nextjs.org"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
                "location": null,
                "status": "passed",
                "title": "/external-linker?href=https://nextjs.org/ should have href https://nextjs.org/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false should have a redirect in the routesmanifest",
                "location": null,
                "status": "passed",
                "title": "should have a redirect in the routesmanifest"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /about should redirect to /about/",
                "location": null,
                "status": "passed",
                "title": "/about should redirect to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /catch-all/hello/world should redirect to /catch-all/hello/world/",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world should redirect to /catch-all/hello/world/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /catch-all/hello.world/ should redirect to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello.world/ should redirect to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true / should resolve to /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should resolve to /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /about/ should resolve to /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about/ should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /catch-all/hello/world/ should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world/ should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /about/?hello=world should resolve to /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about/?hello=world should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true / should client side render /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should client side render /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /about/ should client side render /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about/ should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /catch-all/hello/world/ should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world/ should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /about/?hello=world should client side render /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about/?hello=world should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/ should have href /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should have href /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about should have href /about/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should have href /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about/ should have href /about/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should have href /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about?hello=world should have href /about/?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should have href /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about/?hello=world should have href /about/?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should have href /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello/ should have href /catch-all/hello/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should have href /catch-all/hello/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/ should navigate to /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should navigate to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about should navigate to /about/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should navigate to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about/ should navigate to /about/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should navigate to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about?hello=world should navigate to /about/?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should navigate to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about/?hello=world should navigate to /about/?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should navigate to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello/ should navigate to /catch-all/hello/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should navigate to /catch-all/hello/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/ should push route to /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should push route to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about should push route to /about/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should push route to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about/ should push route to /about/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should push route to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about?hello=world should push route to /about/?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should push route to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about/?hello=world should push route to /about/?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should push route to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello/ should push route to /catch-all/hello/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should push route to /catch-all/hello/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /external-linker?href=https://nextjs.org should have href https://nextjs.org",
                "location": null,
                "status": "passed",
                "title": "/external-linker?href=https://nextjs.org should have href https://nextjs.org"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
                "location": null,
                "status": "passed",
                "title": "/external-linker?href=https://nextjs.org/ should have href https://nextjs.org/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true should have a redirect in the routesmanifest",
                "location": null,
                "status": "passed",
                "title": "should have a redirect in the routesmanifest"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/about should redirect to /docs/about/",
                "location": null,
                "status": "passed",
                "title": "/docs/about should redirect to /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs should redirect to /docs/",
                "location": null,
                "status": "passed",
                "title": "/docs should redirect to /docs/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/catch-all/hello/world should redirect to /docs/catch-all/hello/world/",
                "location": null,
                "status": "passed",
                "title": "/docs/catch-all/hello/world should redirect to /docs/catch-all/hello/world/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/catch-all/hello.world/ should redirect to /docs/catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/docs/catch-all/hello.world/ should redirect to /docs/catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/docs/about/\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/about should have href /docs/about/",
                "location": null,
                "status": "failed",
                "title": "/docs/linker?href=/about should have href /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/docs/\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/ should have href /docs/",
                "location": null,
                "status": "failed",
                "title": "/docs/linker?href=/ should have href /docs/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/about should navigate to /docs/about/",
                "location": null,
                "status": "failed",
                "title": "/docs/linker?href=/about should navigate to /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/ should navigate to /docs/",
                "location": null,
                "status": "failed",
                "title": "/docs/linker?href=/ should navigate to /docs/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/about should push route to /docs/about/",
                "location": null,
                "status": "failed",
                "title": "/docs/linker?href=/about should push route to /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/ should push route to /docs/",
                "location": null,
                "status": "failed",
                "title": "/docs/linker?href=/ should push route to /docs/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/about should redirect to /docs/about/",
                "location": null,
                "status": "passed",
                "title": "/docs/about should redirect to /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs should redirect to /docs/",
                "location": null,
                "status": "passed",
                "title": "/docs should redirect to /docs/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/catch-all/hello/world should redirect to /docs/catch-all/hello/world/",
                "location": null,
                "status": "passed",
                "title": "/docs/catch-all/hello/world should redirect to /docs/catch-all/hello/world/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/catch-all/hello.world/ should redirect to /docs/catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/docs/catch-all/hello.world/ should redirect to /docs/catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/about should have href /docs/about/",
                "location": null,
                "status": "passed",
                "title": "/docs/linker?href=/about should have href /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/ should have href /docs/",
                "location": null,
                "status": "passed",
                "title": "/docs/linker?href=/ should have href /docs/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/about should navigate to /docs/about/",
                "location": null,
                "status": "passed",
                "title": "/docs/linker?href=/about should navigate to /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/ should navigate to /docs/",
                "location": null,
                "status": "passed",
                "title": "/docs/linker?href=/ should navigate to /docs/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/about should push route to /docs/about/",
                "location": null,
                "status": "passed",
                "title": "/docs/linker?href=/about should push route to /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/ should push route to /docs/",
                "location": null,
                "status": "passed",
                "title": "/docs/linker?href=/ should push route to /docs/"
              }
            ],
            "endTime": 1676055747498,
            "message": "  ● Trailing slashes › dev mode, trailingSlash: true › /about/ should resolve to /about.js, with router path /about\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      39 |     async (route, expectedPage, expectedRouterPath) => {\n      40 |       const res = await fetchViaHTTP(appPort, route, {}, { redirect: 'error' })\n    > 41 |       expect(res.status).toBe(200)\n         |                          ^\n      42 |       const $ = cheerio.load(await res.text())\n      43 |       expect($('#page-marker').text()).toBe(expectedPage)\n      44 |       expect($('#router-pathname').text()).toBe(expectedRouterPath)\n\n      at integration/trailing-slashes/test/index.test.js:41:26\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /about/?hello=world should resolve to /about.js, with router path /about\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      39 |     async (route, expectedPage, expectedRouterPath) => {\n      40 |       const res = await fetchViaHTTP(appPort, route, {}, { redirect: 'error' })\n    > 41 |       expect(res.status).toBe(200)\n         |                          ^\n      42 |       const $ = cheerio.load(await res.text())\n      43 |       expect($('#page-marker').text()).toBe(expectedPage)\n      44 |       expect($('#router-pathname').text()).toBe(expectedRouterPath)\n\n      at integration/trailing-slashes/test/index.test.js:41:26\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /about/ should client side render /about.js, with router path /about\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#hydration-marker')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /about/?hello=world should client side render /about.js, with router path /about\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#hydration-marker')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/ should have href /\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about should have href /about/\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/about/\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about/ should have href /about/\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/about/\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about?hello=world should have href /about/?hello=world\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/about/?hello=world\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about/?hello=world should have href /about/?hello=world\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/about/?hello=world\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/catch-all/hello/ should have href /catch-all/hello/\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/catch-all/hello/\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/catch-all/hello.world\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/ should navigate to /\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about should navigate to /about/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about/ should navigate to /about/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about?hello=world should navigate to /about/?hello=world\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about/?hello=world should navigate to /about/?hello=world\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/catch-all/hello/ should navigate to /catch-all/hello/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/ should push route to /\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about should push route to /about/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about/ should push route to /about/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about?hello=world should push route to /about/?hello=world\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about/?hello=world should push route to /about/?hello=world\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/catch-all/hello/ should push route to /catch-all/hello/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /external-linker?href=https://nextjs.org should have href https://nextjs.org\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"https://nextjs.org\"\n    Received: undefined\n\n      73 |       const content = await renderViaHTTP(appPort, linkPage)\n      74 |       const $ = cheerio.load(content)\n    > 75 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      76 |     }\n      77 |   )\n      78 | }\n\n      at integration/trailing-slashes/test/index.test.js:75:39\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"https://nextjs.org/\"\n    Received: undefined\n\n      73 |       const content = await renderViaHTTP(appPort, linkPage)\n      74 |       const $ = cheerio.load(content)\n    > 75 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      76 |     }\n      77 |   )\n      78 | }\n\n      at integration/trailing-slashes/test/index.test.js:75:39\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, with basepath, trailingSlash: true › /docs/linker?href=/about should have href /docs/about/\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/docs/about/\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, with basepath, trailingSlash: true › /docs/linker?href=/ should have href /docs/\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/docs/\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, with basepath, trailingSlash: true › /docs/linker?href=/about should navigate to /docs/about/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, with basepath, trailingSlash: true › /docs/linker?href=/ should navigate to /docs/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, with basepath, trailingSlash: true › /docs/linker?href=/about should push route to /docs/about/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, with basepath, trailingSlash: true › /docs/linker?href=/ should push route to /docs/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n",
            "name": "/work/test/integration/trailing-slashes/test/index.test.js",
            "startTime": 1676054670711,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 2)",
      "name": "test/development/basic/emotion-swc.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 6,
        "numPassedTestSuites": 0,
        "numPassedTests": 8,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 14,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676052702572,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "createContext called in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:41:9)"
                ],
                "fullName": "Error Overlay for server components createContext called in Server Component should show error when React.createContext is called",
                "location": null,
                "status": "failed",
                "title": "should show error when React.createContext is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "createContext called in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:96:9)"
                ],
                "fullName": "Error Overlay for server components createContext called in Server Component should show error when React.createContext is called in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when React.createContext is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "createContext called in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:150:9)"
                ],
                "fullName": "Error Overlay for server components createContext called in Server Component should show error when createContext is called in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when createContext is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "React component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components React component hooks called in Server Component should show error when React.<client-hook> is called",
                "location": null,
                "status": "passed",
                "title": "should show error when React.<client-hook> is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "React component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components React component hooks called in Server Component should show error when React.<client-hook> is called in external package",
                "location": null,
                "status": "passed",
                "title": "should show error when React.<client-hook> is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "React component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components React component hooks called in Server Component should show error when React client hook is called in external package",
                "location": null,
                "status": "passed",
                "title": "should show error when React client hook is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Class component used in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:328:9)"
                ],
                "fullName": "Error Overlay for server components Class component used in Server Component should show error when Class Component is used",
                "location": null,
                "status": "failed",
                "title": "should show error when Class Component is used"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Class component used in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:381:9)"
                ],
                "fullName": "Error Overlay for server components Class component used in Server Component should show error when React.PureComponent is rendered in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when React.PureComponent is rendered in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Class component used in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:434:9)"
                ],
                "fullName": "Error Overlay for server components Class component used in Server Component should show error when Component is rendered in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when Component is rendered in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useRouter is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useRouter is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSearchParams is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useSearchParams is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSelectedLayoutSegment is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useSelectedLayoutSegment is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSelectedLayoutSegments is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useSelectedLayoutSegments is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when usePathname is called",
                "location": null,
                "status": "passed",
                "title": "should show error when usePathname is called"
              }
            ],
            "endTime": 1676053110520,
            "message": "  ● Error Overlay for server components › createContext called in Server Component › should show error when React.createContext is called\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:41:9)\n\n  ● Error Overlay for server components › createContext called in Server Component › should show error when React.createContext is called in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:96:9)\n\n  ● Error Overlay for server components › createContext called in Server Component › should show error when createContext is called in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:150:9)\n\n  ● Error Overlay for server components › Class component used in Server Component › should show error when Class Component is used\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:328:9)\n\n  ● Error Overlay for server components › Class component used in Server Component › should show error when React.PureComponent is rendered in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:381:9)\n\n  ● Error Overlay for server components › Class component used in Server Component › should show error when Component is rendered in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:434:9)\n",
            "name": "/work/test/development/acceptance-app/server-components.test.ts",
            "startTime": 1676052702667,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 2)",
      "name": "test/e2e/app-dir/app-alias/app-alias.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 3,
        "numPassedTestSuites": 0,
        "numPassedTests": 1,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 4,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676053935525,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "@next/font/google without-preloaded-fonts without _app"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/work/test/e2e/next-font/without-preloaded-fonts.test.ts:47:48)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "@next/font/google without-preloaded-fonts without _app without preload",
                "location": null,
                "status": "failed",
                "title": "without preload"
              },
              {
                "ancestorTitles": [
                  "@next/font/google without-preloaded-fonts without _app"
                ],
                "failureMessages": [],
                "fullName": "@next/font/google without-preloaded-fonts without _app without fonts",
                "location": null,
                "status": "passed",
                "title": "without fonts"
              },
              {
                "ancestorTitles": [
                  "@next/font/google no preloads with _app"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/work/test/e2e/next-font/without-preloaded-fonts.test.ts:107:48)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "@next/font/google no preloads with _app without preload",
                "location": null,
                "status": "failed",
                "title": "without preload"
              },
              {
                "ancestorTitles": [
                  "@next/font/google no preloads with _app"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/work/test/e2e/next-font/without-preloaded-fonts.test.ts:124:48)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "@next/font/google no preloads with _app without fonts",
                "location": null,
                "status": "failed",
                "title": "without fonts"
              }
            ],
            "endTime": 1676053977548,
            "message": "  ● @next/font/google without-preloaded-fonts without _app › without preload\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      45 |\n      46 |     // Preconnect\n    > 47 |     expect($('link[rel=\"preconnect\"]').length).toBe(1)\n         |                                                ^\n      48 |     expect($('link[rel=\"preconnect\"]').get(0).attribs).toEqual({\n      49 |       crossorigin: 'anonymous',\n      50 |       href: '/',\n\n      at Object.<anonymous> (e2e/next-font/without-preloaded-fonts.test.ts:47:48)\n\n  ● @next/font/google no preloads with _app › without preload\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      105 |\n      106 |     // Preconnect\n    > 107 |     expect($('link[rel=\"preconnect\"]').length).toBe(1)\n          |                                                ^\n      108 |     expect($('link[rel=\"preconnect\"]').get(0).attribs).toEqual({\n      109 |       crossorigin: 'anonymous',\n      110 |       href: '/',\n\n      at Object.<anonymous> (e2e/next-font/without-preloaded-fonts.test.ts:107:48)\n          at runMicrotasks (<anonymous>)\n\n  ● @next/font/google no preloads with _app › without fonts\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      122 |\n      123 |     // Preconnect\n    > 124 |     expect($('link[rel=\"preconnect\"]').length).toBe(1)\n          |                                                ^\n      125 |     expect($('link[rel=\"preconnect\"]').get(0).attribs).toEqual({\n      126 |       crossorigin: 'anonymous',\n      127 |       href: '/',\n\n      at Object.<anonymous> (e2e/next-font/without-preloaded-fonts.test.ts:124:48)\n          at runMicrotasks (<anonymous>)\n",
            "name": "/work/test/e2e/next-font/without-preloaded-fonts.test.ts",
            "startTime": 1676053935619,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 2)",
      "name": "test/integration/fallback-false-rewrite/test/index.test.js",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 2,
        "numPassedTestSuites": 0,
        "numPassedTests": 2,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 4,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676054339271,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Relay Compiler Transform - Multi Project Config",
                  "dev mode",
                  "project-a"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Project A\"\nReceived string:    \"Execution of get_from_source failed·\nCaused by:\n    0: Execution of resolve_source_request failed\n    1: Execution of CombinedContentSource::get failed\n    2: Execution of create_app_source failed\n    3: Execution of load_next_config failed\n    4: data did not match any variant of untagged enum RelayLanguage at line 1 column 2410\n         at compiler.relay.language\n              |                                                                                                                                                                                                         v\n            1 + {\\\"env\\\":{},\\\"webpack\\\":null,\\\"webpackDevMiddleware\\\":null,\\\"eslint\\\":{\\\"ignoreDuringBuilds\\\":false},\\\"typesc...,\\\"compiler\\\":{\\\"relay\\\":{\\\"src\\\":\\\"./pages\\\",\\\"artifactDirectory\\\":\\\"./__generated__\\\",\\\"language\\\":\\\"typescript\\\"},\\\"externalDir\\\":true},\\\"headers\\\":[],\\\"rewrites\\\":{\\\"beforeFiles\\\":[],\\\"afterFiles\\\":[],\\\"fallback\\\":[]},\\\"redirects\\\":[{\\\"source\\\":\\\"/:path+/\\\",\\\"destination\\\":\\\"/:path+\\\",\\\"permanent\\\":true,\\\"internal\\\":true}]}\n              |                                                                                                                                                                                                         ^\n       \"\n    at Object.<anonymous> (/work/test/integration/relay-graphql-swc-multi-project/test/index.test.js:21:18)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Relay Compiler Transform - Multi Project Config dev mode project-a should resolve index page correctly",
                "location": null,
                "status": "failed",
                "title": "should resolve index page correctly"
              },
              {
                "ancestorTitles": [
                  "Relay Compiler Transform - Multi Project Config",
                  "dev mode",
                  "project-b"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Project B\"\nReceived string:    \"Execution of get_from_source failed·\nCaused by:\n    0: Execution of resolve_source_request failed\n    1: Execution of CombinedContentSource::get failed\n    2: Execution of create_app_source failed\n    3: Execution of load_next_config failed\n    4: data did not match any variant of untagged enum RelayLanguage at line 1 column 2410\n         at compiler.relay.language\n              |                                                                                                                                                                                                         v\n            1 + {\\\"env\\\":{},\\\"webpack\\\":null,\\\"webpackDevMiddleware\\\":null,\\\"eslint\\\":{\\\"ignoreDuringBuilds\\\":false},\\\"typesc...,\\\"compiler\\\":{\\\"relay\\\":{\\\"src\\\":\\\"./pages\\\",\\\"artifactDirectory\\\":\\\"./__generated__\\\",\\\"language\\\":\\\"typescript\\\"},\\\"externalDir\\\":true},\\\"headers\\\":[],\\\"rewrites\\\":{\\\"beforeFiles\\\":[],\\\"afterFiles\\\":[],\\\"fallback\\\":[]},\\\"redirects\\\":[{\\\"source\\\":\\\"/:path+/\\\",\\\"destination\\\":\\\"/:path+\\\",\\\"permanent\\\":true,\\\"internal\\\":true}]}\n              |                                                                                                                                                                                                         ^\n       \"\n    at Object.<anonymous> (/work/test/integration/relay-graphql-swc-multi-project/test/index.test.js:21:18)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Relay Compiler Transform - Multi Project Config dev mode project-b should resolve index page correctly",
                "location": null,
                "status": "failed",
                "title": "should resolve index page correctly"
              },
              {
                "ancestorTitles": [
                  "Relay Compiler Transform - Multi Project Config",
                  "production mode",
                  "project-a"
                ],
                "failureMessages": [],
                "fullName": "Relay Compiler Transform - Multi Project Config production mode project-a should resolve index page correctly",
                "location": null,
                "status": "passed",
                "title": "should resolve index page correctly"
              },
              {
                "ancestorTitles": [
                  "Relay Compiler Transform - Multi Project Config",
                  "production mode",
                  "project-b"
                ],
                "failureMessages": [],
                "fullName": "Relay Compiler Transform - Multi Project Config production mode project-b should resolve index page correctly",
                "location": null,
                "status": "passed",
                "title": "should resolve index page correctly"
              }
            ],
            "endTime": 1676054383964,
            "message": "  ● Relay Compiler Transform - Multi Project Config › dev mode › project-a › should resolve index page correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Project A\"\n    Received string:    \"Execution of get_from_source failed·\n    Caused by:\n        0: Execution of resolve_source_request failed\n        1: Execution of CombinedContentSource::get failed\n        2: Execution of create_app_source failed\n        3: Execution of load_next_config failed\n        4: data did not match any variant of untagged enum RelayLanguage at line 1 column 2410\n             at compiler.relay.language\n                  |                                                                                                                                                                                                         v\n                1 + {\\\"env\\\":{},\\\"webpack\\\":null,\\\"webpackDevMiddleware\\\":null,\\\"eslint\\\":{\\\"ignoreDuringBuilds\\\":false},\\\"typesc...,\\\"compiler\\\":{\\\"relay\\\":{\\\"src\\\":\\\"./pages\\\",\\\"artifactDirectory\\\":\\\"./__generated__\\\",\\\"language\\\":\\\"typescript\\\"},\\\"externalDir\\\":true},\\\"headers\\\":[],\\\"rewrites\\\":{\\\"beforeFiles\\\":[],\\\"afterFiles\\\":[],\\\"fallback\\\":[]},\\\"redirects\\\":[{\\\"source\\\":\\\"/:path+/\\\",\\\"destination\\\":\\\"/:path+\\\",\\\"permanent\\\":true,\\\"internal\\\":true}]}\n                  |                                                                                                                                                                                                         ^\n           \"\n\n      19 |   it('should resolve index page correctly', async () => {\n      20 |     const html = await renderViaHTTP(appPort, '/')\n    > 21 |     expect(html).toContain(project)\n         |                  ^\n      22 |     expect(html).toContain(`Hello, World!`)\n      23 |   })\n      24 | }\n\n      at Object.<anonymous> (integration/relay-graphql-swc-multi-project/test/index.test.js:21:18)\n\n  ● Relay Compiler Transform - Multi Project Config › dev mode › project-b › should resolve index page correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Project B\"\n    Received string:    \"Execution of get_from_source failed·\n    Caused by:\n        0: Execution of resolve_source_request failed\n        1: Execution of CombinedContentSource::get failed\n        2: Execution of create_app_source failed\n        3: Execution of load_next_config failed\n        4: data did not match any variant of untagged enum RelayLanguage at line 1 column 2410\n             at compiler.relay.language\n                  |                                                                                                                                                                                                         v\n                1 + {\\\"env\\\":{},\\\"webpack\\\":null,\\\"webpackDevMiddleware\\\":null,\\\"eslint\\\":{\\\"ignoreDuringBuilds\\\":false},\\\"typesc...,\\\"compiler\\\":{\\\"relay\\\":{\\\"src\\\":\\\"./pages\\\",\\\"artifactDirectory\\\":\\\"./__generated__\\\",\\\"language\\\":\\\"typescript\\\"},\\\"externalDir\\\":true},\\\"headers\\\":[],\\\"rewrites\\\":{\\\"beforeFiles\\\":[],\\\"afterFiles\\\":[],\\\"fallback\\\":[]},\\\"redirects\\\":[{\\\"source\\\":\\\"/:path+/\\\",\\\"destination\\\":\\\"/:path+\\\",\\\"permanent\\\":true,\\\"internal\\\":true}]}\n                  |                                                                                                                                                                                                         ^\n           \"\n\n      19 |   it('should resolve index page correctly', async () => {\n      20 |     const html = await renderViaHTTP(appPort, '/')\n    > 21 |     expect(html).toContain(project)\n         |                  ^\n      22 |     expect(html).toContain(`Hello, World!`)\n      23 |   })\n      24 | }\n\n      at Object.<anonymous> (integration/relay-graphql-swc-multi-project/test/index.test.js:21:18)\n",
            "name": "/work/test/integration/relay-graphql-swc-multi-project/test/index.test.js",
            "startTime": 1676054339372,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 1)",
      "name": "test/development/acceptance-app/component-stack.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 9,
        "numPassedTestSuites": 0,
        "numPassedTests": 7,
        "numPendingTestSuites": 0,
        "numPendingTests": 20,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 36,
        "openHandles": [],
        "snapshot": {
          "added": 7,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 1,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 7,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676052333502,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default should strip whitespace correctly with newline",
                "location": null,
                "status": "pending",
                "title": "should strip whitespace correctly with newline"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default module init error not shown",
                "location": null,
                "status": "pending",
                "title": "module init error not shown"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default boundaries",
                "location": null,
                "status": "pending",
                "title": "boundaries"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default internal package errors",
                "location": null,
                "status": "pending",
                "title": "internal package errors"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default unterminated JSX",
                "location": null,
                "status": "pending",
                "title": "unterminated JSX"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default conversion to class component (1)",
                "location": null,
                "status": "pending",
                "title": "conversion to class component (1)"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default css syntax errors",
                "location": null,
                "status": "pending",
                "title": "css syntax errors"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default logbox: anchors links in error messages",
                "location": null,
                "status": "pending",
                "title": "logbox: anchors links in error messages"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default non-Error errors are handled properly",
                "location": null,
                "status": "pending",
                "title": "non-Error errors are handled properly"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default Should not show __webpack_exports__ when exporting anonymous arrow function",
                "location": null,
                "status": "pending",
                "title": "Should not show __webpack_exports__ when exporting anonymous arrow function"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default Unhandled errors and rejections opens up in the minimized state",
                "location": null,
                "status": "pending",
                "title": "Unhandled errors and rejections opens up in the minimized state"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default Call stack count is correct for server error",
                "location": null,
                "status": "pending",
                "title": "Call stack count is correct for server error"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default Call stack count is correct for client error",
                "location": null,
                "status": "pending",
                "title": "Call stack count is correct for client error"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default Server component errors should open up in fullscreen",
                "location": null,
                "status": "pending",
                "title": "Server component errors should open up in fullscreen"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default Import trace when module not found in layout",
                "location": null,
                "status": "pending",
                "title": "Import trace when module not found in layout"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default Can't resolve @import in CSS file",
                "location": null,
                "status": "pending",
                "title": "Can't resolve @import in CSS file"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default server component can recover from error thrown in the module",
                "location": null,
                "status": "pending",
                "title": "server component can recover from error thrown in the module"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app default"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app default client component can recover from error thrown in the module",
                "location": null,
                "status": "pending",
                "title": "client component can recover from error thrown in the module"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo should strip whitespace correctly with newline",
                "location": null,
                "status": "passed",
                "title": "should strip whitespace correctly with newline"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo module init error not shown",
                "location": null,
                "status": "passed",
                "title": "module init error not shown"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo boundaries",
                "location": null,
                "status": "passed",
                "title": "boundaries"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo internal package errors",
                "location": null,
                "status": "pending",
                "title": "internal package errors"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo unterminated JSX",
                "location": null,
                "status": "passed",
                "title": "unterminated JSX"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/work/test/development/acceptance-app/ReactRefreshLogBox.test.ts:279:45)"
                ],
                "fullName": "ReactRefreshLogBox app turbo conversion to class component (1)",
                "location": null,
                "status": "failed",
                "title": "conversion to class component (1)"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/work/test/development/acceptance-app/ReactRefreshLogBox.test.ts:324:45)"
                ],
                "fullName": "ReactRefreshLogBox app turbo css syntax errors",
                "location": null,
                "status": "failed",
                "title": "css syntax errors"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('[data-nextjs-toast]')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "ReactRefreshLogBox app turbo logbox: anchors links in error messages",
                "location": null,
                "status": "failed",
                "title": "logbox: anchors links in error messages"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo non-Error errors are handled properly",
                "location": null,
                "status": "pending",
                "title": "non-Error errors are handled properly"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/work/test/development/acceptance-app/ReactRefreshLogBox.test.ts:668:45)"
                ],
                "fullName": "ReactRefreshLogBox app turbo Should not show __webpack_exports__ when exporting anonymous arrow function",
                "location": null,
                "status": "failed",
                "title": "Should not show __webpack_exports__ when exporting anonymous arrow function"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('.nextjs-toast-errors')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "ReactRefreshLogBox app turbo Unhandled errors and rejections opens up in the minimized state",
                "location": null,
                "status": "failed",
                "title": "Unhandled errors and rejections opens up in the minimized state"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('[data-nextjs-data-runtime-error-collapsed-action]')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "ReactRefreshLogBox app turbo Call stack count is correct for server error",
                "location": null,
                "status": "failed",
                "title": "Call stack count is correct for server error"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('[data-nextjs-data-runtime-error-collapsed-action]')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "ReactRefreshLogBox app turbo Call stack count is correct for client error",
                "location": null,
                "status": "failed",
                "title": "Call stack count is correct for client error"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#text')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "ReactRefreshLogBox app turbo Server component errors should open up in fullscreen",
                "location": null,
                "status": "failed",
                "title": "Server component errors should open up in fullscreen"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo Import trace when module not found in layout",
                "location": null,
                "status": "passed",
                "title": "Import trace when module not found in layout"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/work/test/development/acceptance-app/ReactRefreshLogBox.test.ts:912:45)"
                ],
                "fullName": "ReactRefreshLogBox app turbo Can't resolve @import in CSS file",
                "location": null,
                "status": "failed",
                "title": "Can't resolve @import in CSS file"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo server component can recover from error thrown in the module",
                "location": null,
                "status": "passed",
                "title": "server component can recover from error thrown in the module"
              },
              {
                "ancestorTitles": [
                  "ReactRefreshLogBox app turbo"
                ],
                "failureMessages": [],
                "fullName": "ReactRefreshLogBox app turbo client component can recover from error thrown in the module",
                "location": null,
                "status": "passed",
                "title": "client component can recover from error thrown in the module"
              }
            ],
            "endTime": 1676052885188,
            "message": "  ● ReactRefreshLogBox app turbo › conversion to class component (1)\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      277 |       )\n      278 |\n    > 279 |       expect(await session.hasRedbox(true)).toBe(true)\n          |                                             ^\n      280 |       expect(await session.getRedboxSource()).toMatchSnapshot()\n      281 |\n      282 |       await session.patch(\n\n      at Object.<anonymous> (development/acceptance-app/ReactRefreshLogBox.test.ts:279:45)\n\n  ● ReactRefreshLogBox app turbo › css syntax errors\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      322 |       // Syntax error\n      323 |       await session.patch('index.module.css', `.button {`)\n    > 324 |       expect(await session.hasRedbox(true)).toBe(true)\n          |                                             ^\n      325 |       const source = await session.getRedboxSource()\n      326 |       expect(source).toMatch('./index.module.css:1:1')\n      327 |       expect(source).toMatch('Syntax error: ')\n\n      at Object.<anonymous> (development/acceptance-app/ReactRefreshLogBox.test.ts:324:45)\n\n  ● ReactRefreshLogBox app turbo › logbox: anchors links in error messages\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('[data-nextjs-toast]')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● ReactRefreshLogBox app turbo › Should not show __webpack_exports__ when exporting anonymous arrow function\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      666 |       )\n      667 |\n    > 668 |       expect(await session.hasRedbox(true)).toBe(true)\n          |                                             ^\n      669 |       expect(await session.getRedboxSource()).toMatchSnapshot()\n      670 |\n      671 |       await cleanup()\n\n      at Object.<anonymous> (development/acceptance-app/ReactRefreshLogBox.test.ts:668:45)\n\n  ● ReactRefreshLogBox app turbo › Unhandled errors and rejections opens up in the minimized state\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('.nextjs-toast-errors')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● ReactRefreshLogBox app turbo › Call stack count is correct for server error\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('[data-nextjs-data-runtime-error-collapsed-action]')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● ReactRefreshLogBox app turbo › Call stack count is correct for client error\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('[data-nextjs-data-runtime-error-collapsed-action]')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● ReactRefreshLogBox app turbo › Server component errors should open up in fullscreen\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#text')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● ReactRefreshLogBox app turbo › Can't resolve @import in CSS file\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      910 |       )\n      911 |\n    > 912 |       expect(await session.hasRedbox(true)).toBe(true)\n          |                                             ^\n      913 |       expect(await session.getRedboxSource()).toMatchSnapshot()\n      914 |\n      915 |       await cleanup()\n\n      at Object.<anonymous> (development/acceptance-app/ReactRefreshLogBox.test.ts:912:45)\n",
            "name": "/work/test/development/acceptance-app/ReactRefreshLogBox.test.ts",
            "startTime": 1676052333614,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 1)",
      "name": "test/e2e/postcss-config-cjs/index.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 1,
        "numPassedTestSuites": 0,
        "numPassedTests": 6,
        "numPendingTestSuites": 0,
        "numPendingTests": 7,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 14,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676053290718,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should not include edge api routes and edge ssr routes into dev middleware manifest",
                "location": null,
                "status": "passed",
                "title": "should not include edge api routes and edge ssr routes into dev middleware manifest"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should sort edge SSR routes correctly",
                "location": null,
                "status": "passed",
                "title": "should sort edge SSR routes correctly"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should be able to navigate between edge SSR routes without any errors",
                "location": null,
                "status": "passed",
                "title": "should be able to navigate between edge SSR routes without any errors"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should support client side navigation to ssr rsc pages",
                "location": null,
                "status": "pending",
                "title": "should support client side navigation to ssr rsc pages"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should support client side navigation to ssg rsc pages",
                "location": null,
                "status": "pending",
                "title": "should support client side navigation to ssg rsc pages"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should support client side navigation to static rsc pages",
                "location": null,
                "status": "pending",
                "title": "should support client side navigation to static rsc pages"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should not consume server.js file extension",
                "location": null,
                "status": "passed",
                "title": "should not consume server.js file extension"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, open '/tmp/next-install-3bd7dff1ff4456c8374f606c7b9572fc5981e010f9e96e0bb4c136d8ce33ee91/.next/server/middleware-manifest.json'"
                ],
                "fullName": "Switchable runtime Switchable runtime (dev) should build /api/hello and /api/edge as an api route with edge runtime",
                "location": null,
                "status": "failed",
                "title": "should build /api/hello and /api/edge as an api route with edge runtime"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should be possible to switch between runtimes in API routes",
                "location": null,
                "status": "passed",
                "title": "should be possible to switch between runtimes in API routes"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should be possible to switch between runtimes in pages",
                "location": null,
                "status": "passed",
                "title": "should be possible to switch between runtimes in pages"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should be possible to switch between runtimes with same content",
                "location": null,
                "status": "pending",
                "title": "should be possible to switch between runtimes with same content"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should recover from syntax error when using edge runtime",
                "location": null,
                "status": "pending",
                "title": "should recover from syntax error when using edge runtime"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should not crash the dev server when invalid runtime is configured",
                "location": null,
                "status": "pending",
                "title": "should not crash the dev server when invalid runtime is configured"
              },
              {
                "ancestorTitles": [
                  "Switchable runtime",
                  "Switchable runtime (dev)"
                ],
                "failureMessages": [],
                "fullName": "Switchable runtime Switchable runtime (dev) should give proper errors for invalid runtime in app dir",
                "location": null,
                "status": "pending",
                "title": "should give proper errors for invalid runtime in app dir"
              }
            ],
            "endTime": 1676053331821,
            "message": "  ● Switchable runtime › Switchable runtime (dev) › should build /api/hello and /api/edge as an api route with edge runtime\n\n    ENOENT: no such file or directory, open '/tmp/next-install-3bd7dff1ff4456c8374f606c7b9572fc5981e010f9e96e0bb4c136d8ce33ee91/.next/server/middleware-manifest.json'\n\n\n",
            "name": "/work/test/e2e/switchable-runtime/index.test.ts",
            "startTime": 1676053290813,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 1)",
      "name": "test/integration/compression/test/index.test.js",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 33,
        "numPassedTestSuites": 0,
        "numPassedTests": 125,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 158,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676054708355,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /about/ should redirect to /about",
                "location": null,
                "status": "passed",
                "title": "/about/ should redirect to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /catch-all/hello/world/ should redirect to /catch-all/hello/world",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world/ should redirect to /catch-all/hello/world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /catch-all/hello.world/ should redirect to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello.world/ should redirect to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false / should resolve to /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should resolve to /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /about should resolve to /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /catch-all/hello/world should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /about?hello=world should resolve to /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about?hello=world should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false / should client side render /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should client side render /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /about should client side render /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /catch-all/hello/world should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /about?hello=world should client side render /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about?hello=world should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/ should have href /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should have href /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about should have href /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should have href /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/ should have href /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should have href /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about?hello=world should have href /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should have href /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/?hello=world should have href /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should have href /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello/ should have href /catch-all/hello",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should have href /catch-all/hello"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/ should navigate to /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should navigate to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about should navigate to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should navigate to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/ should navigate to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should navigate to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about?hello=world should navigate to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should navigate to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/?hello=world should navigate to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should navigate to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello/ should navigate to /catch-all/hello",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should navigate to /catch-all/hello"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/ should push route to /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should push route to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about should push route to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should push route to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/ should push route to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should push route to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about?hello=world should push route to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should push route to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/about/?hello=world should push route to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should push route to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello/ should push route to /catch-all/hello",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should push route to /catch-all/hello"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /external-linker?href=https://nextjs.org should have href https://nextjs.org",
                "location": null,
                "status": "passed",
                "title": "/external-linker?href=https://nextjs.org should have href https://nextjs.org"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: false /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
                "location": null,
                "status": "passed",
                "title": "/external-linker?href=https://nextjs.org/ should have href https://nextjs.org/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /about should redirect to /about/",
                "location": null,
                "status": "passed",
                "title": "/about should redirect to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /catch-all/hello/world should redirect to /catch-all/hello/world/",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world should redirect to /catch-all/hello/world/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /catch-all/hello.world/ should redirect to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello.world/ should redirect to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: true / should resolve to /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should resolve to /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at /work/test/integration/trailing-slashes/test/index.test.js:41:26\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /about/ should resolve to /about.js, with router path /about",
                "location": null,
                "status": "failed",
                "title": "/about/ should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /catch-all/hello/world/ should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world/ should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at /work/test/integration/trailing-slashes/test/index.test.js:41:26\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /about/?hello=world should resolve to /about.js, with router path /about",
                "location": null,
                "status": "failed",
                "title": "/about/?hello=world should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: true / should client side render /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should client side render /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#hydration-marker')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /about/ should client side render /about.js, with router path /about",
                "location": null,
                "status": "failed",
                "title": "/about/ should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /catch-all/hello/world/ should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world/ should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#hydration-marker')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /about/?hello=world should client side render /about.js, with router path /about",
                "location": null,
                "status": "failed",
                "title": "/about/?hello=world should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/ should have href /",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/ should have href /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/about/\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about should have href /about/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about should have href /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/about/\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/ should have href /about/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about/ should have href /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/about/?hello=world\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about?hello=world should have href /about/?hello=world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about?hello=world should have href /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/about/?hello=world\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/?hello=world should have href /about/?hello=world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about/?hello=world should have href /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/catch-all/hello/\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello/ should have href /catch-all/hello/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/catch-all/hello/ should have href /catch-all/hello/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/catch-all/hello.world\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/ should navigate to /",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/ should navigate to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about should navigate to /about/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about should navigate to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/ should navigate to /about/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about/ should navigate to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about?hello=world should navigate to /about/?hello=world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about?hello=world should navigate to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/?hello=world should navigate to /about/?hello=world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about/?hello=world should navigate to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello/ should navigate to /catch-all/hello/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/catch-all/hello/ should navigate to /catch-all/hello/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/ should push route to /",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/ should push route to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about should push route to /about/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about should push route to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/ should push route to /about/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about/ should push route to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about?hello=world should push route to /about/?hello=world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about?hello=world should push route to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/about/?hello=world should push route to /about/?hello=world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/about/?hello=world should push route to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello/ should push route to /catch-all/hello/",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/catch-all/hello/ should push route to /catch-all/hello/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
                "location": null,
                "status": "failed",
                "title": "/linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"https://nextjs.org\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:75:39\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /external-linker?href=https://nextjs.org should have href https://nextjs.org",
                "location": null,
                "status": "failed",
                "title": "/external-linker?href=https://nextjs.org should have href https://nextjs.org"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"https://nextjs.org/\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:75:39\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, trailingSlash: true /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
                "location": null,
                "status": "failed",
                "title": "/external-linker?href=https://nextjs.org/ should have href https://nextjs.org/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /about/ should redirect to /about",
                "location": null,
                "status": "passed",
                "title": "/about/ should redirect to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /catch-all/hello/world/ should redirect to /catch-all/hello/world",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world/ should redirect to /catch-all/hello/world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /catch-all/hello.world/ should redirect to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello.world/ should redirect to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false / should resolve to /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should resolve to /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /about should resolve to /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /catch-all/hello/world should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /about?hello=world should resolve to /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about?hello=world should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false / should client side render /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should client side render /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /about should client side render /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /catch-all/hello/world should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /about?hello=world should client side render /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about?hello=world should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/ should have href /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should have href /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about should have href /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should have href /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about/ should have href /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should have href /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about?hello=world should have href /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should have href /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about/?hello=world should have href /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should have href /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello/ should have href /catch-all/hello",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should have href /catch-all/hello"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/ should navigate to /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should navigate to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about should navigate to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should navigate to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about/ should navigate to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should navigate to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about?hello=world should navigate to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should navigate to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about/?hello=world should navigate to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should navigate to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello/ should navigate to /catch-all/hello",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should navigate to /catch-all/hello"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/ should push route to /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should push route to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about should push route to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should push route to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about/ should push route to /about",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should push route to /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about?hello=world should push route to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should push route to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/about/?hello=world should push route to /about?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should push route to /about?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello/ should push route to /catch-all/hello",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should push route to /catch-all/hello"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /external-linker?href=https://nextjs.org should have href https://nextjs.org",
                "location": null,
                "status": "passed",
                "title": "/external-linker?href=https://nextjs.org should have href https://nextjs.org"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
                "location": null,
                "status": "passed",
                "title": "/external-linker?href=https://nextjs.org/ should have href https://nextjs.org/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: false"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: false should have a redirect in the routesmanifest",
                "location": null,
                "status": "passed",
                "title": "should have a redirect in the routesmanifest"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /about should redirect to /about/",
                "location": null,
                "status": "passed",
                "title": "/about should redirect to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /catch-all/hello/world should redirect to /catch-all/hello/world/",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world should redirect to /catch-all/hello/world/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /catch-all/hello.world/ should redirect to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello.world/ should redirect to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true / should resolve to /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should resolve to /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /about/ should resolve to /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about/ should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /catch-all/hello/world/ should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world/ should resolve to /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /about/?hello=world should resolve to /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about/?hello=world should resolve to /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true / should client side render /index.js, with router path /",
                "location": null,
                "status": "passed",
                "title": "/ should client side render /index.js, with router path /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /about/ should client side render /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about/ should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /catch-all/hello/world/ should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]",
                "location": null,
                "status": "passed",
                "title": "/catch-all/hello/world/ should client side render /catch-all/[...slug].js, with router path /catch-all/[...slug]"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /about/?hello=world should client side render /about.js, with router path /about",
                "location": null,
                "status": "passed",
                "title": "/about/?hello=world should client side render /about.js, with router path /about"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/ should have href /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should have href /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about should have href /about/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should have href /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about/ should have href /about/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should have href /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about?hello=world should have href /about/?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should have href /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about/?hello=world should have href /about/?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should have href /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello/ should have href /catch-all/hello/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should have href /catch-all/hello/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/ should navigate to /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should navigate to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about should navigate to /about/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should navigate to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about/ should navigate to /about/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should navigate to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about?hello=world should navigate to /about/?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should navigate to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about/?hello=world should navigate to /about/?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should navigate to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello/ should navigate to /catch-all/hello/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should navigate to /catch-all/hello/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/ should push route to /",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/ should push route to /"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about should push route to /about/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about should push route to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about/ should push route to /about/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/ should push route to /about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about?hello=world should push route to /about/?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about?hello=world should push route to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/about/?hello=world should push route to /about/?hello=world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/about/?hello=world should push route to /about/?hello=world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello/ should push route to /catch-all/hello/",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello/ should push route to /catch-all/hello/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /external-linker?href=https://nextjs.org should have href https://nextjs.org",
                "location": null,
                "status": "passed",
                "title": "/external-linker?href=https://nextjs.org should have href https://nextjs.org"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/",
                "location": null,
                "status": "passed",
                "title": "/external-linker?href=https://nextjs.org/ should have href https://nextjs.org/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, trailingSlash: true should have a redirect in the routesmanifest",
                "location": null,
                "status": "passed",
                "title": "should have a redirect in the routesmanifest"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/about should redirect to /docs/about/",
                "location": null,
                "status": "passed",
                "title": "/docs/about should redirect to /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs should redirect to /docs/",
                "location": null,
                "status": "passed",
                "title": "/docs should redirect to /docs/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/catch-all/hello/world should redirect to /docs/catch-all/hello/world/",
                "location": null,
                "status": "passed",
                "title": "/docs/catch-all/hello/world should redirect to /docs/catch-all/hello/world/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/catch-all/hello.world/ should redirect to /docs/catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/docs/catch-all/hello.world/ should redirect to /docs/catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/docs/about/\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/about should have href /docs/about/",
                "location": null,
                "status": "failed",
                "title": "/docs/linker?href=/about should have href /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/docs/\"\nReceived: undefined\n    at /work/test/integration/trailing-slashes/test/index.test.js:86:39\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/ should have href /docs/",
                "location": null,
                "status": "failed",
                "title": "/docs/linker?href=/ should have href /docs/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/about should navigate to /docs/about/",
                "location": null,
                "status": "failed",
                "title": "/docs/linker?href=/about should navigate to /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#link')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/ should navigate to /docs/",
                "location": null,
                "status": "failed",
                "title": "/docs/linker?href=/ should navigate to /docs/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/about should push route to /docs/about/",
                "location": null,
                "status": "failed",
                "title": "/docs/linker?href=/about should push route to /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "dev mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#route-pusher')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Trailing slashes dev mode, with basepath, trailingSlash: true /docs/linker?href=/ should push route to /docs/",
                "location": null,
                "status": "failed",
                "title": "/docs/linker?href=/ should push route to /docs/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/about should redirect to /docs/about/",
                "location": null,
                "status": "passed",
                "title": "/docs/about should redirect to /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs should redirect to /docs/",
                "location": null,
                "status": "passed",
                "title": "/docs should redirect to /docs/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/catch-all/hello/world should redirect to /docs/catch-all/hello/world/",
                "location": null,
                "status": "passed",
                "title": "/docs/catch-all/hello/world should redirect to /docs/catch-all/hello/world/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/catch-all/hello.world/ should redirect to /docs/catch-all/hello.world",
                "location": null,
                "status": "passed",
                "title": "/docs/catch-all/hello.world/ should redirect to /docs/catch-all/hello.world"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/about should have href /docs/about/",
                "location": null,
                "status": "passed",
                "title": "/docs/linker?href=/about should have href /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/ should have href /docs/",
                "location": null,
                "status": "passed",
                "title": "/docs/linker?href=/ should have href /docs/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/about should navigate to /docs/about/",
                "location": null,
                "status": "passed",
                "title": "/docs/linker?href=/about should navigate to /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/ should navigate to /docs/",
                "location": null,
                "status": "passed",
                "title": "/docs/linker?href=/ should navigate to /docs/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/about should push route to /docs/about/",
                "location": null,
                "status": "passed",
                "title": "/docs/linker?href=/about should push route to /docs/about/"
              },
              {
                "ancestorTitles": [
                  "Trailing slashes",
                  "production mode, with basepath, trailingSlash: true"
                ],
                "failureMessages": [],
                "fullName": "Trailing slashes production mode, with basepath, trailingSlash: true /docs/linker?href=/ should push route to /docs/",
                "location": null,
                "status": "passed",
                "title": "/docs/linker?href=/ should push route to /docs/"
              }
            ],
            "endTime": 1676055785109,
            "message": "  ● Trailing slashes › dev mode, trailingSlash: true › /about/ should resolve to /about.js, with router path /about\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      39 |     async (route, expectedPage, expectedRouterPath) => {\n      40 |       const res = await fetchViaHTTP(appPort, route, {}, { redirect: 'error' })\n    > 41 |       expect(res.status).toBe(200)\n         |                          ^\n      42 |       const $ = cheerio.load(await res.text())\n      43 |       expect($('#page-marker').text()).toBe(expectedPage)\n      44 |       expect($('#router-pathname').text()).toBe(expectedRouterPath)\n\n      at integration/trailing-slashes/test/index.test.js:41:26\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /about/?hello=world should resolve to /about.js, with router path /about\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      39 |     async (route, expectedPage, expectedRouterPath) => {\n      40 |       const res = await fetchViaHTTP(appPort, route, {}, { redirect: 'error' })\n    > 41 |       expect(res.status).toBe(200)\n         |                          ^\n      42 |       const $ = cheerio.load(await res.text())\n      43 |       expect($('#page-marker').text()).toBe(expectedPage)\n      44 |       expect($('#router-pathname').text()).toBe(expectedRouterPath)\n\n      at integration/trailing-slashes/test/index.test.js:41:26\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /about/ should client side render /about.js, with router path /about\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#hydration-marker')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /about/?hello=world should client side render /about.js, with router path /about\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#hydration-marker')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/ should have href /\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about should have href /about/\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/about/\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about/ should have href /about/\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/about/\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about?hello=world should have href /about/?hello=world\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/about/?hello=world\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about/?hello=world should have href /about/?hello=world\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/about/?hello=world\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/catch-all/hello/ should have href /catch-all/hello/\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/catch-all/hello/\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/catch-all/hello.world/ should have href /catch-all/hello.world\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/catch-all/hello.world\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/ should navigate to /\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about should navigate to /about/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about/ should navigate to /about/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about?hello=world should navigate to /about/?hello=world\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about/?hello=world should navigate to /about/?hello=world\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/catch-all/hello/ should navigate to /catch-all/hello/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/catch-all/hello.world/ should navigate to /catch-all/hello.world\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/ should push route to /\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about should push route to /about/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about/ should push route to /about/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about?hello=world should push route to /about/?hello=world\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/about/?hello=world should push route to /about/?hello=world\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/catch-all/hello/ should push route to /catch-all/hello/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /linker?href=/catch-all/hello.world/ should push route to /catch-all/hello.world\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /external-linker?href=https://nextjs.org should have href https://nextjs.org\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"https://nextjs.org\"\n    Received: undefined\n\n      73 |       const content = await renderViaHTTP(appPort, linkPage)\n      74 |       const $ = cheerio.load(content)\n    > 75 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      76 |     }\n      77 |   )\n      78 | }\n\n      at integration/trailing-slashes/test/index.test.js:75:39\n\n  ● Trailing slashes › dev mode, trailingSlash: true › /external-linker?href=https://nextjs.org/ should have href https://nextjs.org/\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"https://nextjs.org/\"\n    Received: undefined\n\n      73 |       const content = await renderViaHTTP(appPort, linkPage)\n      74 |       const $ = cheerio.load(content)\n    > 75 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      76 |     }\n      77 |   )\n      78 | }\n\n      at integration/trailing-slashes/test/index.test.js:75:39\n\n  ● Trailing slashes › dev mode, with basepath, trailingSlash: true › /docs/linker?href=/about should have href /docs/about/\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/docs/about/\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, with basepath, trailingSlash: true › /docs/linker?href=/ should have href /docs/\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/docs/\"\n    Received: undefined\n\n      84 |       const content = await renderViaHTTP(appPort, linkPage)\n      85 |       const $ = cheerio.load(content)\n    > 86 |       expect($('#link').attr('href')).toBe(expectedHref)\n         |                                       ^\n      87 |     }\n      88 |   )\n      89 |\n\n      at integration/trailing-slashes/test/index.test.js:86:39\n          at runMicrotasks (<anonymous>)\n\n  ● Trailing slashes › dev mode, with basepath, trailingSlash: true › /docs/linker?href=/about should navigate to /docs/about/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, with basepath, trailingSlash: true › /docs/linker?href=/ should navigate to /docs/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#link')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, with basepath, trailingSlash: true › /docs/linker?href=/about should push route to /docs/about/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Trailing slashes › dev mode, with basepath, trailingSlash: true › /docs/linker?href=/ should push route to /docs/\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#route-pusher')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n",
            "name": "/work/test/integration/trailing-slashes/test/index.test.js",
            "startTime": 1676054708453,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 2)",
      "name": "test/development/basic/emotion-swc.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 6,
        "numPassedTestSuites": 0,
        "numPassedTests": 8,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 14,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676052711493,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "createContext called in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:41:9)"
                ],
                "fullName": "Error Overlay for server components createContext called in Server Component should show error when React.createContext is called",
                "location": null,
                "status": "failed",
                "title": "should show error when React.createContext is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "createContext called in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:96:9)"
                ],
                "fullName": "Error Overlay for server components createContext called in Server Component should show error when React.createContext is called in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when React.createContext is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "createContext called in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:150:9)"
                ],
                "fullName": "Error Overlay for server components createContext called in Server Component should show error when createContext is called in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when createContext is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "React component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components React component hooks called in Server Component should show error when React.<client-hook> is called",
                "location": null,
                "status": "passed",
                "title": "should show error when React.<client-hook> is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "React component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components React component hooks called in Server Component should show error when React.<client-hook> is called in external package",
                "location": null,
                "status": "passed",
                "title": "should show error when React.<client-hook> is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "React component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components React component hooks called in Server Component should show error when React client hook is called in external package",
                "location": null,
                "status": "passed",
                "title": "should show error when React client hook is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Class component used in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:328:9)"
                ],
                "fullName": "Error Overlay for server components Class component used in Server Component should show error when Class Component is used",
                "location": null,
                "status": "failed",
                "title": "should show error when Class Component is used"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Class component used in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:381:9)"
                ],
                "fullName": "Error Overlay for server components Class component used in Server Component should show error when React.PureComponent is rendered in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when React.PureComponent is rendered in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Class component used in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:434:9)"
                ],
                "fullName": "Error Overlay for server components Class component used in Server Component should show error when Component is rendered in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when Component is rendered in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useRouter is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useRouter is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSearchParams is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useSearchParams is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSelectedLayoutSegment is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useSelectedLayoutSegment is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSelectedLayoutSegments is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useSelectedLayoutSegments is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when usePathname is called",
                "location": null,
                "status": "passed",
                "title": "should show error when usePathname is called"
              }
            ],
            "endTime": 1676053121433,
            "message": "  ● Error Overlay for server components › createContext called in Server Component › should show error when React.createContext is called\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:41:9)\n\n  ● Error Overlay for server components › createContext called in Server Component › should show error when React.createContext is called in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:96:9)\n\n  ● Error Overlay for server components › createContext called in Server Component › should show error when createContext is called in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:150:9)\n\n  ● Error Overlay for server components › Class component used in Server Component › should show error when Class Component is used\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:328:9)\n\n  ● Error Overlay for server components › Class component used in Server Component › should show error when React.PureComponent is rendered in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:381:9)\n\n  ● Error Overlay for server components › Class component used in Server Component › should show error when Component is rendered in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:434:9)\n",
            "name": "/work/test/development/acceptance-app/server-components.test.ts",
            "startTime": 1676052711594,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 2)",
      "name": "test/e2e/app-dir/app-alias/app-alias.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 3,
        "numPassedTestSuites": 0,
        "numPassedTests": 1,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 4,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676053962339,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "@next/font/google without-preloaded-fonts without _app"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/work/test/e2e/next-font/without-preloaded-fonts.test.ts:47:48)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "@next/font/google without-preloaded-fonts without _app without preload",
                "location": null,
                "status": "failed",
                "title": "without preload"
              },
              {
                "ancestorTitles": [
                  "@next/font/google without-preloaded-fonts without _app"
                ],
                "failureMessages": [],
                "fullName": "@next/font/google without-preloaded-fonts without _app without fonts",
                "location": null,
                "status": "passed",
                "title": "without fonts"
              },
              {
                "ancestorTitles": [
                  "@next/font/google no preloads with _app"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/work/test/e2e/next-font/without-preloaded-fonts.test.ts:107:48)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "@next/font/google no preloads with _app without preload",
                "location": null,
                "status": "failed",
                "title": "without preload"
              },
              {
                "ancestorTitles": [
                  "@next/font/google no preloads with _app"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/work/test/e2e/next-font/without-preloaded-fonts.test.ts:124:48)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "@next/font/google no preloads with _app without fonts",
                "location": null,
                "status": "failed",
                "title": "without fonts"
              }
            ],
            "endTime": 1676054006137,
            "message": "  ● @next/font/google without-preloaded-fonts without _app › without preload\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      45 |\n      46 |     // Preconnect\n    > 47 |     expect($('link[rel=\"preconnect\"]').length).toBe(1)\n         |                                                ^\n      48 |     expect($('link[rel=\"preconnect\"]').get(0).attribs).toEqual({\n      49 |       crossorigin: 'anonymous',\n      50 |       href: '/',\n\n      at Object.<anonymous> (e2e/next-font/without-preloaded-fonts.test.ts:47:48)\n\n  ● @next/font/google no preloads with _app › without preload\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      105 |\n      106 |     // Preconnect\n    > 107 |     expect($('link[rel=\"preconnect\"]').length).toBe(1)\n          |                                                ^\n      108 |     expect($('link[rel=\"preconnect\"]').get(0).attribs).toEqual({\n      109 |       crossorigin: 'anonymous',\n      110 |       href: '/',\n\n      at Object.<anonymous> (e2e/next-font/without-preloaded-fonts.test.ts:107:48)\n\n  ● @next/font/google no preloads with _app › without fonts\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      122 |\n      123 |     // Preconnect\n    > 124 |     expect($('link[rel=\"preconnect\"]').length).toBe(1)\n          |                                                ^\n      125 |     expect($('link[rel=\"preconnect\"]').get(0).attribs).toEqual({\n      126 |       crossorigin: 'anonymous',\n      127 |       href: '/',\n\n      at Object.<anonymous> (e2e/next-font/without-preloaded-fonts.test.ts:124:48)\n",
            "name": "/work/test/e2e/next-font/without-preloaded-fonts.test.ts",
            "startTime": 1676053962441,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 2)",
      "name": "test/integration/fallback-false-rewrite/test/index.test.js",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 2,
        "numPassedTestSuites": 0,
        "numPassedTests": 2,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 4,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676054375937,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Relay Compiler Transform - Multi Project Config",
                  "dev mode",
                  "project-a"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Project A\"\nReceived string:    \"Execution of get_from_source failed·\nCaused by:\n    0: Execution of resolve_source_request failed\n    1: Execution of CombinedContentSource::get failed\n    2: Execution of create_app_source failed\n    3: Execution of load_next_config failed\n    4: data did not match any variant of untagged enum RelayLanguage at line 1 column 2410\n         at compiler.relay.language\n              |                                                                                                                                                                                                         v\n            1 + {\\\"env\\\":{},\\\"webpack\\\":null,\\\"webpackDevMiddleware\\\":null,\\\"eslint\\\":{\\\"ignoreDuringBuilds\\\":false},\\\"typesc...,\\\"compiler\\\":{\\\"relay\\\":{\\\"src\\\":\\\"./pages\\\",\\\"artifactDirectory\\\":\\\"./__generated__\\\",\\\"language\\\":\\\"typescript\\\"},\\\"externalDir\\\":true},\\\"headers\\\":[],\\\"rewrites\\\":{\\\"beforeFiles\\\":[],\\\"afterFiles\\\":[],\\\"fallback\\\":[]},\\\"redirects\\\":[{\\\"source\\\":\\\"/:path+/\\\",\\\"destination\\\":\\\"/:path+\\\",\\\"permanent\\\":true,\\\"internal\\\":true}]}\n              |                                                                                                                                                                                                         ^\n       \"\n    at Object.<anonymous> (/work/test/integration/relay-graphql-swc-multi-project/test/index.test.js:21:18)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Relay Compiler Transform - Multi Project Config dev mode project-a should resolve index page correctly",
                "location": null,
                "status": "failed",
                "title": "should resolve index page correctly"
              },
              {
                "ancestorTitles": [
                  "Relay Compiler Transform - Multi Project Config",
                  "dev mode",
                  "project-b"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Project B\"\nReceived string:    \"Execution of get_from_source failed·\nCaused by:\n    0: Execution of resolve_source_request failed\n    1: Execution of CombinedContentSource::get failed\n    2: Execution of create_app_source failed\n    3: Execution of load_next_config failed\n    4: data did not match any variant of untagged enum RelayLanguage at line 1 column 2410\n         at compiler.relay.language\n              |                                                                                                                                                                                                         v\n            1 + {\\\"env\\\":{},\\\"webpack\\\":null,\\\"webpackDevMiddleware\\\":null,\\\"eslint\\\":{\\\"ignoreDuringBuilds\\\":false},\\\"typesc...,\\\"compiler\\\":{\\\"relay\\\":{\\\"src\\\":\\\"./pages\\\",\\\"artifactDirectory\\\":\\\"./__generated__\\\",\\\"language\\\":\\\"typescript\\\"},\\\"externalDir\\\":true},\\\"headers\\\":[],\\\"rewrites\\\":{\\\"beforeFiles\\\":[],\\\"afterFiles\\\":[],\\\"fallback\\\":[]},\\\"redirects\\\":[{\\\"source\\\":\\\"/:path+/\\\",\\\"destination\\\":\\\"/:path+\\\",\\\"permanent\\\":true,\\\"internal\\\":true}]}\n              |                                                                                                                                                                                                         ^\n       \"\n    at Object.<anonymous> (/work/test/integration/relay-graphql-swc-multi-project/test/index.test.js:21:18)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Relay Compiler Transform - Multi Project Config dev mode project-b should resolve index page correctly",
                "location": null,
                "status": "failed",
                "title": "should resolve index page correctly"
              },
              {
                "ancestorTitles": [
                  "Relay Compiler Transform - Multi Project Config",
                  "production mode",
                  "project-a"
                ],
                "failureMessages": [],
                "fullName": "Relay Compiler Transform - Multi Project Config production mode project-a should resolve index page correctly",
                "location": null,
                "status": "passed",
                "title": "should resolve index page correctly"
              },
              {
                "ancestorTitles": [
                  "Relay Compiler Transform - Multi Project Config",
                  "production mode",
                  "project-b"
                ],
                "failureMessages": [],
                "fullName": "Relay Compiler Transform - Multi Project Config production mode project-b should resolve index page correctly",
                "location": null,
                "status": "passed",
                "title": "should resolve index page correctly"
              }
            ],
            "endTime": 1676054423237,
            "message": "  ● Relay Compiler Transform - Multi Project Config › dev mode › project-a › should resolve index page correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Project A\"\n    Received string:    \"Execution of get_from_source failed·\n    Caused by:\n        0: Execution of resolve_source_request failed\n        1: Execution of CombinedContentSource::get failed\n        2: Execution of create_app_source failed\n        3: Execution of load_next_config failed\n        4: data did not match any variant of untagged enum RelayLanguage at line 1 column 2410\n             at compiler.relay.language\n                  |                                                                                                                                                                                                         v\n                1 + {\\\"env\\\":{},\\\"webpack\\\":null,\\\"webpackDevMiddleware\\\":null,\\\"eslint\\\":{\\\"ignoreDuringBuilds\\\":false},\\\"typesc...,\\\"compiler\\\":{\\\"relay\\\":{\\\"src\\\":\\\"./pages\\\",\\\"artifactDirectory\\\":\\\"./__generated__\\\",\\\"language\\\":\\\"typescript\\\"},\\\"externalDir\\\":true},\\\"headers\\\":[],\\\"rewrites\\\":{\\\"beforeFiles\\\":[],\\\"afterFiles\\\":[],\\\"fallback\\\":[]},\\\"redirects\\\":[{\\\"source\\\":\\\"/:path+/\\\",\\\"destination\\\":\\\"/:path+\\\",\\\"permanent\\\":true,\\\"internal\\\":true}]}\n                  |                                                                                                                                                                                                         ^\n           \"\n\n      19 |   it('should resolve index page correctly', async () => {\n      20 |     const html = await renderViaHTTP(appPort, '/')\n    > 21 |     expect(html).toContain(project)\n         |                  ^\n      22 |     expect(html).toContain(`Hello, World!`)\n      23 |   })\n      24 | }\n\n      at Object.<anonymous> (integration/relay-graphql-swc-multi-project/test/index.test.js:21:18)\n\n  ● Relay Compiler Transform - Multi Project Config › dev mode › project-b › should resolve index page correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Project B\"\n    Received string:    \"Execution of get_from_source failed·\n    Caused by:\n        0: Execution of resolve_source_request failed\n        1: Execution of CombinedContentSource::get failed\n        2: Execution of create_app_source failed\n        3: Execution of load_next_config failed\n        4: data did not match any variant of untagged enum RelayLanguage at line 1 column 2410\n             at compiler.relay.language\n                  |                                                                                                                                                                                                         v\n                1 + {\\\"env\\\":{},\\\"webpack\\\":null,\\\"webpackDevMiddleware\\\":null,\\\"eslint\\\":{\\\"ignoreDuringBuilds\\\":false},\\\"typesc...,\\\"compiler\\\":{\\\"relay\\\":{\\\"src\\\":\\\"./pages\\\",\\\"artifactDirectory\\\":\\\"./__generated__\\\",\\\"language\\\":\\\"typescript\\\"},\\\"externalDir\\\":true},\\\"headers\\\":[],\\\"rewrites\\\":{\\\"beforeFiles\\\":[],\\\"afterFiles\\\":[],\\\"fallback\\\":[]},\\\"redirects\\\":[{\\\"source\\\":\\\"/:path+/\\\",\\\"destination\\\":\\\"/:path+\\\",\\\"permanent\\\":true,\\\"internal\\\":true}]}\n                  |                                                                                                                                                                                                         ^\n           \"\n\n      19 |   it('should resolve index page correctly', async () => {\n      20 |     const html = await renderViaHTTP(appPort, '/')\n    > 21 |     expect(html).toContain(project)\n         |                  ^\n      22 |     expect(html).toContain(`Hello, World!`)\n      23 |   })\n      24 | }\n\n      at Object.<anonymous> (integration/relay-graphql-swc-multi-project/test/index.test.js:21:18)\n",
            "name": "/work/test/integration/relay-graphql-swc-multi-project/test/index.test.js",
            "startTime": 1676054376053,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    }
  ]
}