{
  "ref": "1689dc3be89a1b1ec3502be96f964a0e0ac7b929",
  "nextjsVersion": "Next.js v13.1.7-canary.8",
  "result": [
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 1)",
      "name": "test/development/acceptance-app/component-stack.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 6,
        "numPassedTestSuites": 0,
        "numPassedTests": 8,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 14,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676059586066,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "createContext called in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:41:9)"
                ],
                "fullName": "Error Overlay for server components createContext called in Server Component should show error when React.createContext is called",
                "location": null,
                "status": "failed",
                "title": "should show error when React.createContext is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "createContext called in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:96:9)"
                ],
                "fullName": "Error Overlay for server components createContext called in Server Component should show error when React.createContext is called in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when React.createContext is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "createContext called in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:150:9)"
                ],
                "fullName": "Error Overlay for server components createContext called in Server Component should show error when createContext is called in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when createContext is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "React component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components React component hooks called in Server Component should show error when React.<client-hook> is called",
                "location": null,
                "status": "passed",
                "title": "should show error when React.<client-hook> is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "React component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components React component hooks called in Server Component should show error when React.<client-hook> is called in external package",
                "location": null,
                "status": "passed",
                "title": "should show error when React.<client-hook> is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "React component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components React component hooks called in Server Component should show error when React client hook is called in external package",
                "location": null,
                "status": "passed",
                "title": "should show error when React client hook is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Class component used in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:328:9)"
                ],
                "fullName": "Error Overlay for server components Class component used in Server Component should show error when Class Component is used",
                "location": null,
                "status": "failed",
                "title": "should show error when Class Component is used"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Class component used in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:381:9)"
                ],
                "fullName": "Error Overlay for server components Class component used in Server Component should show error when React.PureComponent is rendered in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when React.PureComponent is rendered in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Class component used in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:434:9)"
                ],
                "fullName": "Error Overlay for server components Class component used in Server Component should show error when Component is rendered in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when Component is rendered in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useRouter is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useRouter is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSearchParams is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useSearchParams is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSelectedLayoutSegment is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useSelectedLayoutSegment is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSelectedLayoutSegments is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useSelectedLayoutSegments is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when usePathname is called",
                "location": null,
                "status": "passed",
                "title": "should show error when usePathname is called"
              }
            ],
            "endTime": 1676059992026,
            "message": "  ● Error Overlay for server components › createContext called in Server Component › should show error when React.createContext is called\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:41:9)\n\n  ● Error Overlay for server components › createContext called in Server Component › should show error when React.createContext is called in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:96:9)\n\n  ● Error Overlay for server components › createContext called in Server Component › should show error when createContext is called in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:150:9)\n\n  ● Error Overlay for server components › Class component used in Server Component › should show error when Class Component is used\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:328:9)\n\n  ● Error Overlay for server components › Class component used in Server Component › should show error when React.PureComponent is rendered in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:381:9)\n\n  ● Error Overlay for server components › Class component used in Server Component › should show error when Component is rendered in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:434:9)\n",
            "name": "/work/test/development/acceptance-app/server-components.test.ts",
            "startTime": 1676059586164,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 1)",
      "name": "test/e2e/edge-can-read-request-body/index.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 3,
        "numPassedTestSuites": 0,
        "numPassedTests": 1,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 4,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676060382803,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "@next/font/google without-preloaded-fonts without _app"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/work/test/e2e/next-font/without-preloaded-fonts.test.ts:47:48)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "@next/font/google without-preloaded-fonts without _app without preload",
                "location": null,
                "status": "failed",
                "title": "without preload"
              },
              {
                "ancestorTitles": [
                  "@next/font/google without-preloaded-fonts without _app"
                ],
                "failureMessages": [],
                "fullName": "@next/font/google without-preloaded-fonts without _app without fonts",
                "location": null,
                "status": "passed",
                "title": "without fonts"
              },
              {
                "ancestorTitles": [
                  "@next/font/google no preloads with _app"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/work/test/e2e/next-font/without-preloaded-fonts.test.ts:107:48)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "@next/font/google no preloads with _app without preload",
                "location": null,
                "status": "failed",
                "title": "without preload"
              },
              {
                "ancestorTitles": [
                  "@next/font/google no preloads with _app"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/work/test/e2e/next-font/without-preloaded-fonts.test.ts:124:48)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "@next/font/google no preloads with _app without fonts",
                "location": null,
                "status": "failed",
                "title": "without fonts"
              }
            ],
            "endTime": 1676060425617,
            "message": "  ● @next/font/google without-preloaded-fonts without _app › without preload\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      45 |\n      46 |     // Preconnect\n    > 47 |     expect($('link[rel=\"preconnect\"]').length).toBe(1)\n         |                                                ^\n      48 |     expect($('link[rel=\"preconnect\"]').get(0).attribs).toEqual({\n      49 |       crossorigin: 'anonymous',\n      50 |       href: '/',\n\n      at Object.<anonymous> (e2e/next-font/without-preloaded-fonts.test.ts:47:48)\n\n  ● @next/font/google no preloads with _app › without preload\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      105 |\n      106 |     // Preconnect\n    > 107 |     expect($('link[rel=\"preconnect\"]').length).toBe(1)\n          |                                                ^\n      108 |     expect($('link[rel=\"preconnect\"]').get(0).attribs).toEqual({\n      109 |       crossorigin: 'anonymous',\n      110 |       href: '/',\n\n      at Object.<anonymous> (e2e/next-font/without-preloaded-fonts.test.ts:107:48)\n          at runMicrotasks (<anonymous>)\n\n  ● @next/font/google no preloads with _app › without fonts\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      122 |\n      123 |     // Preconnect\n    > 124 |     expect($('link[rel=\"preconnect\"]').length).toBe(1)\n          |                                                ^\n      125 |     expect($('link[rel=\"preconnect\"]').get(0).attribs).toEqual({\n      126 |       crossorigin: 'anonymous',\n      127 |       href: '/',\n\n      at Object.<anonymous> (e2e/next-font/without-preloaded-fonts.test.ts:124:48)\n          at runMicrotasks (<anonymous>)\n",
            "name": "/work/test/e2e/next-font/without-preloaded-fonts.test.ts",
            "startTime": 1676060382900,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 1)",
      "name": "test/integration/next-image-new/loader-config/test/index.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 11,
        "numPassedTestSuites": 0,
        "numPassedTests": 31,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 42,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676061069917,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can print telemetry status",
                "location": null,
                "status": "passed",
                "title": "can print telemetry status"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can enable telemetry with flag",
                "location": null,
                "status": "passed",
                "title": "can enable telemetry with flag"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can disable telemetry with flag",
                "location": null,
                "status": "passed",
                "title": "can disable telemetry with flag"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can enable telemetry without flag",
                "location": null,
                "status": "passed",
                "title": "can enable telemetry without flag"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can re-enable telemetry",
                "location": null,
                "status": "passed",
                "title": "can re-enable telemetry"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can disable telemetry without flag",
                "location": null,
                "status": "passed",
                "title": "can disable telemetry without flag"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can re-disable telemetry",
                "location": null,
                "status": "passed",
                "title": "can re-disable telemetry"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can disable telemetry with env NEXT_TELEMETRY_DISABLED",
                "location": null,
                "status": "passed",
                "title": "can disable telemetry with env NEXT_TELEMETRY_DISABLED"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI detects isSrcDir dir correctly for `next build`",
                "location": null,
                "status": "passed",
                "title": "detects isSrcDir dir correctly for `next build`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits event when swc fails to load",
                "location": null,
                "status": "passed",
                "title": "emits event when swc fails to load"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI logs completed `next build` with warnings",
                "location": null,
                "status": "passed",
                "title": "logs completed `next build` with warnings"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI detects tests correctly for `next build`",
                "location": null,
                "status": "passed",
                "title": "detects tests correctly for `next build`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "Error: expect(received).toMatch(expected)\n\nExpected pattern: /\"hasNextConfig\": false/\nReceived string:  \"\n    \\\"nextVersion\\\": \\\"13.1.7-canary.8\\\",\n    \\\"nodeVersion\\\": \\\"v16.19.0\\\",\n    \\\"cliCommand\\\": \\\"build\\\",\n    \\\"isSrcDir\\\": false,\n    \\\"hasNowJson\\\": false,\n    \\\"isCustomServer\\\": null,\n    \\\"hasNextConfig\\\": true,\n    \\\"buildTarget\\\": \\\"default\\\",\n    \\\"hasWebpackConfig\\\": false,\n    \\\"hasBabelConfig\\\": false,\n    \\\"imageEnabled\\\": true,\n    \\\"imageFutureEnabled\\\": true,\n    \\\"basePathEnabled\\\": false,\n    \\\"i18nEnabled\\\": false,\n    \\\"locales\\\": null,\n    \\\"localeDomainsCount\\\": null,\n    \\\"localeDetectionEnabled\\\": null,\n    \\\"imageDomainsCount\\\": 0,\n    \\\"imageRemotePatternsCount\\\": 0,\n    \\\"imageSizes\\\": \\\"16,32,48,64,96,128,256,384\\\",\n    \\\"imageLoader\\\": \\\"default\\\",\n    \\\"imageFormats\\\": \\\"image/webp\\\",\n    \\\"trailingSlashEnabled\\\": false,\n    \\\"reactStrictMode\\\": false,\n    \\\"webpackVersion\\\": 5,\n    \\\"turboFlag\\\": false,\n    \\\"appDir\\\": false,\n    \\\"pagesDir\\\": true\n  \"\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:209:19)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Telemetry CLI detects correct cli session defaults",
                "location": null,
                "status": "failed",
                "title": "detects correct cli session defaults"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "Error: expect(received).toMatch(expected)\n\nExpected pattern: /\"hasNextConfig\": false/\nReceived string:  \"\n    \\\"nextVersion\\\": \\\"13.1.7-canary.8\\\",\n    \\\"nodeVersion\\\": \\\"v16.19.0\\\",\n    \\\"cliCommand\\\": \\\"build\\\",\n    \\\"isSrcDir\\\": false,\n    \\\"hasNowJson\\\": false,\n    \\\"isCustomServer\\\": null,\n    \\\"hasNextConfig\\\": true,\n    \\\"buildTarget\\\": \\\"default\\\",\n    \\\"hasWebpackConfig\\\": false,\n    \\\"hasBabelConfig\\\": false,\n    \\\"imageEnabled\\\": true,\n    \\\"imageFutureEnabled\\\": true,\n    \\\"basePathEnabled\\\": false,\n    \\\"i18nEnabled\\\": false,\n    \\\"locales\\\": null,\n    \\\"localeDomainsCount\\\": null,\n    \\\"localeDetectionEnabled\\\": null,\n    \\\"imageDomainsCount\\\": 0,\n    \\\"imageRemotePatternsCount\\\": 0,\n    \\\"imageSizes\\\": \\\"16,32,48,64,96,128,256,384\\\",\n    \\\"imageLoader\\\": \\\"default\\\",\n    \\\"imageFormats\\\": \\\"image/webp\\\",\n    \\\"trailingSlashEnabled\\\": false,\n    \\\"reactStrictMode\\\": false,\n    \\\"webpackVersion\\\": 5,\n    \\\"turboFlag\\\": false,\n    \\\"appDir\\\": false,\n    \\\"pagesDir\\\": true\n  \"\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:235:19)"
                ],
                "fullName": "Telemetry CLI cli session: babel tooling config",
                "location": null,
                "status": "failed",
                "title": "cli session: babel tooling config"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "Error: expect(received).toMatch(expected)\n\nExpected pattern: /\"hasNextConfig\": false/\nReceived string:  \"\n    \\\"nextVersion\\\": \\\"13.1.7-canary.8\\\",\n    \\\"nodeVersion\\\": \\\"v16.19.0\\\",\n    \\\"cliCommand\\\": \\\"build\\\",\n    \\\"isSrcDir\\\": false,\n    \\\"hasNowJson\\\": false,\n    \\\"isCustomServer\\\": null,\n    \\\"hasNextConfig\\\": true,\n    \\\"buildTarget\\\": \\\"default\\\",\n    \\\"hasWebpackConfig\\\": false,\n    \\\"hasBabelConfig\\\": true,\n    \\\"imageEnabled\\\": true,\n    \\\"imageFutureEnabled\\\": true,\n    \\\"basePathEnabled\\\": false,\n    \\\"i18nEnabled\\\": false,\n    \\\"locales\\\": null,\n    \\\"localeDomainsCount\\\": null,\n    \\\"localeDetectionEnabled\\\": null,\n    \\\"imageDomainsCount\\\": 0,\n    \\\"imageRemotePatternsCount\\\": 0,\n    \\\"imageSizes\\\": \\\"16,32,48,64,96,128,256,384\\\",\n    \\\"imageLoader\\\": \\\"default\\\",\n    \\\"imageFormats\\\": \\\"image/webp\\\",\n    \\\"trailingSlashEnabled\\\": false,\n    \\\"reactStrictMode\\\": false,\n    \\\"webpackVersion\\\": 5,\n    \\\"turboFlag\\\": false,\n    \\\"appDir\\\": false,\n    \\\"pagesDir\\\": true\n  \"\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:261:19)"
                ],
                "fullName": "Telemetry CLI cli session: custom babel config (plugin)",
                "location": null,
                "status": "failed",
                "title": "cli session: custom babel config (plugin)"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "Error: expect(received).toMatch(expected)\n\nExpected pattern: /\"hasNextConfig\": false/\nReceived string:  \"\n    \\\"nextVersion\\\": \\\"13.1.7-canary.8\\\",\n    \\\"nodeVersion\\\": \\\"v16.19.0\\\",\n    \\\"cliCommand\\\": \\\"build\\\",\n    \\\"isSrcDir\\\": false,\n    \\\"hasNowJson\\\": false,\n    \\\"isCustomServer\\\": null,\n    \\\"hasNextConfig\\\": true,\n    \\\"buildTarget\\\": \\\"default\\\",\n    \\\"hasWebpackConfig\\\": false,\n    \\\"hasBabelConfig\\\": true,\n    \\\"imageEnabled\\\": true,\n    \\\"imageFutureEnabled\\\": true,\n    \\\"basePathEnabled\\\": false,\n    \\\"i18nEnabled\\\": false,\n    \\\"locales\\\": null,\n    \\\"localeDomainsCount\\\": null,\n    \\\"localeDetectionEnabled\\\": null,\n    \\\"imageDomainsCount\\\": 0,\n    \\\"imageRemotePatternsCount\\\": 0,\n    \\\"imageSizes\\\": \\\"16,32,48,64,96,128,256,384\\\",\n    \\\"imageLoader\\\": \\\"default\\\",\n    \\\"imageFormats\\\": \\\"image/webp\\\",\n    \\\"trailingSlashEnabled\\\": false,\n    \\\"reactStrictMode\\\": false,\n    \\\"webpackVersion\\\": 5,\n    \\\"turboFlag\\\": false,\n    \\\"appDir\\\": false,\n    \\\"pagesDir\\\": true\n  \"\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:287:19)"
                ],
                "fullName": "Telemetry CLI cli session: package.json custom babel config (plugin)",
                "location": null,
                "status": "failed",
                "title": "cli session: package.json custom babel config (plugin)"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "Error: expect(received).toMatch(expected)\n\nExpected pattern: /\"hasNextConfig\": false/\nReceived string:  \"\n    \\\"nextVersion\\\": \\\"13.1.7-canary.8\\\",\n    \\\"nodeVersion\\\": \\\"v16.19.0\\\",\n    \\\"cliCommand\\\": \\\"build\\\",\n    \\\"isSrcDir\\\": false,\n    \\\"hasNowJson\\\": false,\n    \\\"isCustomServer\\\": null,\n    \\\"hasNextConfig\\\": true,\n    \\\"buildTarget\\\": \\\"default\\\",\n    \\\"hasWebpackConfig\\\": false,\n    \\\"hasBabelConfig\\\": true,\n    \\\"imageEnabled\\\": true,\n    \\\"imageFutureEnabled\\\": true,\n    \\\"basePathEnabled\\\": false,\n    \\\"i18nEnabled\\\": false,\n    \\\"locales\\\": null,\n    \\\"localeDomainsCount\\\": null,\n    \\\"localeDetectionEnabled\\\": null,\n    \\\"imageDomainsCount\\\": 0,\n    \\\"imageRemotePatternsCount\\\": 0,\n    \\\"imageSizes\\\": \\\"16,32,48,64,96,128,256,384\\\",\n    \\\"imageLoader\\\": \\\"default\\\",\n    \\\"imageFormats\\\": \\\"image/webp\\\",\n    \\\"trailingSlashEnabled\\\": false,\n    \\\"reactStrictMode\\\": false,\n    \\\"webpackVersion\\\": 5,\n    \\\"turboFlag\\\": false,\n    \\\"appDir\\\": false,\n    \\\"pagesDir\\\": true\n  \"\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:313:19)"
                ],
                "fullName": "Telemetry CLI cli session: custom babel config (preset)",
                "location": null,
                "status": "failed",
                "title": "cli session: custom babel config (preset)"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI cli session: next config with webpack",
                "location": null,
                "status": "passed",
                "title": "cli session: next config with webpack"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI detect static 404 correctly for `next build`",
                "location": null,
                "status": "passed",
                "title": "detect static 404 correctly for `next build`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI detect page counts correctly for `next build`",
                "location": null,
                "status": "passed",
                "title": "detect page counts correctly for `next build`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "Error: expect(received).toMatch(expected)\n\nExpected pattern: /isSrcDir.*?false/\nReceived string:  \"Loading custom turbopack binary from /work/next-dev\nRunning turbopack with args: [--dev /work/test/integration/telemetry --is-next-dev-command --port 43221 --root /work --no-open]\n\"\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:389:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Telemetry CLI detects isSrcDir dir correctly for `next dev`",
                "location": null,
                "status": "failed",
                "title": "detects isSrcDir dir correctly for `next dev`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "TypeError: Cannot read properties of null (reading 'pop')\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:460:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Telemetry CLI detects --turbo correctly for `next dev`",
                "location": null,
                "status": "failed",
                "title": "detects --turbo correctly for `next dev`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: /NEXT_CLI_SESSION_STARTED/\n\nLoading custom turbopack binary from /work/next-dev\nRunning turbopack with args: [--dev /work/test/integration/telemetry --is-next-dev-command --port 38497 --root /work --no-open]\n\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:488:7)"
                ],
                "fullName": "Telemetry CLI detects --turbo correctly for `next dev` stopped",
                "location": null,
                "status": "failed",
                "title": "detects --turbo correctly for `next dev` stopped"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: /NEXT_CLI_SESSION_STARTED/\n\nLoading custom turbopack binary from /work/next-dev\nRunning turbopack with args: [--dev /work/test/integration/telemetry --is-next-dev-command --port 34083 --root /work --no-open]\n\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:527:7)"
                ],
                "fullName": "Telemetry CLI detects correctly for `next dev` stopped (no turbo)",
                "location": null,
                "status": "failed",
                "title": "detects correctly for `next dev` stopped (no turbo)"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI should detect app page counts",
                "location": null,
                "status": "passed",
                "title": "should detect app page counts"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI detect reportWebVitals correctly for `next build`",
                "location": null,
                "status": "passed",
                "title": "detect reportWebVitals correctly for `next build`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI detects rewrites, headers, and redirects for next build",
                "location": null,
                "status": "passed",
                "title": "detects rewrites, headers, and redirects for next build"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "TypeError: Cannot read properties of null (reading 'pop')\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:761:13)"
                ],
                "fullName": "Telemetry CLI detects i18n and image configs for session start",
                "location": null,
                "status": "failed",
                "title": "detects i18n and image configs for session start"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for lint during build",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for lint during build"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for lint during build when '--no-lint' is specified",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for lint during build when '--no-lint' is specified"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for lint during build when 'ignoreDuringBuilds' is specified",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for lint during build when 'ignoreDuringBuilds' is specified"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for `next lint`",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for `next lint`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemery for usage of optimizeFonts, image, script & dynamic",
                "location": null,
                "status": "passed",
                "title": "emits telemery for usage of optimizeFonts, image, script & dynamic"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for usage of swc",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for usage of swc"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for usage of `optimizeCss`",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for usage of `optimizeCss`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for usage of `nextScriptWorkers`",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for usage of `nextScriptWorkers`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for usage of middleware",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for usage of middleware"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for usage of swc plugins",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for usage of swc plugins"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for usage of next/legacy/image",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for usage of next/legacy/image"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for usage of @vercel/og",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for usage of @vercel/og"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for transpilePackages",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for transpilePackages"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, rename '/work/test/integration/telemetry/next.config.middleware-options' -> '/work/test/integration/telemetry/next.config.js'"
                ],
                "fullName": "Telemetry CLI emits telemetry for middleware related options",
                "location": null,
                "status": "failed",
                "title": "emits telemetry for middleware related options"
              }
            ],
            "endTime": 1676061421370,
            "message": "  ● Telemetry CLI › detects correct cli session defaults\n\n    expect(received).toMatch(expected)\n\n    Expected pattern: /\"hasNextConfig\": false/\n    Received string:  \"\n        \\\"nextVersion\\\": \\\"13.1.7-canary.8\\\",\n        \\\"nodeVersion\\\": \\\"v16.19.0\\\",\n        \\\"cliCommand\\\": \\\"build\\\",\n        \\\"isSrcDir\\\": false,\n        \\\"hasNowJson\\\": false,\n        \\\"isCustomServer\\\": null,\n        \\\"hasNextConfig\\\": true,\n        \\\"buildTarget\\\": \\\"default\\\",\n        \\\"hasWebpackConfig\\\": false,\n        \\\"hasBabelConfig\\\": false,\n        \\\"imageEnabled\\\": true,\n        \\\"imageFutureEnabled\\\": true,\n        \\\"basePathEnabled\\\": false,\n        \\\"i18nEnabled\\\": false,\n        \\\"locales\\\": null,\n        \\\"localeDomainsCount\\\": null,\n        \\\"localeDetectionEnabled\\\": null,\n        \\\"imageDomainsCount\\\": 0,\n        \\\"imageRemotePatternsCount\\\": 0,\n        \\\"imageSizes\\\": \\\"16,32,48,64,96,128,256,384\\\",\n        \\\"imageLoader\\\": \\\"default\\\",\n        \\\"imageFormats\\\": \\\"image/webp\\\",\n        \\\"trailingSlashEnabled\\\": false,\n        \\\"reactStrictMode\\\": false,\n        \\\"webpackVersion\\\": 5,\n        \\\"turboFlag\\\": false,\n        \\\"appDir\\\": false,\n        \\\"pagesDir\\\": true\n      \"\n\n      207 |       .pop()\n      208 |\n    > 209 |     expect(event).toMatch(/\"hasNextConfig\": false/)\n          |                   ^\n      210 |     expect(event).toMatch(/\"buildTarget\": \"default\"/)\n      211 |     expect(event).toMatch(/\"hasWebpackConfig\": false/)\n      212 |     expect(event).toMatch(/\"hasBabelConfig\": false/)\n\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:209:19)\n\n  ● Telemetry CLI › cli session: babel tooling config\n\n    expect(received).toMatch(expected)\n\n    Expected pattern: /\"hasNextConfig\": false/\n    Received string:  \"\n        \\\"nextVersion\\\": \\\"13.1.7-canary.8\\\",\n        \\\"nodeVersion\\\": \\\"v16.19.0\\\",\n        \\\"cliCommand\\\": \\\"build\\\",\n        \\\"isSrcDir\\\": false,\n        \\\"hasNowJson\\\": false,\n        \\\"isCustomServer\\\": null,\n        \\\"hasNextConfig\\\": true,\n        \\\"buildTarget\\\": \\\"default\\\",\n        \\\"hasWebpackConfig\\\": false,\n        \\\"hasBabelConfig\\\": false,\n        \\\"imageEnabled\\\": true,\n        \\\"imageFutureEnabled\\\": true,\n        \\\"basePathEnabled\\\": false,\n        \\\"i18nEnabled\\\": false,\n        \\\"locales\\\": null,\n        \\\"localeDomainsCount\\\": null,\n        \\\"localeDetectionEnabled\\\": null,\n        \\\"imageDomainsCount\\\": 0,\n        \\\"imageRemotePatternsCount\\\": 0,\n        \\\"imageSizes\\\": \\\"16,32,48,64,96,128,256,384\\\",\n        \\\"imageLoader\\\": \\\"default\\\",\n        \\\"imageFormats\\\": \\\"image/webp\\\",\n        \\\"trailingSlashEnabled\\\": false,\n        \\\"reactStrictMode\\\": false,\n        \\\"webpackVersion\\\": 5,\n        \\\"turboFlag\\\": false,\n        \\\"appDir\\\": false,\n        \\\"pagesDir\\\": true\n      \"\n\n      233 |       .pop()\n      234 |\n    > 235 |     expect(event).toMatch(/\"hasNextConfig\": false/)\n          |                   ^\n      236 |     expect(event).toMatch(/\"buildTarget\": \"default\"/)\n      237 |     expect(event).toMatch(/\"hasWebpackConfig\": false/)\n      238 |     expect(event).toMatch(/\"hasBabelConfig\": false/)\n\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:235:19)\n\n  ● Telemetry CLI › cli session: custom babel config (plugin)\n\n    expect(received).toMatch(expected)\n\n    Expected pattern: /\"hasNextConfig\": false/\n    Received string:  \"\n        \\\"nextVersion\\\": \\\"13.1.7-canary.8\\\",\n        \\\"nodeVersion\\\": \\\"v16.19.0\\\",\n        \\\"cliCommand\\\": \\\"build\\\",\n        \\\"isSrcDir\\\": false,\n        \\\"hasNowJson\\\": false,\n        \\\"isCustomServer\\\": null,\n        \\\"hasNextConfig\\\": true,\n        \\\"buildTarget\\\": \\\"default\\\",\n        \\\"hasWebpackConfig\\\": false,\n        \\\"hasBabelConfig\\\": true,\n        \\\"imageEnabled\\\": true,\n        \\\"imageFutureEnabled\\\": true,\n        \\\"basePathEnabled\\\": false,\n        \\\"i18nEnabled\\\": false,\n        \\\"locales\\\": null,\n        \\\"localeDomainsCount\\\": null,\n        \\\"localeDetectionEnabled\\\": null,\n        \\\"imageDomainsCount\\\": 0,\n        \\\"imageRemotePatternsCount\\\": 0,\n        \\\"imageSizes\\\": \\\"16,32,48,64,96,128,256,384\\\",\n        \\\"imageLoader\\\": \\\"default\\\",\n        \\\"imageFormats\\\": \\\"image/webp\\\",\n        \\\"trailingSlashEnabled\\\": false,\n        \\\"reactStrictMode\\\": false,\n        \\\"webpackVersion\\\": 5,\n        \\\"turboFlag\\\": false,\n        \\\"appDir\\\": false,\n        \\\"pagesDir\\\": true\n      \"\n\n      259 |       .pop()\n      260 |\n    > 261 |     expect(event).toMatch(/\"hasNextConfig\": false/)\n          |                   ^\n      262 |     expect(event).toMatch(/\"buildTarget\": \"default\"/)\n      263 |     expect(event).toMatch(/\"hasWebpackConfig\": false/)\n      264 |     expect(event).toMatch(/\"hasBabelConfig\": true/)\n\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:261:19)\n\n  ● Telemetry CLI › cli session: package.json custom babel config (plugin)\n\n    expect(received).toMatch(expected)\n\n    Expected pattern: /\"hasNextConfig\": false/\n    Received string:  \"\n        \\\"nextVersion\\\": \\\"13.1.7-canary.8\\\",\n        \\\"nodeVersion\\\": \\\"v16.19.0\\\",\n        \\\"cliCommand\\\": \\\"build\\\",\n        \\\"isSrcDir\\\": false,\n        \\\"hasNowJson\\\": false,\n        \\\"isCustomServer\\\": null,\n        \\\"hasNextConfig\\\": true,\n        \\\"buildTarget\\\": \\\"default\\\",\n        \\\"hasWebpackConfig\\\": false,\n        \\\"hasBabelConfig\\\": true,\n        \\\"imageEnabled\\\": true,\n        \\\"imageFutureEnabled\\\": true,\n        \\\"basePathEnabled\\\": false,\n        \\\"i18nEnabled\\\": false,\n        \\\"locales\\\": null,\n        \\\"localeDomainsCount\\\": null,\n        \\\"localeDetectionEnabled\\\": null,\n        \\\"imageDomainsCount\\\": 0,\n        \\\"imageRemotePatternsCount\\\": 0,\n        \\\"imageSizes\\\": \\\"16,32,48,64,96,128,256,384\\\",\n        \\\"imageLoader\\\": \\\"default\\\",\n        \\\"imageFormats\\\": \\\"image/webp\\\",\n        \\\"trailingSlashEnabled\\\": false,\n        \\\"reactStrictMode\\\": false,\n        \\\"webpackVersion\\\": 5,\n        \\\"turboFlag\\\": false,\n        \\\"appDir\\\": false,\n        \\\"pagesDir\\\": true\n      \"\n\n      285 |       .pop()\n      286 |\n    > 287 |     expect(event).toMatch(/\"hasNextConfig\": false/)\n          |                   ^\n      288 |     expect(event).toMatch(/\"buildTarget\": \"default\"/)\n      289 |     expect(event).toMatch(/\"hasWebpackConfig\": false/)\n      290 |     expect(event).toMatch(/\"hasBabelConfig\": true/)\n\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:287:19)\n\n  ● Telemetry CLI › cli session: custom babel config (preset)\n\n    expect(received).toMatch(expected)\n\n    Expected pattern: /\"hasNextConfig\": false/\n    Received string:  \"\n        \\\"nextVersion\\\": \\\"13.1.7-canary.8\\\",\n        \\\"nodeVersion\\\": \\\"v16.19.0\\\",\n        \\\"cliCommand\\\": \\\"build\\\",\n        \\\"isSrcDir\\\": false,\n        \\\"hasNowJson\\\": false,\n        \\\"isCustomServer\\\": null,\n        \\\"hasNextConfig\\\": true,\n        \\\"buildTarget\\\": \\\"default\\\",\n        \\\"hasWebpackConfig\\\": false,\n        \\\"hasBabelConfig\\\": true,\n        \\\"imageEnabled\\\": true,\n        \\\"imageFutureEnabled\\\": true,\n        \\\"basePathEnabled\\\": false,\n        \\\"i18nEnabled\\\": false,\n        \\\"locales\\\": null,\n        \\\"localeDomainsCount\\\": null,\n        \\\"localeDetectionEnabled\\\": null,\n        \\\"imageDomainsCount\\\": 0,\n        \\\"imageRemotePatternsCount\\\": 0,\n        \\\"imageSizes\\\": \\\"16,32,48,64,96,128,256,384\\\",\n        \\\"imageLoader\\\": \\\"default\\\",\n        \\\"imageFormats\\\": \\\"image/webp\\\",\n        \\\"trailingSlashEnabled\\\": false,\n        \\\"reactStrictMode\\\": false,\n        \\\"webpackVersion\\\": 5,\n        \\\"turboFlag\\\": false,\n        \\\"appDir\\\": false,\n        \\\"pagesDir\\\": true\n      \"\n\n      311 |       .pop()\n      312 |\n    > 313 |     expect(event).toMatch(/\"hasNextConfig\": false/)\n          |                   ^\n      314 |     expect(event).toMatch(/\"buildTarget\": \"default\"/)\n      315 |     expect(event).toMatch(/\"hasWebpackConfig\": false/)\n      316 |     expect(event).toMatch(/\"hasBabelConfig\": true/)\n\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:313:19)\n\n  ● Telemetry CLI › detects isSrcDir dir correctly for `next dev`\n\n    expect(received).toMatch(expected)\n\n    Expected pattern: /isSrcDir.*?false/\n    Received string:  \"Loading custom turbopack binary from /work/next-dev\n    Running turbopack with args: [--dev /work/test/integration/telemetry --is-next-dev-command --port 43221 --root /work --no-open]\n    \"\n\n      387 |     await waitFor(1000)\n      388 |     await killApp(app)\n    > 389 |     expect(stderr).toMatch(/isSrcDir.*?false/)\n          |                    ^\n      390 |\n      391 |     await fs.move(path.join(appDir, 'pages'), path.join(appDir, 'src/pages'))\n      392 |     stderr = ''\n\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:389:20)\n\n  ● Telemetry CLI › detects --turbo correctly for `next dev`\n\n    TypeError: Cannot read properties of null (reading 'pop')\n\n      458 |       }\n      459 |       const event1 = /NEXT_CLI_SESSION_STARTED[\\s\\S]+?{([\\s\\S]+?)}/\n    > 460 |         .exec(stderr)\n          |               ^\n      461 |         .pop()\n      462 |\n      463 |       expect(event1).toMatch(/\"pagesDir\": true/)\n\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:460:15)\n\n  ● Telemetry CLI › detects --turbo correctly for `next dev` stopped\n\n    TIMED OUT: /NEXT_CLI_SESSION_STARTED/\n\n    Loading custom turbopack binary from /work/next-dev\n    Running turbopack with args: [--dev /work/test/integration/telemetry --is-next-dev-command --port 38497 --root /work --no-open]\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:488:7)\n\n  ● Telemetry CLI › detects correctly for `next dev` stopped (no turbo)\n\n    TIMED OUT: /NEXT_CLI_SESSION_STARTED/\n\n    Loading custom turbopack binary from /work/next-dev\n    Running turbopack with args: [--dev /work/test/integration/telemetry --is-next-dev-command --port 34083 --root /work --no-open]\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:527:7)\n\n  ● Telemetry CLI › detects i18n and image configs for session start\n\n    TypeError: Cannot read properties of null (reading 'pop')\n\n      759 |\n      760 |     const event2 = /NEXT_CLI_SESSION_STARTED[\\s\\S]+?{([\\s\\S]+?)}/\n    > 761 |       .exec(stderr2)\n          |             ^\n      762 |       .pop()\n      763 |     expect(event2).toMatch(/\"i18nEnabled\": true/)\n      764 |     expect(event2).toMatch(/\"locales\": \"en,nl,fr\"/)\n\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:761:13)\n\n  ● Telemetry CLI › emits telemetry for middleware related options\n\n    ENOENT: no such file or directory, rename '/work/test/integration/telemetry/next.config.middleware-options' -> '/work/test/integration/telemetry/next.config.js'\n\n\n",
            "name": "/work/test/integration/telemetry/test/index.test.js",
            "startTime": 1676061070026,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 2)",
      "name": "test/development/acceptance-app/editor-links.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 1,
        "numPassedTestSuites": 0,
        "numPassedTests": 0,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 1,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676059688450,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Error Overlay unsupported app features"
                ],
                "failureMessages": [
                  "TypeError: Cannot read properties of null (reading 'includes')\n    at _default (/work/node_modules/.pnpm/jest-extended@1.2.1/node_modules/jest-extended/dist/matchers/toInclude/predicate.js:8:46)\n    at Object.toInclude (/work/node_modules/.pnpm/jest-extended@1.2.1/node_modules/jest-extended/dist/matchers/toInclude/index.js:19:39)\n    at __EXTERNAL_MATCHER_TRAP__ (/work/node_modules/.pnpm/expect@27.5.1/node_modules/expect/build/index.js:386:30)\n    at Object.toInclude (/work/node_modules/.pnpm/expect@27.5.1/node_modules/expect/build/index.js:387:15)\n    at Object.<anonymous> (/work/test/development/acceptance-app/unsupported-app-features.test.ts:34:52)"
                ],
                "fullName": "Error Overlay unsupported app features should show error exporting AMP config in app dir",
                "location": null,
                "status": "failed",
                "title": "should show error exporting AMP config in app dir"
              }
            ],
            "endTime": 1676059785077,
            "message": "  ● Error Overlay unsupported app features › should show error exporting AMP config in app dir\n\n    TypeError: Cannot read properties of null (reading 'includes')\n\n      32 |\n      33 |       await session.hasRedbox(true)\n    > 34 |       expect(await session.getRedboxDescription()).toInclude(\n         |                                                    ^\n      35 |         'AMP is not supported in the app directory. If you need to use AMP it will continue to be supported in the pages directory.'\n      36 |       )\n      37 |\n\n      at _default (../node_modules/.pnpm/jest-extended@1.2.1/node_modules/jest-extended/dist/matchers/toInclude/predicate.js:8:46)\n      at __EXTERNAL_MATCHER_TRAP__ (../node_modules/.pnpm/expect@27.5.1/node_modules/expect/build/index.js:386:30)\n      at Object.toInclude (../node_modules/.pnpm/expect@27.5.1/node_modules/expect/build/index.js:387:15)\n      at Object.<anonymous> (development/acceptance-app/unsupported-app-features.test.ts:34:52)\n",
            "name": "/work/test/development/acceptance-app/unsupported-app-features.test.ts",
            "startTime": 1676059688546,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 2)",
      "name": "test/e2e/app-dir/dynamic/dynamic.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 2,
        "numPassedTestSuites": 0,
        "numPassedTests": 2,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 4,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676060193547,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Type module interop"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"hello world\"\nReceived string:    \"Execution of get_from_source failed·\nCaused by:\n    0: Execution of resolve_source_request failed\n    1: Execution of CombinedContentSource::get failed\n    2: Execution of create_app_source failed\n    3: Execution of load_next_config failed\n    4: Execution of evaluate failed\n    5: node process exited before we could connect to it with exit status: 1\n       Process output:········\n       Process error output:\n       file:///tmp/next-install-1ae68d49f1836fe03c0bcafaa2c8290a257242e387178c13573c0f99f77c5af2/.next/build/next_config/load-next-config.js:3\n       require(\\\"./chunks/load-next-config.js\\\");\n       ^········\n       ReferenceError: require is not defined in ES module scope, you can use import instead\n       This file is being treated as an ES module because it has a '.js' file extension and '/tmp/next-install-1ae68d49f1836fe03c0bcafaa2c8290a257242e387178c13573c0f99f77c5af2/package.json' contains \\\"type\\\": \\\"module\\\". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.\n           at file:///tmp/next-install-1ae68d49f1836fe03c0bcafaa2c8290a257242e387178c13573c0f99f77c5af2/.next/build/next_config/load-next-config.js:3:1\n           at ModuleJob.run (node:internal/modules/esm/module_job:193:25)\n           at async Promise.all (index 0)\n           at async ESMLoader.import (node:internal/modules/esm/loader:530:24)\n           at async loadESM (node:internal/process/esm_loader:91:5)\n           at async handleMainPromise (node:internal/modules/run_main:65:12)\n       \"\n    at Object.<anonymous> (/work/test/e2e/type-module-interop/index.test.ts:88:18)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Type module interop should render server-side",
                "location": null,
                "status": "failed",
                "title": "should render server-side"
              },
              {
                "ancestorTitles": [
                  "Type module interop"
                ],
                "failureMessages": [],
                "fullName": "Type module interop should render client-side",
                "location": null,
                "status": "passed",
                "title": "should render client-side"
              },
              {
                "ancestorTitles": [
                  "Type module interop"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"link to home\"\nReceived: \"\"\n    at Object.<anonymous> (/work/test/e2e/type-module-interop/index.test.ts:105:39)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Type module interop should render server-side with modules",
                "location": null,
                "status": "failed",
                "title": "should render server-side with modules"
              },
              {
                "ancestorTitles": [
                  "Type module interop"
                ],
                "failureMessages": [],
                "fullName": "Type module interop should render client-side with modules",
                "location": null,
                "status": "passed",
                "title": "should render client-side with modules"
              }
            ],
            "endTime": 1676060214487,
            "message": "  ● Type module interop › should render server-side\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"hello world\"\n    Received string:    \"Execution of get_from_source failed·\n    Caused by:\n        0: Execution of resolve_source_request failed\n        1: Execution of CombinedContentSource::get failed\n        2: Execution of create_app_source failed\n        3: Execution of load_next_config failed\n        4: Execution of evaluate failed\n        5: node process exited before we could connect to it with exit status: 1\n           Process output:········\n           Process error output:\n           file:///tmp/next-install-1ae68d49f1836fe03c0bcafaa2c8290a257242e387178c13573c0f99f77c5af2/.next/build/next_config/load-next-config.js:3\n           require(\\\"./chunks/load-next-config.js\\\");\n           ^········\n           ReferenceError: require is not defined in ES module scope, you can use import instead\n           This file is being treated as an ES module because it has a '.js' file extension and '/tmp/next-install-1ae68d49f1836fe03c0bcafaa2c8290a257242e387178c13573c0f99f77c5af2/package.json' contains \\\"type\\\": \\\"module\\\". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.\n\n      at ../file:/tmp/next-install-1ae68d49f1836fe03c0bcafaa2c8290a257242e387178c13573c0f99f77c5af2/.next/build/next_config/load-next-config.js:3:1\n                 at async Promise.all (index 0)\n             \"\n      at Object.<anonymous> (e2e/type-module-interop/index.test.ts:88:18)\n\n  ● Type module interop › should render server-side with modules\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"link to home\"\n    Received: \"\"\n\n      103 |     const html = await renderViaHTTP(next.url, '/modules')\n      104 |     const $ = cheerio.load(html)\n    > 105 |     expect($('#link-to-home').text()).toBe('link to home')\n          |                                       ^\n      106 |   })\n      107 |\n      108 |   it('should render client-side with modules', async () => {\n\n      at Object.<anonymous> (e2e/type-module-interop/index.test.ts:105:39)\n",
            "name": "/work/test/e2e/type-module-interop/index.test.ts",
            "startTime": 1676060193640,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 2)",
      "name": "test/integration/custom-routes-catchall/test/index.test.js",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 65,
        "numPassedTestSuites": 0,
        "numPassedTests": 5,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 70,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676060771023,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [],
                "fullName": "404 handling custom _error next dev should normalize repeated slashes in redirects correctly",
                "location": null,
                "status": "passed",
                "title": "should normalize repeated slashes in redirects correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 308\nReceived: 404\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:99:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle double slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 308\nReceived: 404\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:129:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle double slashes correctly with query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 308\nReceived: 404\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:153:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle double slashes correctly with hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D_packages_next_e2d7c0._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages_404.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_internal_shims-client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_dev_ffb6e5._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_overlay_client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_strip-ansi_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_stacktrace-parser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_anser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_platform_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_css.escape_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/ef3fd_.pnpm_376be9._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D__8becc3._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/development/_buildManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"development\\\",\\\"runtimeConfig\\\":{},\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:178:32)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle double slashes correctly with encoded",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D_packages_next_e2d7c0._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages_404.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_internal_shims-client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_dev_ffb6e5._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_overlay_client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_strip-ansi_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_stacktrace-parser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_anser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_platform_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_css.escape_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/ef3fd_.pnpm_376be9._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D__8becc3._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/development/_buildManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{\\\"hello\\\":\\\"1\\\"},\\\"buildId\\\":\\\"development\\\",\\\"runtimeConfig\\\":{},\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:202:32)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle double slashes correctly with encoded and query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D_packages_next_e2d7c0._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages_404.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_internal_shims-client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_dev_ffb6e5._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_overlay_client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_strip-ansi_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_stacktrace-parser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_anser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_platform_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_css.escape_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/ef3fd_.pnpm_376be9._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D__8becc3._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/development/_buildManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"development\\\",\\\"runtimeConfig\\\":{},\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:222:32)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle double slashes correctly with encoded and hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 308\nReceived: 404\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:241:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle backslashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle backslashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 308\nReceived: 404\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:266:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle mixed backslashes/forward slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle mixed backslashes/forward slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [],
                "fullName": "404 handling custom _error next dev should handle slashes in next/link correctly",
                "location": null,
                "status": "passed",
                "title": "should handle slashes in next/link correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/google.com\"\nReceived: \"/\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:343:62)"
                ],
                "fullName": "404 handling custom _error next dev should handle slashes in router push correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in router push correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: /%2Fgoogle.com\n\n/\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:385:7)"
                ],
                "fullName": "404 handling custom _error next dev should have no error from encoded slashes in router push",
                "location": null,
                "status": "failed",
                "title": "should have no error from encoded slashes in router push"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [],
                "fullName": "404 handling custom _error production next start should normalize repeated slashes in redirects correctly",
                "location": null,
                "status": "passed",
                "title": "should normalize repeated slashes in redirects correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:114:70)"
                ],
                "fullName": "404 handling custom _error production next start should handle double slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:143:70)"
                ],
                "fullName": "404 handling custom _error production next start should handle double slashes correctly with query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:167:70)"
                ],
                "fullName": "404 handling custom _error production next start should handle double slashes correctly with hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:178:32)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error production next start should handle double slashes correctly with encoded",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:202:32)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error production next start should handle double slashes correctly with encoded and query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:222:32)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error production next start should handle double slashes correctly with encoded and hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:256:70)"
                ],
                "fullName": "404 handling custom _error production next start should handle backslashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle backslashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:281:70)"
                ],
                "fullName": "404 handling custom _error production next start should handle mixed backslashes/forward slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle mixed backslashes/forward slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [],
                "fullName": "404 handling custom _error production next start should handle slashes in next/link correctly",
                "location": null,
                "status": "passed",
                "title": "should handle slashes in next/link correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/_error\"\nReceived: \"/404\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:348:65)"
                ],
                "fullName": "404 handling custom _error production next start should handle slashes in router push correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in router push correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/_error\"\nReceived: \"/404\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:394:65)"
                ],
                "fullName": "404 handling custom _error production next start should have no error from encoded slashes in router push",
                "location": null,
                "status": "failed",
                "title": "should have no error from encoded slashes in router push"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:114:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle double slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\">/google.com?h=1</p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:143:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle double slashes correctly with query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:167:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle double slashes correctly with hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:186:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle double slashes correctly with encoded",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:211:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle double slashes correctly with encoded and query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:231:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle double slashes correctly with encoded and hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:256:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle backslashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle backslashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:281:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle mixed backslashes/forward slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle mixed backslashes/forward slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [],
                "fullName": "404 handling custom _error production next export should handle slashes in next/link correctly",
                "location": null,
                "status": "passed",
                "title": "should handle slashes in next/link correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/_error\"\nReceived: \"/404\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:348:65)"
                ],
                "fullName": "404 handling custom _error production next export should handle slashes in router push correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in router push correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/_error\"\nReceived: \"/404\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:394:65)"
                ],
                "fullName": "404 handling custom _error production next export should have no error from encoded slashes in router push",
                "location": null,
                "status": "failed",
                "title": "should have no error from encoded slashes in router push"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should normalize repeated slashes in redirects correctly",
                "location": null,
                "status": "failed",
                "title": "should normalize repeated slashes in redirects correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle double slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle double slashes correctly with query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle double slashes correctly with hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle double slashes correctly with encoded",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle double slashes correctly with encoded and query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle double slashes correctly with encoded and hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle backslashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle backslashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle mixed backslashes/forward slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle mixed backslashes/forward slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle slashes in next/link correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in next/link correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle slashes in router push correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in router push correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should have no error from encoded slashes in router push",
                "location": null,
                "status": "failed",
                "title": "should have no error from encoded slashes in router push"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should normalize repeated slashes in redirects correctly",
                "location": null,
                "status": "failed",
                "title": "should normalize repeated slashes in redirects correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle double slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle double slashes correctly with query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle double slashes correctly with hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle double slashes correctly with encoded",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle double slashes correctly with encoded and query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle double slashes correctly with encoded and hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle backslashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle backslashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle mixed backslashes/forward slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle mixed backslashes/forward slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle slashes in next/link correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in next/link correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle slashes in router push correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in router push correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should have no error from encoded slashes in router push",
                "location": null,
                "status": "failed",
                "title": "should have no error from encoded slashes in router push"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle double slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle double slashes correctly with query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle double slashes correctly with hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle double slashes correctly with encoded",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle double slashes correctly with encoded and query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle double slashes correctly with encoded and hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle backslashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle backslashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle mixed backslashes/forward slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle mixed backslashes/forward slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle slashes in next/link correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in next/link correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle slashes in router push correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in router push correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should have no error from encoded slashes in router push",
                "location": null,
                "status": "failed",
                "title": "should have no error from encoded slashes in router push"
              }
            ],
            "endTime": 1676060883745,
            "message": "  ● 404 handling › custom _error › next dev › should handle double slashes correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 308\n    Received: 404\n\n       97 |         redirect: 'manual',\n       98 |       })\n    >  99 |       expect(res.status).toBe(308)\n          |                          ^\n      100 |\n      101 |       const parsedUrl = url.parse(res.headers.get('location'), true)\n      102 |       expect(parsedUrl.pathname).toBe('/google.com')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:99:26)\n\n  ● 404 handling › custom _error › next dev › should handle double slashes correctly with query\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 308\n    Received: 404\n\n      127 |         }\n      128 |       )\n    > 129 |       expect(res.status).toBe(308)\n          |                          ^\n      130 |       const parsedUrl = url.parse(res.headers.get('location'), true)\n      131 |       expect(parsedUrl.pathname).toBe('/google.com')\n      132 |       expect(parsedUrl.hostname).toBe('localhost')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:129:26)\n\n  ● 404 handling › custom _error › next dev › should handle double slashes correctly with hash\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 308\n    Received: 404\n\n      151 |         redirect: 'manual',\n      152 |       })\n    > 153 |       expect(res.status).toBe(308)\n          |                          ^\n      154 |       const parsedUrl = url.parse(res.headers.get('location'), true)\n      155 |       expect(parsedUrl.pathname).toBe('/google.com')\n      156 |       expect(parsedUrl.hostname).toBe('localhost')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:153:26)\n\n  ● 404 handling › custom _error › next dev › should handle double slashes correctly with encoded\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D_packages_next_e2d7c0._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages_404.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_internal_shims-client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_dev_ffb6e5._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_overlay_client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_strip-ansi_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_stacktrace-parser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_anser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_platform_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_css.escape_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/ef3fd_.pnpm_376be9._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D__8becc3._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/development/_buildManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"development\\\",\\\"runtimeConfig\\\":{},\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\n      176 |       })\n      177 |       expect(res.status).toBe(404)\n    > 178 |       expect(await res.text()).toContain(notFoundContent)\n          |                                ^\n      179 |     }\n      180 |\n      181 |     const browser = await webdriver(appPort, '/%2Fgoogle.com')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:178:32)\n\n  ● 404 handling › custom _error › next dev › should handle double slashes correctly with encoded and query\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D_packages_next_e2d7c0._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages_404.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_internal_shims-client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_dev_ffb6e5._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_overlay_client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_strip-ansi_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_stacktrace-parser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_anser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_platform_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_css.escape_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/ef3fd_.pnpm_376be9._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D__8becc3._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/development/_buildManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{\\\"hello\\\":\\\"1\\\"},\\\"buildId\\\":\\\"development\\\",\\\"runtimeConfig\\\":{},\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\n      200 |       )\n      201 |       expect(res.status).toBe(404)\n    > 202 |       expect(await res.text()).toContain(notFoundContent)\n          |                                ^\n      203 |     }\n      204 |\n      205 |     const browser = await webdriver(appPort, '/%2Fgoogle.com?hello=1')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:202:32)\n\n  ● 404 handling › custom _error › next dev › should handle double slashes correctly with encoded and hash\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D_packages_next_e2d7c0._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages_404.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_internal_shims-client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_dev_ffb6e5._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_overlay_client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_strip-ansi_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_stacktrace-parser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_anser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_platform_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_css.escape_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/ef3fd_.pnpm_376be9._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D__8becc3._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/development/_buildManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"development\\\",\\\"runtimeConfig\\\":{},\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\n      220 |       })\n      221 |       expect(res.status).toBe(404)\n    > 222 |       expect(await res.text()).toContain(notFoundContent)\n          |                                ^\n      223 |     }\n      224 |\n      225 |     const browser = await webdriver(appPort, '/%2Fgoogle.com#hello')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:222:32)\n\n  ● 404 handling › custom _error › next dev › should handle backslashes correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 308\n    Received: 404\n\n      239 |         redirect: 'manual',\n      240 |       })\n    > 241 |       expect(res.status).toBe(308)\n          |                          ^\n      242 |       const parsedUrl = url.parse(res.headers.get('location'), true)\n      243 |       expect(parsedUrl.pathname).toBe('/google.com')\n      244 |       expect(parsedUrl.hostname).toBe('localhost')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:241:26)\n\n  ● 404 handling › custom _error › next dev › should handle mixed backslashes/forward slashes correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 308\n    Received: 404\n\n      264 |         redirect: 'manual',\n      265 |       })\n    > 266 |       expect(res.status).toBe(308)\n          |                          ^\n      267 |       const parsedUrl = url.parse(res.headers.get('location'), true)\n      268 |       expect(parsedUrl.pathname).toBe(isExport ? '//google.com' : '/google.com')\n      269 |       expect(parsedUrl.hostname).toBe('localhost')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:266:26)\n\n  ● 404 handling › custom _error › next dev › should handle slashes in router push correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/google.com\"\n    Received: \"/\"\n\n      341 |         })`\n      342 |       )\n    > 343 |       expect(await browser.eval('window.location.pathname')).toBe(item.pathname)\n          |                                                              ^\n      344 |       expect(await browser.eval('window.location.search')).toBe(\n      345 |         item.search || ''\n      346 |       )\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:343:62)\n\n  ● 404 handling › custom _error › next dev › should have no error from encoded slashes in router push\n\n    TIMED OUT: /%2Fgoogle.com\n\n    /\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:385:7)\n\n  ● 404 handling › custom _error › production › next start › should handle double slashes correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      112 |     expect(await browser.eval('window.location.search')).toBe('')\n      113 |     expect(await browser.eval('window.location.hash')).toBe('')\n    > 114 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      115 |       notFoundContent\n      116 |     )\n      117 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:114:70)\n\n  ● 404 handling › custom _error › production › next start › should handle double slashes correctly with query\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      141 |     expect(await browser.eval('window.location.search')).toBe('?h=1')\n      142 |     expect(await browser.eval('window.location.hash')).toBe('')\n    > 143 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      144 |       notFoundContent\n      145 |     )\n      146 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:143:70)\n\n  ● 404 handling › custom _error › production › next start › should handle double slashes correctly with hash\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      165 |     expect(await browser.eval('window.location.hash')).toBe('#hello')\n      166 |     expect(await browser.eval('window.location.search')).toBe('')\n    > 167 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      168 |       notFoundContent\n      169 |     )\n      170 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:167:70)\n\n  ● 404 handling › custom _error › production › next start › should handle double slashes correctly with encoded\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\n      176 |       })\n      177 |       expect(res.status).toBe(404)\n    > 178 |       expect(await res.text()).toContain(notFoundContent)\n          |                                ^\n      179 |     }\n      180 |\n      181 |     const browser = await webdriver(appPort, '/%2Fgoogle.com')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:178:32)\n\n  ● 404 handling › custom _error › production › next start › should handle double slashes correctly with encoded and query\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\n      200 |       )\n      201 |       expect(res.status).toBe(404)\n    > 202 |       expect(await res.text()).toContain(notFoundContent)\n          |                                ^\n      203 |     }\n      204 |\n      205 |     const browser = await webdriver(appPort, '/%2Fgoogle.com?hello=1')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:202:32)\n\n  ● 404 handling › custom _error › production › next start › should handle double slashes correctly with encoded and hash\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\n      220 |       })\n      221 |       expect(res.status).toBe(404)\n    > 222 |       expect(await res.text()).toContain(notFoundContent)\n          |                                ^\n      223 |     }\n      224 |\n      225 |     const browser = await webdriver(appPort, '/%2Fgoogle.com#hello')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:222:32)\n\n  ● 404 handling › custom _error › production › next start › should handle backslashes correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      254 |     expect(await browser.eval('window.location.hash')).toBe('')\n      255 |     expect(await browser.eval('window.location.search')).toBe('')\n    > 256 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      257 |       notFoundContent\n      258 |     )\n      259 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:256:70)\n\n  ● 404 handling › custom _error › production › next start › should handle mixed backslashes/forward slashes correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      279 |     expect(await browser.eval('window.location.hash')).toBe('#hello')\n      280 |     expect(await browser.eval('window.location.search')).toBe('')\n    > 281 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      282 |       notFoundContent\n      283 |     )\n      284 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:281:70)\n\n  ● 404 handling › custom _error › production › next start › should handle slashes in router push correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/_error\"\n    Received: \"/404\"\n\n      346 |       )\n      347 |       expect(await browser.eval('window.location.hash')).toBe(item.hash || '')\n    > 348 |       expect(await browser.eval('window.next.router.pathname')).toBe(item.page)\n          |                                                                 ^\n      349 |     }\n      350 |   })\n      351 |\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:348:65)\n\n  ● 404 handling › custom _error › production › next start › should have no error from encoded slashes in router push\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/_error\"\n    Received: \"/404\"\n\n      392 |       )\n      393 |       expect(await browser.eval('window.location.hash')).toBe(item.hash || '')\n    > 394 |       expect(await browser.eval('window.next.router.pathname')).toBe(item.page)\n          |                                                                 ^\n      395 |       expect(await browser.eval('window.next.router.asPath')).toBe(\n      396 |         item.as || item.href\n      397 |       )\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:394:65)\n\n  ● 404 handling › custom _error › production › next export › should handle double slashes correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      112 |     expect(await browser.eval('window.location.search')).toBe('')\n      113 |     expect(await browser.eval('window.location.hash')).toBe('')\n    > 114 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      115 |       notFoundContent\n      116 |     )\n      117 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:114:70)\n\n  ● 404 handling › custom _error › production › next export › should handle double slashes correctly with query\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\">/google.com?h=1</p></next-route-announcer></body>\"\n\n      141 |     expect(await browser.eval('window.location.search')).toBe('?h=1')\n      142 |     expect(await browser.eval('window.location.hash')).toBe('')\n    > 143 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      144 |       notFoundContent\n      145 |     )\n      146 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:143:70)\n\n  ● 404 handling › custom _error › production › next export › should handle double slashes correctly with hash\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      165 |     expect(await browser.eval('window.location.hash')).toBe('#hello')\n      166 |     expect(await browser.eval('window.location.search')).toBe('')\n    > 167 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      168 |       notFoundContent\n      169 |     )\n      170 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:167:70)\n\n  ● 404 handling › custom _error › production › next export › should handle double slashes correctly with encoded\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      184 |       '/%2Fgoogle.com'\n      185 |     )\n    > 186 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      187 |       notFoundContent\n      188 |     )\n      189 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:186:70)\n\n  ● 404 handling › custom _error › production › next export › should handle double slashes correctly with encoded and query\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      209 |     )\n      210 |     expect(await browser.eval('window.location.search')).toBe('?hello=1')\n    > 211 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      212 |       notFoundContent\n      213 |     )\n      214 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:211:70)\n\n  ● 404 handling › custom _error › production › next export › should handle double slashes correctly with encoded and hash\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      229 |     )\n      230 |     expect(await browser.eval('window.location.hash')).toBe('#hello')\n    > 231 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      232 |       notFoundContent\n      233 |     )\n      234 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:231:70)\n\n  ● 404 handling › custom _error › production › next export › should handle backslashes correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      254 |     expect(await browser.eval('window.location.hash')).toBe('')\n      255 |     expect(await browser.eval('window.location.search')).toBe('')\n    > 256 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      257 |       notFoundContent\n      258 |     )\n      259 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:256:70)\n\n  ● 404 handling › custom _error › production › next export › should handle mixed backslashes/forward slashes correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/_XkNDnDV2IhkqketfNncK/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"_XkNDnDV2IhkqketfNncK\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      279 |     expect(await browser.eval('window.location.hash')).toBe('#hello')\n      280 |     expect(await browser.eval('window.location.search')).toBe('')\n    > 281 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      282 |       notFoundContent\n      283 |     )\n      284 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:281:70)\n\n  ● 404 handling › custom _error › production › next export › should handle slashes in router push correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/_error\"\n    Received: \"/404\"\n\n      346 |       )\n      347 |       expect(await browser.eval('window.location.hash')).toBe(item.hash || '')\n    > 348 |       expect(await browser.eval('window.next.router.pathname')).toBe(item.page)\n          |                                                                 ^\n      349 |     }\n      350 |   })\n      351 |\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:348:65)\n\n  ● 404 handling › custom _error › production › next export › should have no error from encoded slashes in router push\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/_error\"\n    Received: \"/404\"\n\n      392 |       )\n      393 |       expect(await browser.eval('window.location.hash')).toBe(item.hash || '')\n    > 394 |       expect(await browser.eval('window.next.router.pathname')).toBe(item.page)\n          |                                                                 ^\n      395 |       expect(await browser.eval('window.next.router.asPath')).toBe(\n      396 |         item.as || item.href\n      397 |       )\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:394:65)\n\n  ● 404 handling › pages/404 › next dev › should normalize repeated slashes in redirects correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle double slashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle double slashes correctly with query\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle double slashes correctly with hash\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle double slashes correctly with encoded\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle double slashes correctly with encoded and query\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle double slashes correctly with encoded and hash\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle backslashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle mixed backslashes/forward slashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle slashes in next/link correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle slashes in router push correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should have no error from encoded slashes in router push\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should normalize repeated slashes in redirects correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle double slashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle double slashes correctly with query\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle double slashes correctly with hash\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle double slashes correctly with encoded\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle double slashes correctly with encoded and query\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle double slashes correctly with encoded and hash\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle backslashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle mixed backslashes/forward slashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle slashes in next/link correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle slashes in router push correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should have no error from encoded slashes in router push\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle double slashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle double slashes correctly with query\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle double slashes correctly with hash\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle double slashes correctly with encoded\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle double slashes correctly with encoded and query\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle double slashes correctly with encoded and hash\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle backslashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle mixed backslashes/forward slashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle slashes in next/link correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle slashes in router push correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should have no error from encoded slashes in router push\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n",
            "name": "/work/test/integration/repeated-slashes/test/index.test.js",
            "startTime": 1676060771116,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 1)",
      "name": "test/development/acceptance-app/component-stack.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 6,
        "numPassedTestSuites": 0,
        "numPassedTests": 8,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 14,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676059601669,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "createContext called in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:41:9)"
                ],
                "fullName": "Error Overlay for server components createContext called in Server Component should show error when React.createContext is called",
                "location": null,
                "status": "failed",
                "title": "should show error when React.createContext is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "createContext called in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:96:9)"
                ],
                "fullName": "Error Overlay for server components createContext called in Server Component should show error when React.createContext is called in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when React.createContext is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "createContext called in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:150:9)"
                ],
                "fullName": "Error Overlay for server components createContext called in Server Component should show error when createContext is called in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when createContext is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "React component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components React component hooks called in Server Component should show error when React.<client-hook> is called",
                "location": null,
                "status": "passed",
                "title": "should show error when React.<client-hook> is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "React component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components React component hooks called in Server Component should show error when React.<client-hook> is called in external package",
                "location": null,
                "status": "passed",
                "title": "should show error when React.<client-hook> is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "React component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components React component hooks called in Server Component should show error when React client hook is called in external package",
                "location": null,
                "status": "passed",
                "title": "should show error when React client hook is called in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Class component used in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:328:9)"
                ],
                "fullName": "Error Overlay for server components Class component used in Server Component should show error when Class Component is used",
                "location": null,
                "status": "failed",
                "title": "should show error when Class Component is used"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Class component used in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:381:9)"
                ],
                "fullName": "Error Overlay for server components Class component used in Server Component should show error when React.PureComponent is rendered in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when React.PureComponent is rendered in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Class component used in Server Component"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: success\n\nundefined\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/development/acceptance-app/server-components.test.ts:434:9)"
                ],
                "fullName": "Error Overlay for server components Class component used in Server Component should show error when Component is rendered in external package",
                "location": null,
                "status": "failed",
                "title": "should show error when Component is rendered in external package"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useRouter is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useRouter is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSearchParams is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useSearchParams is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSelectedLayoutSegment is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useSelectedLayoutSegment is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when useSelectedLayoutSegments is called",
                "location": null,
                "status": "passed",
                "title": "should show error when useSelectedLayoutSegments is called"
              },
              {
                "ancestorTitles": [
                  "Error Overlay for server components",
                  "Next.js component hooks called in Server Component"
                ],
                "failureMessages": [],
                "fullName": "Error Overlay for server components Next.js component hooks called in Server Component should show error when usePathname is called",
                "location": null,
                "status": "passed",
                "title": "should show error when usePathname is called"
              }
            ],
            "endTime": 1676060007140,
            "message": "  ● Error Overlay for server components › createContext called in Server Component › should show error when React.createContext is called\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:41:9)\n\n  ● Error Overlay for server components › createContext called in Server Component › should show error when React.createContext is called in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:96:9)\n\n  ● Error Overlay for server components › createContext called in Server Component › should show error when createContext is called in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:150:9)\n\n  ● Error Overlay for server components › Class component used in Server Component › should show error when Class Component is used\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:328:9)\n\n  ● Error Overlay for server components › Class component used in Server Component › should show error when React.PureComponent is rendered in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:381:9)\n\n  ● Error Overlay for server components › Class component used in Server Component › should show error when Component is rendered in external package\n\n    TIMED OUT: success\n\n    undefined\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (development/acceptance-app/server-components.test.ts:434:9)\n",
            "name": "/work/test/development/acceptance-app/server-components.test.ts",
            "startTime": 1676059601762,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 1)",
      "name": "test/e2e/edge-can-read-request-body/index.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 3,
        "numPassedTestSuites": 0,
        "numPassedTests": 1,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 4,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676060418865,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "@next/font/google without-preloaded-fonts without _app"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/work/test/e2e/next-font/without-preloaded-fonts.test.ts:47:48)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "@next/font/google without-preloaded-fonts without _app without preload",
                "location": null,
                "status": "failed",
                "title": "without preload"
              },
              {
                "ancestorTitles": [
                  "@next/font/google without-preloaded-fonts without _app"
                ],
                "failureMessages": [],
                "fullName": "@next/font/google without-preloaded-fonts without _app without fonts",
                "location": null,
                "status": "passed",
                "title": "without fonts"
              },
              {
                "ancestorTitles": [
                  "@next/font/google no preloads with _app"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/work/test/e2e/next-font/without-preloaded-fonts.test.ts:107:48)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "@next/font/google no preloads with _app without preload",
                "location": null,
                "status": "failed",
                "title": "without preload"
              },
              {
                "ancestorTitles": [
                  "@next/font/google no preloads with _app"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 0\n    at Object.<anonymous> (/work/test/e2e/next-font/without-preloaded-fonts.test.ts:124:48)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "@next/font/google no preloads with _app without fonts",
                "location": null,
                "status": "failed",
                "title": "without fonts"
              }
            ],
            "endTime": 1676060461250,
            "message": "  ● @next/font/google without-preloaded-fonts without _app › without preload\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      45 |\n      46 |     // Preconnect\n    > 47 |     expect($('link[rel=\"preconnect\"]').length).toBe(1)\n         |                                                ^\n      48 |     expect($('link[rel=\"preconnect\"]').get(0).attribs).toEqual({\n      49 |       crossorigin: 'anonymous',\n      50 |       href: '/',\n\n      at Object.<anonymous> (e2e/next-font/without-preloaded-fonts.test.ts:47:48)\n\n  ● @next/font/google no preloads with _app › without preload\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      105 |\n      106 |     // Preconnect\n    > 107 |     expect($('link[rel=\"preconnect\"]').length).toBe(1)\n          |                                                ^\n      108 |     expect($('link[rel=\"preconnect\"]').get(0).attribs).toEqual({\n      109 |       crossorigin: 'anonymous',\n      110 |       href: '/',\n\n      at Object.<anonymous> (e2e/next-font/without-preloaded-fonts.test.ts:107:48)\n\n  ● @next/font/google no preloads with _app › without fonts\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 0\n\n      122 |\n      123 |     // Preconnect\n    > 124 |     expect($('link[rel=\"preconnect\"]').length).toBe(1)\n          |                                                ^\n      125 |     expect($('link[rel=\"preconnect\"]').get(0).attribs).toEqual({\n      126 |       crossorigin: 'anonymous',\n      127 |       href: '/',\n\n      at Object.<anonymous> (e2e/next-font/without-preloaded-fonts.test.ts:124:48)\n",
            "name": "/work/test/e2e/next-font/without-preloaded-fonts.test.ts",
            "startTime": 1676060418958,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 1)",
      "name": "test/integration/next-image-new/loader-config/test/index.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 5,
        "numPassedTestSuites": 0,
        "numPassedTests": 37,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 42,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676060751303,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can print telemetry status",
                "location": null,
                "status": "passed",
                "title": "can print telemetry status"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can enable telemetry with flag",
                "location": null,
                "status": "passed",
                "title": "can enable telemetry with flag"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can disable telemetry with flag",
                "location": null,
                "status": "passed",
                "title": "can disable telemetry with flag"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can enable telemetry without flag",
                "location": null,
                "status": "passed",
                "title": "can enable telemetry without flag"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can re-enable telemetry",
                "location": null,
                "status": "passed",
                "title": "can re-enable telemetry"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can disable telemetry without flag",
                "location": null,
                "status": "passed",
                "title": "can disable telemetry without flag"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can re-disable telemetry",
                "location": null,
                "status": "passed",
                "title": "can re-disable telemetry"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI can disable telemetry with env NEXT_TELEMETRY_DISABLED",
                "location": null,
                "status": "passed",
                "title": "can disable telemetry with env NEXT_TELEMETRY_DISABLED"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI detects isSrcDir dir correctly for `next build`",
                "location": null,
                "status": "passed",
                "title": "detects isSrcDir dir correctly for `next build`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits event when swc fails to load",
                "location": null,
                "status": "passed",
                "title": "emits event when swc fails to load"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI logs completed `next build` with warnings",
                "location": null,
                "status": "passed",
                "title": "logs completed `next build` with warnings"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI detects tests correctly for `next build`",
                "location": null,
                "status": "passed",
                "title": "detects tests correctly for `next build`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI detects correct cli session defaults",
                "location": null,
                "status": "passed",
                "title": "detects correct cli session defaults"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI cli session: babel tooling config",
                "location": null,
                "status": "passed",
                "title": "cli session: babel tooling config"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI cli session: custom babel config (plugin)",
                "location": null,
                "status": "passed",
                "title": "cli session: custom babel config (plugin)"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI cli session: package.json custom babel config (plugin)",
                "location": null,
                "status": "passed",
                "title": "cli session: package.json custom babel config (plugin)"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI cli session: custom babel config (preset)",
                "location": null,
                "status": "passed",
                "title": "cli session: custom babel config (preset)"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI cli session: next config with webpack",
                "location": null,
                "status": "passed",
                "title": "cli session: next config with webpack"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI detect static 404 correctly for `next build`",
                "location": null,
                "status": "passed",
                "title": "detect static 404 correctly for `next build`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI detect page counts correctly for `next build`",
                "location": null,
                "status": "passed",
                "title": "detect page counts correctly for `next build`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "Error: expect(received).toMatch(expected)\n\nExpected pattern: /isSrcDir.*?false/\nReceived string:  \"Loading custom turbopack binary from /work/next-dev\nRunning turbopack with args: [--dev /work/test/integration/telemetry --is-next-dev-command --port 34511 --root /work --no-open]\n\"\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:389:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Telemetry CLI detects isSrcDir dir correctly for `next dev`",
                "location": null,
                "status": "failed",
                "title": "detects isSrcDir dir correctly for `next dev`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "TypeError: Cannot read properties of null (reading 'pop')\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:460:15)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Telemetry CLI detects --turbo correctly for `next dev`",
                "location": null,
                "status": "failed",
                "title": "detects --turbo correctly for `next dev`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: /NEXT_CLI_SESSION_STARTED/\n\nLoading custom turbopack binary from /work/next-dev\nRunning turbopack with args: [--dev /work/test/integration/telemetry --is-next-dev-command --port 45723 --root /work --no-open]\n\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:488:7)"
                ],
                "fullName": "Telemetry CLI detects --turbo correctly for `next dev` stopped",
                "location": null,
                "status": "failed",
                "title": "detects --turbo correctly for `next dev` stopped"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: /NEXT_CLI_SESSION_STARTED/\n\nLoading custom turbopack binary from /work/next-dev\nRunning turbopack with args: [--dev /work/test/integration/telemetry --is-next-dev-command --port 43803 --root /work --no-open]\n\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:527:7)"
                ],
                "fullName": "Telemetry CLI detects correctly for `next dev` stopped (no turbo)",
                "location": null,
                "status": "failed",
                "title": "detects correctly for `next dev` stopped (no turbo)"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI should detect app page counts",
                "location": null,
                "status": "passed",
                "title": "should detect app page counts"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI detect reportWebVitals correctly for `next build`",
                "location": null,
                "status": "passed",
                "title": "detect reportWebVitals correctly for `next build`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI detects rewrites, headers, and redirects for next build",
                "location": null,
                "status": "passed",
                "title": "detects rewrites, headers, and redirects for next build"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [
                  "TypeError: Cannot read properties of null (reading 'pop')\n    at Object.<anonymous> (/work/test/integration/telemetry/test/index.test.js:761:13)"
                ],
                "fullName": "Telemetry CLI detects i18n and image configs for session start",
                "location": null,
                "status": "failed",
                "title": "detects i18n and image configs for session start"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for lint during build",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for lint during build"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for lint during build when '--no-lint' is specified",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for lint during build when '--no-lint' is specified"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for lint during build when 'ignoreDuringBuilds' is specified",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for lint during build when 'ignoreDuringBuilds' is specified"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for `next lint`",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for `next lint`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemery for usage of optimizeFonts, image, script & dynamic",
                "location": null,
                "status": "passed",
                "title": "emits telemery for usage of optimizeFonts, image, script & dynamic"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for usage of swc",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for usage of swc"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for usage of `optimizeCss`",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for usage of `optimizeCss`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for usage of `nextScriptWorkers`",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for usage of `nextScriptWorkers`"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for usage of middleware",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for usage of middleware"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for usage of swc plugins",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for usage of swc plugins"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for usage of next/legacy/image",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for usage of next/legacy/image"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for usage of @vercel/og",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for usage of @vercel/og"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for transpilePackages",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for transpilePackages"
              },
              {
                "ancestorTitles": [
                  "Telemetry CLI"
                ],
                "failureMessages": [],
                "fullName": "Telemetry CLI emits telemetry for middleware related options",
                "location": null,
                "status": "passed",
                "title": "emits telemetry for middleware related options"
              }
            ],
            "endTime": 1676061102697,
            "message": "  ● Telemetry CLI › detects isSrcDir dir correctly for `next dev`\n\n    expect(received).toMatch(expected)\n\n    Expected pattern: /isSrcDir.*?false/\n    Received string:  \"Loading custom turbopack binary from /work/next-dev\n    Running turbopack with args: [--dev /work/test/integration/telemetry --is-next-dev-command --port 34511 --root /work --no-open]\n    \"\n\n      387 |     await waitFor(1000)\n      388 |     await killApp(app)\n    > 389 |     expect(stderr).toMatch(/isSrcDir.*?false/)\n          |                    ^\n      390 |\n      391 |     await fs.move(path.join(appDir, 'pages'), path.join(appDir, 'src/pages'))\n      392 |     stderr = ''\n\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:389:20)\n\n  ● Telemetry CLI › detects --turbo correctly for `next dev`\n\n    TypeError: Cannot read properties of null (reading 'pop')\n\n      458 |       }\n      459 |       const event1 = /NEXT_CLI_SESSION_STARTED[\\s\\S]+?{([\\s\\S]+?)}/\n    > 460 |         .exec(stderr)\n          |               ^\n      461 |         .pop()\n      462 |\n      463 |       expect(event1).toMatch(/\"pagesDir\": true/)\n\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:460:15)\n\n  ● Telemetry CLI › detects --turbo correctly for `next dev` stopped\n\n    TIMED OUT: /NEXT_CLI_SESSION_STARTED/\n\n    Loading custom turbopack binary from /work/next-dev\n    Running turbopack with args: [--dev /work/test/integration/telemetry --is-next-dev-command --port 45723 --root /work --no-open]\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:488:7)\n\n  ● Telemetry CLI › detects correctly for `next dev` stopped (no turbo)\n\n    TIMED OUT: /NEXT_CLI_SESSION_STARTED/\n\n    Loading custom turbopack binary from /work/next-dev\n    Running turbopack with args: [--dev /work/test/integration/telemetry --is-next-dev-command --port 43803 --root /work --no-open]\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:527:7)\n\n  ● Telemetry CLI › detects i18n and image configs for session start\n\n    TypeError: Cannot read properties of null (reading 'pop')\n\n      759 |\n      760 |     const event2 = /NEXT_CLI_SESSION_STARTED[\\s\\S]+?{([\\s\\S]+?)}/\n    > 761 |       .exec(stderr2)\n          |             ^\n      762 |       .pop()\n      763 |     expect(event2).toMatch(/\"i18nEnabled\": true/)\n      764 |     expect(event2).toMatch(/\"locales\": \"en,nl,fr\"/)\n\n      at Object.<anonymous> (integration/telemetry/test/index.test.js:761:13)\n",
            "name": "/work/test/integration/telemetry/test/index.test.js",
            "startTime": 1676060751396,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 2)",
      "name": "test/development/acceptance-app/editor-links.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 1,
        "numPassedTestSuites": 0,
        "numPassedTests": 0,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 1,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676059728679,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Error Overlay unsupported app features"
                ],
                "failureMessages": [
                  "TypeError: Cannot read properties of null (reading 'includes')\n    at _default (/work/node_modules/.pnpm/jest-extended@1.2.1/node_modules/jest-extended/dist/matchers/toInclude/predicate.js:8:46)\n    at Object.toInclude (/work/node_modules/.pnpm/jest-extended@1.2.1/node_modules/jest-extended/dist/matchers/toInclude/index.js:19:39)\n    at __EXTERNAL_MATCHER_TRAP__ (/work/node_modules/.pnpm/expect@27.5.1/node_modules/expect/build/index.js:386:30)\n    at Object.toInclude (/work/node_modules/.pnpm/expect@27.5.1/node_modules/expect/build/index.js:387:15)\n    at Object.<anonymous> (/work/test/development/acceptance-app/unsupported-app-features.test.ts:34:52)"
                ],
                "fullName": "Error Overlay unsupported app features should show error exporting AMP config in app dir",
                "location": null,
                "status": "failed",
                "title": "should show error exporting AMP config in app dir"
              }
            ],
            "endTime": 1676059826291,
            "message": "  ● Error Overlay unsupported app features › should show error exporting AMP config in app dir\n\n    TypeError: Cannot read properties of null (reading 'includes')\n\n      32 |\n      33 |       await session.hasRedbox(true)\n    > 34 |       expect(await session.getRedboxDescription()).toInclude(\n         |                                                    ^\n      35 |         'AMP is not supported in the app directory. If you need to use AMP it will continue to be supported in the pages directory.'\n      36 |       )\n      37 |\n\n      at _default (../node_modules/.pnpm/jest-extended@1.2.1/node_modules/jest-extended/dist/matchers/toInclude/predicate.js:8:46)\n      at __EXTERNAL_MATCHER_TRAP__ (../node_modules/.pnpm/expect@27.5.1/node_modules/expect/build/index.js:386:30)\n      at Object.toInclude (../node_modules/.pnpm/expect@27.5.1/node_modules/expect/build/index.js:387:15)\n      at Object.<anonymous> (development/acceptance-app/unsupported-app-features.test.ts:34:52)\n",
            "name": "/work/test/development/acceptance-app/unsupported-app-features.test.ts",
            "startTime": 1676059728772,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 2)",
      "name": "test/e2e/app-dir/dynamic/dynamic.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 2,
        "numPassedTestSuites": 0,
        "numPassedTests": 2,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 4,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676060257309,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Type module interop"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"hello world\"\nReceived string:    \"Execution of get_from_source failed·\nCaused by:\n    0: Execution of resolve_source_request failed\n    1: Execution of CombinedContentSource::get failed\n    2: Execution of create_app_source failed\n    3: Execution of load_next_config failed\n    4: Execution of evaluate failed\n    5: node process exited before we could connect to it with exit status: 1\n       Process output:········\n       Process error output:\n       file:///tmp/next-install-fa4ab357f23d2e3cdf11cc165c824d514df1d3953c4a7ae5abd57a127b9d3c0e/.next/build/next_config/load-next-config.js:3\n       require(\\\"./chunks/load-next-config.js\\\");\n       ^········\n       ReferenceError: require is not defined in ES module scope, you can use import instead\n       This file is being treated as an ES module because it has a '.js' file extension and '/tmp/next-install-fa4ab357f23d2e3cdf11cc165c824d514df1d3953c4a7ae5abd57a127b9d3c0e/package.json' contains \\\"type\\\": \\\"module\\\". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.\n           at file:///tmp/next-install-fa4ab357f23d2e3cdf11cc165c824d514df1d3953c4a7ae5abd57a127b9d3c0e/.next/build/next_config/load-next-config.js:3:1\n           at ModuleJob.run (node:internal/modules/esm/module_job:194:25)········\n       Node.js v18.14.0\n       \"\n    at Object.<anonymous> (/work/test/e2e/type-module-interop/index.test.ts:88:18)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "Type module interop should render server-side",
                "location": null,
                "status": "failed",
                "title": "should render server-side"
              },
              {
                "ancestorTitles": [
                  "Type module interop"
                ],
                "failureMessages": [],
                "fullName": "Type module interop should render client-side",
                "location": null,
                "status": "passed",
                "title": "should render client-side"
              },
              {
                "ancestorTitles": [
                  "Type module interop"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"link to home\"\nReceived: \"\"\n    at Object.<anonymous> (/work/test/e2e/type-module-interop/index.test.ts:105:39)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "Type module interop should render server-side with modules",
                "location": null,
                "status": "failed",
                "title": "should render server-side with modules"
              },
              {
                "ancestorTitles": [
                  "Type module interop"
                ],
                "failureMessages": [],
                "fullName": "Type module interop should render client-side with modules",
                "location": null,
                "status": "passed",
                "title": "should render client-side with modules"
              }
            ],
            "endTime": 1676060279377,
            "message": "  ● Type module interop › should render server-side\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"hello world\"\n    Received string:    \"Execution of get_from_source failed·\n    Caused by:\n        0: Execution of resolve_source_request failed\n        1: Execution of CombinedContentSource::get failed\n        2: Execution of create_app_source failed\n        3: Execution of load_next_config failed\n        4: Execution of evaluate failed\n        5: node process exited before we could connect to it with exit status: 1\n           Process output:········\n           Process error output:\n           file:///tmp/next-install-fa4ab357f23d2e3cdf11cc165c824d514df1d3953c4a7ae5abd57a127b9d3c0e/.next/build/next_config/load-next-config.js:3\n           require(\\\"./chunks/load-next-config.js\\\");\n           ^········\n           ReferenceError: require is not defined in ES module scope, you can use import instead\n           This file is being treated as an ES module because it has a '.js' file extension and '/tmp/next-install-fa4ab357f23d2e3cdf11cc165c824d514df1d3953c4a7ae5abd57a127b9d3c0e/package.json' contains \\\"type\\\": \\\"module\\\". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.\n\n      at ../file:/tmp/next-install-fa4ab357f23d2e3cdf11cc165c824d514df1d3953c4a7ae5abd57a127b9d3c0e/.next/build/next_config/load-next-config.js:3:1\n      at ModuleJob.run (../node:internal/modules/esm/module_job:194:25)········\n             Node.js v18.14.0\n             \"\n      at Object.<anonymous> (e2e/type-module-interop/index.test.ts:88:18)\n\n  ● Type module interop › should render server-side with modules\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"link to home\"\n    Received: \"\"\n\n      103 |     const html = await renderViaHTTP(next.url, '/modules')\n      104 |     const $ = cheerio.load(html)\n    > 105 |     expect($('#link-to-home').text()).toBe('link to home')\n          |                                       ^\n      106 |   })\n      107 |\n      108 |   it('should render client-side with modules', async () => {\n\n      at Object.<anonymous> (e2e/type-module-interop/index.test.ts:105:39)\n",
            "name": "/work/test/e2e/type-module-interop/index.test.ts",
            "startTime": 1676060257404,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 2)",
      "name": "test/integration/custom-routes-catchall/test/index.test.js",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 65,
        "numPassedTestSuites": 0,
        "numPassedTests": 5,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 70,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1676060841753,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [],
                "fullName": "404 handling custom _error next dev should normalize repeated slashes in redirects correctly",
                "location": null,
                "status": "passed",
                "title": "should normalize repeated slashes in redirects correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 308\nReceived: 404\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:99:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle double slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 308\nReceived: 404\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:129:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle double slashes correctly with query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 308\nReceived: 404\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:153:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle double slashes correctly with hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D_packages_next_e2d7c0._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages_404.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_internal_shims-client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_dev_ffb6e5._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_overlay_client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_strip-ansi_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_stacktrace-parser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_anser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_platform_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_css.escape_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/ef3fd_.pnpm_376be9._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D__8becc3._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/development/_buildManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"development\\\",\\\"runtimeConfig\\\":{},\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:178:32)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle double slashes correctly with encoded",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D_packages_next_e2d7c0._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages_404.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_internal_shims-client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_dev_ffb6e5._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_overlay_client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_strip-ansi_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_stacktrace-parser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_anser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_platform_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_css.escape_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/ef3fd_.pnpm_376be9._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D__8becc3._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/development/_buildManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{\\\"hello\\\":\\\"1\\\"},\\\"buildId\\\":\\\"development\\\",\\\"runtimeConfig\\\":{},\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:202:32)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle double slashes correctly with encoded and query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D_packages_next_e2d7c0._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages_404.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_internal_shims-client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_dev_ffb6e5._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_overlay_client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_strip-ansi_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_stacktrace-parser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_anser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_platform_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_css.escape_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/ef3fd_.pnpm_376be9._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D__8becc3._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/development/_buildManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"development\\\",\\\"runtimeConfig\\\":{},\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:222:32)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle double slashes correctly with encoded and hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 308\nReceived: 404\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:241:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle backslashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle backslashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 308\nReceived: 404\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:266:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error next dev should handle mixed backslashes/forward slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle mixed backslashes/forward slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [],
                "fullName": "404 handling custom _error next dev should handle slashes in next/link correctly",
                "location": null,
                "status": "passed",
                "title": "should handle slashes in next/link correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/google.com\"\nReceived: \"/\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:343:62)"
                ],
                "fullName": "404 handling custom _error next dev should handle slashes in router push correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in router push correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: TIMED OUT: /%2Fgoogle.com\n\n/\n    at check (/work/test/lib/next-test-utils.js:561:11)\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:385:7)"
                ],
                "fullName": "404 handling custom _error next dev should have no error from encoded slashes in router push",
                "location": null,
                "status": "failed",
                "title": "should have no error from encoded slashes in router push"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [],
                "fullName": "404 handling custom _error production next start should normalize repeated slashes in redirects correctly",
                "location": null,
                "status": "passed",
                "title": "should normalize repeated slashes in redirects correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:114:70)"
                ],
                "fullName": "404 handling custom _error production next start should handle double slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:143:70)"
                ],
                "fullName": "404 handling custom _error production next start should handle double slashes correctly with query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:167:70)"
                ],
                "fullName": "404 handling custom _error production next start should handle double slashes correctly with hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:178:32)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error production next start should handle double slashes correctly with encoded",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:202:32)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error production next start should handle double slashes correctly with encoded and query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:222:32)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "404 handling custom _error production next start should handle double slashes correctly with encoded and hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:256:70)"
                ],
                "fullName": "404 handling custom _error production next start should handle backslashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle backslashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:281:70)"
                ],
                "fullName": "404 handling custom _error production next start should handle mixed backslashes/forward slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle mixed backslashes/forward slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [],
                "fullName": "404 handling custom _error production next start should handle slashes in next/link correctly",
                "location": null,
                "status": "passed",
                "title": "should handle slashes in next/link correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/_error\"\nReceived: \"/404\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:348:65)"
                ],
                "fullName": "404 handling custom _error production next start should handle slashes in router push correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in router push correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/_error\"\nReceived: \"/404\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:394:65)"
                ],
                "fullName": "404 handling custom _error production next start should have no error from encoded slashes in router push",
                "location": null,
                "status": "failed",
                "title": "should have no error from encoded slashes in router push"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:114:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle double slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\">/google.com?h=1</p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:143:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle double slashes correctly with query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:167:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle double slashes correctly with hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:186:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle double slashes correctly with encoded",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:211:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle double slashes correctly with encoded and query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:231:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle double slashes correctly with encoded and hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:256:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle backslashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle backslashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"custom error\"\nReceived string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:281:70)"
                ],
                "fullName": "404 handling custom _error production next export should handle mixed backslashes/forward slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle mixed backslashes/forward slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [],
                "fullName": "404 handling custom _error production next export should handle slashes in next/link correctly",
                "location": null,
                "status": "passed",
                "title": "should handle slashes in next/link correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/_error\"\nReceived: \"/404\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:348:65)"
                ],
                "fullName": "404 handling custom _error production next export should handle slashes in router push correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in router push correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "custom _error",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"/_error\"\nReceived: \"/404\"\n    at Object.<anonymous> (/work/test/integration/repeated-slashes/test/index.test.js:394:65)"
                ],
                "fullName": "404 handling custom _error production next export should have no error from encoded slashes in router push",
                "location": null,
                "status": "failed",
                "title": "should have no error from encoded slashes in router push"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should normalize repeated slashes in redirects correctly",
                "location": null,
                "status": "failed",
                "title": "should normalize repeated slashes in redirects correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle double slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle double slashes correctly with query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle double slashes correctly with hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle double slashes correctly with encoded",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle double slashes correctly with encoded and query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle double slashes correctly with encoded and hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle backslashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle backslashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle mixed backslashes/forward slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle mixed backslashes/forward slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle slashes in next/link correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in next/link correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should handle slashes in router push correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in router push correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "next dev"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 next dev should have no error from encoded slashes in router push",
                "location": null,
                "status": "failed",
                "title": "should have no error from encoded slashes in router push"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should normalize repeated slashes in redirects correctly",
                "location": null,
                "status": "failed",
                "title": "should normalize repeated slashes in redirects correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle double slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle double slashes correctly with query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle double slashes correctly with hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle double slashes correctly with encoded",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle double slashes correctly with encoded and query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle double slashes correctly with encoded and hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle backslashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle backslashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle mixed backslashes/forward slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle mixed backslashes/forward slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle slashes in next/link correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in next/link correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should handle slashes in router push correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in router push correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next start"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next start should have no error from encoded slashes in router push",
                "location": null,
                "status": "failed",
                "title": "should have no error from encoded slashes in router push"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle double slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle double slashes correctly with query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle double slashes correctly with hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle double slashes correctly with encoded",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle double slashes correctly with encoded and query",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and query"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle double slashes correctly with encoded and hash",
                "location": null,
                "status": "failed",
                "title": "should handle double slashes correctly with encoded and hash"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle backslashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle backslashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle mixed backslashes/forward slashes correctly",
                "location": null,
                "status": "failed",
                "title": "should handle mixed backslashes/forward slashes correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle slashes in next/link correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in next/link correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should handle slashes in router push correctly",
                "location": null,
                "status": "failed",
                "title": "should handle slashes in router push correctly"
              },
              {
                "ancestorTitles": [
                  "404 handling",
                  "pages/404",
                  "production",
                  "next export"
                ],
                "failureMessages": [
                  "Error: ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'"
                ],
                "fullName": "404 handling pages/404 production next export should have no error from encoded slashes in router push",
                "location": null,
                "status": "failed",
                "title": "should have no error from encoded slashes in router push"
              }
            ],
            "endTime": 1676060954840,
            "message": "  ● 404 handling › custom _error › next dev › should handle double slashes correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 308\n    Received: 404\n\n       97 |         redirect: 'manual',\n       98 |       })\n    >  99 |       expect(res.status).toBe(308)\n          |                          ^\n      100 |\n      101 |       const parsedUrl = url.parse(res.headers.get('location'), true)\n      102 |       expect(parsedUrl.pathname).toBe('/google.com')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:99:26)\n\n  ● 404 handling › custom _error › next dev › should handle double slashes correctly with query\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 308\n    Received: 404\n\n      127 |         }\n      128 |       )\n    > 129 |       expect(res.status).toBe(308)\n          |                          ^\n      130 |       const parsedUrl = url.parse(res.headers.get('location'), true)\n      131 |       expect(parsedUrl.pathname).toBe('/google.com')\n      132 |       expect(parsedUrl.hostname).toBe('localhost')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:129:26)\n\n  ● 404 handling › custom _error › next dev › should handle double slashes correctly with hash\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 308\n    Received: 404\n\n      151 |         redirect: 'manual',\n      152 |       })\n    > 153 |       expect(res.status).toBe(308)\n          |                          ^\n      154 |       const parsedUrl = url.parse(res.headers.get('location'), true)\n      155 |       expect(parsedUrl.pathname).toBe('/google.com')\n      156 |       expect(parsedUrl.hostname).toBe('localhost')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:153:26)\n\n  ● 404 handling › custom _error › next dev › should handle double slashes correctly with encoded\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D_packages_next_e2d7c0._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages_404.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_internal_shims-client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_dev_ffb6e5._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_overlay_client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_strip-ansi_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_stacktrace-parser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_anser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_platform_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_css.escape_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/ef3fd_.pnpm_376be9._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D__8becc3._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/development/_buildManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"development\\\",\\\"runtimeConfig\\\":{},\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\n      176 |       })\n      177 |       expect(res.status).toBe(404)\n    > 178 |       expect(await res.text()).toContain(notFoundContent)\n          |                                ^\n      179 |     }\n      180 |\n      181 |     const browser = await webdriver(appPort, '/%2Fgoogle.com')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:178:32)\n\n  ● 404 handling › custom _error › next dev › should handle double slashes correctly with encoded and query\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D_packages_next_e2d7c0._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages_404.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_internal_shims-client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_dev_ffb6e5._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_overlay_client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_strip-ansi_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_stacktrace-parser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_anser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_platform_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_css.escape_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/ef3fd_.pnpm_376be9._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D__8becc3._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/development/_buildManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{\\\"hello\\\":\\\"1\\\"},\\\"buildId\\\":\\\"development\\\",\\\"runtimeConfig\\\":{},\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\n      200 |       )\n      201 |       expect(res.status).toBe(404)\n    > 202 |       expect(await res.text()).toContain(notFoundContent)\n          |                                ^\n      203 |     }\n      204 |\n      205 |     const browser = await webdriver(appPort, '/%2Fgoogle.com?hello=1')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:202:32)\n\n  ● 404 handling › custom _error › next dev › should handle double slashes correctly with encoded and hash\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D_packages_next_e2d7c0._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages_404.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_internal_shims-client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_dev_ffb6e5._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_overlay_client.ts._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_strip-ansi_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_stacktrace-parser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_anser_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_platform_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bembedded_modules%5D_@vercel_turbopack-next_compiled_css.escape_index.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/ef3fd_.pnpm_376be9._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/%5Bproject-with-next%5D__8becc3._.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/development/_buildManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"development\\\",\\\"runtimeConfig\\\":{},\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\n      220 |       })\n      221 |       expect(res.status).toBe(404)\n    > 222 |       expect(await res.text()).toContain(notFoundContent)\n          |                                ^\n      223 |     }\n      224 |\n      225 |     const browser = await webdriver(appPort, '/%2Fgoogle.com#hello')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:222:32)\n\n  ● 404 handling › custom _error › next dev › should handle backslashes correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 308\n    Received: 404\n\n      239 |         redirect: 'manual',\n      240 |       })\n    > 241 |       expect(res.status).toBe(308)\n          |                          ^\n      242 |       const parsedUrl = url.parse(res.headers.get('location'), true)\n      243 |       expect(parsedUrl.pathname).toBe('/google.com')\n      244 |       expect(parsedUrl.hostname).toBe('localhost')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:241:26)\n\n  ● 404 handling › custom _error › next dev › should handle mixed backslashes/forward slashes correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 308\n    Received: 404\n\n      264 |         redirect: 'manual',\n      265 |       })\n    > 266 |       expect(res.status).toBe(308)\n          |                          ^\n      267 |       const parsedUrl = url.parse(res.headers.get('location'), true)\n      268 |       expect(parsedUrl.pathname).toBe(isExport ? '//google.com' : '/google.com')\n      269 |       expect(parsedUrl.hostname).toBe('localhost')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:266:26)\n\n  ● 404 handling › custom _error › next dev › should handle slashes in router push correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/google.com\"\n    Received: \"/\"\n\n      341 |         })`\n      342 |       )\n    > 343 |       expect(await browser.eval('window.location.pathname')).toBe(item.pathname)\n          |                                                              ^\n      344 |       expect(await browser.eval('window.location.search')).toBe(\n      345 |         item.search || ''\n      346 |       )\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:343:62)\n\n  ● 404 handling › custom _error › next dev › should have no error from encoded slashes in router push\n\n    TIMED OUT: /%2Fgoogle.com\n\n    /\n\n      559 |\n      560 |   if (hardError) {\n    > 561 |     throw new Error('TIMED OUT: ' + regex + '\\n\\n' + content)\n          |           ^\n      562 |   }\n      563 |   return false\n      564 | }\n\n      at check (lib/next-test-utils.js:561:11)\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:385:7)\n\n  ● 404 handling › custom _error › production › next start › should handle double slashes correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      112 |     expect(await browser.eval('window.location.search')).toBe('')\n      113 |     expect(await browser.eval('window.location.hash')).toBe('')\n    > 114 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      115 |       notFoundContent\n      116 |     )\n      117 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:114:70)\n\n  ● 404 handling › custom _error › production › next start › should handle double slashes correctly with query\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      141 |     expect(await browser.eval('window.location.search')).toBe('?h=1')\n      142 |     expect(await browser.eval('window.location.hash')).toBe('')\n    > 143 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      144 |       notFoundContent\n      145 |     )\n      146 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:143:70)\n\n  ● 404 handling › custom _error › production › next start › should handle double slashes correctly with hash\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      165 |     expect(await browser.eval('window.location.hash')).toBe('#hello')\n      166 |     expect(await browser.eval('window.location.search')).toBe('')\n    > 167 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      168 |       notFoundContent\n      169 |     )\n      170 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:167:70)\n\n  ● 404 handling › custom _error › production › next start › should handle double slashes correctly with encoded\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\n      176 |       })\n      177 |       expect(res.status).toBe(404)\n    > 178 |       expect(await res.text()).toContain(notFoundContent)\n          |                                ^\n      179 |     }\n      180 |\n      181 |     const browser = await webdriver(appPort, '/%2Fgoogle.com')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:178:32)\n\n  ● 404 handling › custom _error › production › next start › should handle double slashes correctly with encoded and query\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\n      200 |       )\n      201 |       expect(res.status).toBe(404)\n    > 202 |       expect(await res.text()).toContain(notFoundContent)\n          |                                ^\n      203 |     }\n      204 |\n      205 |     const browser = await webdriver(appPort, '/%2Fgoogle.com?hello=1')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:202:32)\n\n  ● 404 handling › custom _error › production › next start › should handle double slashes correctly with encoded and hash\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<!DOCTYPE html><html><head><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\n      220 |       })\n      221 |       expect(res.status).toBe(404)\n    > 222 |       expect(await res.text()).toContain(notFoundContent)\n          |                                ^\n      223 |     }\n      224 |\n      225 |     const browser = await webdriver(appPort, '/%2Fgoogle.com#hello')\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:222:32)\n\n  ● 404 handling › custom _error › production › next start › should handle backslashes correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      254 |     expect(await browser.eval('window.location.hash')).toBe('')\n      255 |     expect(await browser.eval('window.location.search')).toBe('')\n    > 256 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      257 |       notFoundContent\n      258 |     )\n      259 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:256:70)\n\n  ● 404 handling › custom _error › production › next start › should handle mixed backslashes/forward slashes correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      279 |     expect(await browser.eval('window.location.hash')).toBe('#hello')\n      280 |     expect(await browser.eval('window.location.search')).toBe('')\n    > 281 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      282 |       notFoundContent\n      283 |     )\n      284 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:281:70)\n\n  ● 404 handling › custom _error › production › next start › should handle slashes in router push correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/_error\"\n    Received: \"/404\"\n\n      346 |       )\n      347 |       expect(await browser.eval('window.location.hash')).toBe(item.hash || '')\n    > 348 |       expect(await browser.eval('window.next.router.pathname')).toBe(item.page)\n          |                                                                 ^\n      349 |     }\n      350 |   })\n      351 |\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:348:65)\n\n  ● 404 handling › custom _error › production › next start › should have no error from encoded slashes in router push\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/_error\"\n    Received: \"/404\"\n\n      392 |       )\n      393 |       expect(await browser.eval('window.location.hash')).toBe(item.hash || '')\n    > 394 |       expect(await browser.eval('window.next.router.pathname')).toBe(item.page)\n          |                                                                 ^\n      395 |       expect(await browser.eval('window.next.router.asPath')).toBe(\n      396 |         item.as || item.href\n      397 |       )\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:394:65)\n\n  ● 404 handling › custom _error › production › next export › should handle double slashes correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      112 |     expect(await browser.eval('window.location.search')).toBe('')\n      113 |     expect(await browser.eval('window.location.hash')).toBe('')\n    > 114 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      115 |       notFoundContent\n      116 |     )\n      117 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:114:70)\n\n  ● 404 handling › custom _error › production › next export › should handle double slashes correctly with query\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\">/google.com?h=1</p></next-route-announcer></body>\"\n\n      141 |     expect(await browser.eval('window.location.search')).toBe('?h=1')\n      142 |     expect(await browser.eval('window.location.hash')).toBe('')\n    > 143 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      144 |       notFoundContent\n      145 |     )\n      146 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:143:70)\n\n  ● 404 handling › custom _error › production › next export › should handle double slashes correctly with hash\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      165 |     expect(await browser.eval('window.location.hash')).toBe('#hello')\n      166 |     expect(await browser.eval('window.location.search')).toBe('')\n    > 167 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      168 |       notFoundContent\n      169 |     )\n      170 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:167:70)\n\n  ● 404 handling › custom _error › production › next export › should handle double slashes correctly with encoded\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      184 |       '/%2Fgoogle.com'\n      185 |     )\n    > 186 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      187 |       notFoundContent\n      188 |     )\n      189 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:186:70)\n\n  ● 404 handling › custom _error › production › next export › should handle double slashes correctly with encoded and query\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      209 |     )\n      210 |     expect(await browser.eval('window.location.search')).toBe('?hello=1')\n    > 211 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      212 |       notFoundContent\n      213 |     )\n      214 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:211:70)\n\n  ● 404 handling › custom _error › production › next export › should handle double slashes correctly with encoded and hash\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      229 |     )\n      230 |     expect(await browser.eval('window.location.hash')).toBe('#hello')\n    > 231 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      232 |       notFoundContent\n      233 |     )\n      234 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:231:70)\n\n  ● 404 handling › custom _error › production › next export › should handle backslashes correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      254 |     expect(await browser.eval('window.location.hash')).toBe('')\n      255 |     expect(await browser.eval('window.location.search')).toBe('')\n    > 256 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      257 |       notFoundContent\n      258 |     )\n      259 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:256:70)\n\n  ● 404 handling › custom _error › production › next export › should handle mixed backslashes/forward slashes correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"custom error\"\n    Received string:    \"<head><meta charset=\\\"utf-8\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"><meta name=\\\"next-head-count\\\" content=\\\"2\\\"><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills-c67a75d1b6f99dc8.js\\\"></script><script src=\\\"/_next/static/chunks/webpack-8fa1640cc84ba8fe.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/framework-6690b5f441f4815a.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/main-35c9e8dd5b581166.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/_app-0919b1895f24d9a6.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/pages/404-ead0b13a1901e744.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_buildManifest.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/hreWknJHhAYeBEwUfzDtE/_ssgManifest.js\\\" defer=\\\"\\\"></script></head><body><div id=\\\"__next\\\"><p id=\\\"error\\\">custom 404</p></div><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{}},\\\"page\\\":\\\"/404\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"hreWknJHhAYeBEwUfzDtE\\\",\\\"nextExport\\\":true,\\\"autoExport\\\":true,\\\"isFallback\\\":false,\\\"scriptLoader\\\":[]}</script><next-route-announcer><p aria-live=\\\"assertive\\\" id=\\\"__next-route-announcer__\\\" role=\\\"alert\\\" style=\\\"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap; overflow-wrap: normal;\\\"></p></next-route-announcer></body>\"\n\n      279 |     expect(await browser.eval('window.location.hash')).toBe('#hello')\n      280 |     expect(await browser.eval('window.location.search')).toBe('')\n    > 281 |     expect(await browser.eval('document.documentElement.innerHTML')).toContain(\n          |                                                                      ^\n      282 |       notFoundContent\n      283 |     )\n      284 |   })\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:281:70)\n\n  ● 404 handling › custom _error › production › next export › should handle slashes in router push correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/_error\"\n    Received: \"/404\"\n\n      346 |       )\n      347 |       expect(await browser.eval('window.location.hash')).toBe(item.hash || '')\n    > 348 |       expect(await browser.eval('window.next.router.pathname')).toBe(item.page)\n          |                                                                 ^\n      349 |     }\n      350 |   })\n      351 |\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:348:65)\n\n  ● 404 handling › custom _error › production › next export › should have no error from encoded slashes in router push\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"/_error\"\n    Received: \"/404\"\n\n      392 |       )\n      393 |       expect(await browser.eval('window.location.hash')).toBe(item.hash || '')\n    > 394 |       expect(await browser.eval('window.next.router.pathname')).toBe(item.page)\n          |                                                                 ^\n      395 |       expect(await browser.eval('window.next.router.asPath')).toBe(\n      396 |         item.as || item.href\n      397 |       )\n\n      at Object.<anonymous> (integration/repeated-slashes/test/index.test.js:394:65)\n\n  ● 404 handling › pages/404 › next dev › should normalize repeated slashes in redirects correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle double slashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle double slashes correctly with query\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle double slashes correctly with hash\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle double slashes correctly with encoded\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle double slashes correctly with encoded and query\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle double slashes correctly with encoded and hash\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle backslashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle mixed backslashes/forward slashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle slashes in next/link correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should handle slashes in router push correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › next dev › should have no error from encoded slashes in router push\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should normalize repeated slashes in redirects correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle double slashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle double slashes correctly with query\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle double slashes correctly with hash\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle double slashes correctly with encoded\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle double slashes correctly with encoded and query\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle double slashes correctly with encoded and hash\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle backslashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle mixed backslashes/forward slashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle slashes in next/link correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should handle slashes in router push correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next start › should have no error from encoded slashes in router push\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle double slashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle double slashes correctly with query\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle double slashes correctly with hash\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle double slashes correctly with encoded\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle double slashes correctly with encoded and query\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle double slashes correctly with encoded and hash\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle backslashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle mixed backslashes/forward slashes correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle slashes in next/link correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should handle slashes in router push correctly\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n\n  ● 404 handling › pages/404 › production › next export › should have no error from encoded slashes in router push\n\n    ENOENT: no such file or directory, stat '/work/test/integration/repeated-slashes/app/pages/_error.js'\n\n\n",
            "name": "/work/test/integration/repeated-slashes/test/index.test.js",
            "startTime": 1676060841845,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    }
  ]
}