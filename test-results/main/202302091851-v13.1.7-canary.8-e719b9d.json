{
  "ref": "780ff56732564617bbc8da300c335365bf404427",
  "nextjsVersion": "Next.js v13.1.7-canary.8",
  "result": [
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 1)",
      "name": "test/development/acceptance-app/component-stack.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 1,
        "numPassedTestSuites": 0,
        "numPassedTests": 0,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 1,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1675968020136,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Component Stack in error overlay"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('[data-nextjs-toast]')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Component Stack in error overlay should show a component stack on hydration error",
                "location": null,
                "status": "failed",
                "title": "should show a component stack on hydration error"
              }
            ],
            "endTime": 1675968086261,
            "message": "  ● Component Stack in error overlay › should show a component stack on hydration error\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('[data-nextjs-toast]')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n",
            "name": "/work/test/development/acceptance-app/component-stack.test.ts",
            "startTime": 1675968020229,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 1)",
      "name": "test/e2e/middleware-custom-matchers/test/index.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 8,
        "numPassedTestSuites": 0,
        "numPassedTests": 2,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 10,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1675968221927,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [],
                "fullName": "Middleware custom matchers should match missing header correctly",
                "location": null,
                "status": "passed",
                "title": "should match missing header correctly"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [],
                "fullName": "Middleware custom matchers should match missing query correctly",
                "location": null,
                "status": "passed",
                "title": "should match missing query correctly"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at Object.<anonymous> (/work/test/e2e/middleware-custom-matchers/test/index.test.ts:48:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Middleware custom matchers should match source path",
                "location": null,
                "status": "failed",
                "title": "should match source path"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at Object.<anonymous> (/work/test/e2e/middleware-custom-matchers/test/index.test.ts:58:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Middleware custom matchers should match has header",
                "location": null,
                "status": "failed",
                "title": "should match has header"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at Object.<anonymous> (/work/test/e2e/middleware-custom-matchers/test/index.test.ts:69:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Middleware custom matchers should match has query",
                "location": null,
                "status": "failed",
                "title": "should match has query"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at Object.<anonymous> (/work/test/e2e/middleware-custom-matchers/test/index.test.ts:82:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Middleware custom matchers should match has cookie",
                "location": null,
                "status": "failed",
                "title": "should match has cookie"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at Object.<anonymous> (/work/test/e2e/middleware-custom-matchers/test/index.test.ts:104:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Middleware custom matchers should match has host",
                "location": null,
                "status": "failed",
                "title": "should match has host"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at Object.<anonymous> (/work/test/e2e/middleware-custom-matchers/test/index.test.ts:121:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Middleware custom matchers should match has header value",
                "location": null,
                "status": "failed",
                "title": "should match has header value"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#from-middleware')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Middleware custom matchers should match has query on client routing",
                "location": null,
                "status": "failed",
                "title": "should match has query on client routing"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#from-middleware')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Middleware custom matchers should match has cookie on client routing",
                "location": null,
                "status": "failed",
                "title": "should match has cookie on client routing"
              }
            ],
            "endTime": 1675968329769,
            "message": "  ● Middleware custom matchers › should match source path\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      46 |     it('should match source path', async () => {\n      47 |       const res = await fetchViaHTTP(next.url, '/source-match')\n    > 48 |       expect(res.status).toBe(200)\n         |                          ^\n      49 |       expect(res.headers.get('x-from-middleware')).toBeDefined()\n      50 |     })\n      51 |\n\n      at Object.<anonymous> (e2e/middleware-custom-matchers/test/index.test.ts:48:26)\n\n  ● Middleware custom matchers › should match has header\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      56 |         },\n      57 |       })\n    > 58 |       expect(res.status).toBe(200)\n         |                          ^\n      59 |       expect(res.headers.get('x-from-middleware')).toBeDefined()\n      60 |\n      61 |       const res2 = await fetchViaHTTP(next.url, '/has-match-1')\n\n      at Object.<anonymous> (e2e/middleware-custom-matchers/test/index.test.ts:58:26)\n\n  ● Middleware custom matchers › should match has query\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      67 |         'my-query': 'hellooo',\n      68 |       })\n    > 69 |       expect(res.status).toBe(200)\n         |                          ^\n      70 |       expect(res.headers.get('x-from-middleware')).toBeDefined()\n      71 |\n      72 |       const res2 = await fetchViaHTTP(next.url, '/has-match-2')\n\n      at Object.<anonymous> (e2e/middleware-custom-matchers/test/index.test.ts:69:26)\n\n  ● Middleware custom matchers › should match has cookie\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      80 |         },\n      81 |       })\n    > 82 |       expect(res.status).toBe(200)\n         |                          ^\n      83 |       expect(res.headers.get('x-from-middleware')).toBeDefined()\n      84 |\n      85 |       const res2 = await fetchViaHTTP(next.url, '/has-match-3', undefined, {\n\n      at Object.<anonymous> (e2e/middleware-custom-matchers/test/index.test.ts:82:26)\n\n  ● Middleware custom matchers › should match has host\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      102 |       })\n      103 |\n    > 104 |       expect(res.status).toBe(200)\n          |                          ^\n      105 |       expect(res.headers.get('x-from-middleware')).toBeDefined()\n      106 |\n      107 |       const res2 = await fetchViaHTTP(next.url, '/has-match-4', undefined, {\n\n      at Object.<anonymous> (e2e/middleware-custom-matchers/test/index.test.ts:104:26)\n\n  ● Middleware custom matchers › should match has header value\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      119 |         },\n      120 |       })\n    > 121 |       expect(res.status).toBe(200)\n          |                          ^\n      122 |       expect(res.headers.get('x-from-middleware')).toBeDefined()\n      123 |\n      124 |       const res2 = await fetchViaHTTP(next.url, '/has-match-5', undefined, {\n\n      at Object.<anonymous> (e2e/middleware-custom-matchers/test/index.test.ts:121:26)\n\n  ● Middleware custom matchers › should match has query on client routing\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#from-middleware')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Middleware custom matchers › should match has cookie on client routing\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#from-middleware')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n",
            "name": "/work/test/e2e/middleware-custom-matchers/test/index.test.ts",
            "startTime": 1675968222097,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 1)",
      "name": "test/integration/invalid-multi-match/test/index.test.js",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 1,
        "numPassedTestSuites": 0,
        "numPassedTests": 1,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 2,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1675968471282,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Custom routes invalid multi-match",
                  "dev mode"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"To use a multi-match in the destination you must add\"\nReceived string:    \"Loading custom turbopack binary from /work/next-dev\nRunning turbopack with args: [--dev /work/test/integration/invalid-multi-match --is-next-dev-command --port 35563 --root /work --no-open]\n\"\n    at Object.<anonymous> (/work/test/integration/invalid-multi-match/test/index.test.js:21:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Custom routes invalid multi-match dev mode should show error for invalid mulit-match",
                "location": null,
                "status": "failed",
                "title": "should show error for invalid mulit-match"
              },
              {
                "ancestorTitles": [
                  "Custom routes invalid multi-match",
                  "production mode"
                ],
                "failureMessages": [],
                "fullName": "Custom routes invalid multi-match production mode should show error for invalid mulit-match",
                "location": null,
                "status": "passed",
                "title": "should show error for invalid mulit-match"
              }
            ],
            "endTime": 1675968482383,
            "message": "  ● Custom routes invalid multi-match › dev mode › should show error for invalid mulit-match\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"To use a multi-match in the destination you must add\"\n    Received string:    \"Loading custom turbopack binary from /work/next-dev\n    Running turbopack with args: [--dev /work/test/integration/invalid-multi-match --is-next-dev-command --port 35563 --root /work --no-open]\n    \"\n\n      19 |   it('should show error for invalid mulit-match', async () => {\n      20 |     await renderViaHTTP(appPort, '/random')\n    > 21 |     expect(stderr).toContain(\n         |                    ^\n      22 |       'To use a multi-match in the destination you must add'\n      23 |     )\n      24 |     expect(stderr).toContain(\n\n      at Object.<anonymous> (integration/invalid-multi-match/test/index.test.js:21:20)\n",
            "name": "/work/test/integration/invalid-multi-match/test/index.test.js",
            "startTime": 1675968471383,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 2)",
      "name": "test/development/acceptance-app/editor-links.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 3,
        "numPassedTestSuites": 0,
        "numPassedTests": 0,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 3,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1675968113801,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Error overlay - editor links"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/work/test/development/acceptance-app/editor-links.test.ts:59:45)"
                ],
                "fullName": "Error overlay - editor links should be possible to open files on RSC build error",
                "location": null,
                "status": "failed",
                "title": "should be possible to open files on RSC build error"
              },
              {
                "ancestorTitles": [
                  "Error overlay - editor links"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/work/test/development/acceptance-app/editor-links.test.ts:100:45)"
                ],
                "fullName": "Error overlay - editor links should be possible to open files on RSC parse error",
                "location": null,
                "status": "failed",
                "title": "should be possible to open files on RSC parse error"
              },
              {
                "ancestorTitles": [
                  "Error overlay - editor links"
                ],
                "failureMessages": [
                  "Error: Application is in inconsistent state: timeout.\n    at Object.patch (/work/test/development/acceptance-app/helpers.ts:78:19)\n    at Object.<anonymous> (/work/test/development/acceptance-app/editor-links.test.ts:135:7)"
                ],
                "fullName": "Error overlay - editor links should be possible to open files on module not found error",
                "location": null,
                "status": "failed",
                "title": "should be possible to open files on module not found error"
              }
            ],
            "endTime": 1675968271382,
            "message": "  ● Error overlay - editor links › should be possible to open files on RSC build error\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      57 |       )\n      58 |\n    > 59 |       expect(await session.hasRedbox(true)).toBe(true)\n         |                                             ^\n      60 |       await clickEditorLinks(browser)\n      61 |       await check(() => editorRequestsCount, /2/)\n      62 |\n\n      at Object.<anonymous> (development/acceptance-app/editor-links.test.ts:59:45)\n\n  ● Error overlay - editor links › should be possible to open files on RSC parse error\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n       98 |       )\n       99 |\n    > 100 |       expect(await session.hasRedbox(true)).toBe(true)\n          |                                             ^\n      101 |       await clickEditorLinks(browser)\n      102 |       await check(() => editorRequestsCount, /4/)\n      103 |\n\n      at Object.<anonymous> (development/acceptance-app/editor-links.test.ts:100:45)\n\n  ● Error overlay - editor links › should be possible to open files on module not found error\n\n    Application is in inconsistent state: timeout.\n\n      76 |           }\n      77 |           if (status !== 'pending') {\n    > 78 |             throw new Error(`Application is in inconsistent state: ${status}.`)\n         |                   ^\n      79 |           }\n      80 |\n      81 |           await new Promise((resolve) => setTimeout(resolve, 30))\n\n      at Object.patch (development/acceptance-app/helpers.ts:78:19)\n      at Object.<anonymous> (development/acceptance-app/editor-links.test.ts:135:7)\n",
            "name": "/work/test/development/acceptance-app/editor-links.test.ts",
            "startTime": 1675968113895,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 2)",
      "name": "test/e2e/app-dir/app-alias/app-alias.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 5,
        "numPassedTestSuites": 0,
        "numPassedTests": 14,
        "numPendingTestSuites": 0,
        "numPendingTests": 5,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 24,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1675968298603,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should bypass fetch cache with cache-control: no-cache",
                "location": null,
                "status": "passed",
                "title": "should bypass fetch cache with cache-control: no-cache"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should honor fetch cache correctly",
                "location": null,
                "status": "passed",
                "title": "should honor fetch cache correctly"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling Should not throw Dynamic Server Usage error when using generateStaticParams with previewData",
                "location": null,
                "status": "passed",
                "title": "Should not throw Dynamic Server Usage error when using generateStaticParams with previewData"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should force SSR correctly for headers usage",
                "location": null,
                "status": "passed",
                "title": "should force SSR correctly for headers usage"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should honor dynamic = \"force-static\" correctly",
                "location": null,
                "status": "passed",
                "title": "should honor dynamic = \"force-static\" correctly"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should honor dynamic = \"force-static\" correctly (lazy)",
                "location": null,
                "status": "passed",
                "title": "should honor dynamic = \"force-static\" correctly (lazy)"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 404\nReceived: 200\n    at Object.<anonymous> (/work/test/e2e/app-dir/app-static/app-static.test.ts:510:35)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "app-dir static/dynamic handling should handle dynamicParams: false correctly",
                "location": null,
                "status": "failed",
                "title": "should handle dynamicParams: false correctly"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should work with forced dynamic path",
                "location": null,
                "status": "passed",
                "title": "should work with forced dynamic path"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should work with dynamic path no generateStaticParams",
                "location": null,
                "status": "passed",
                "title": "should work with dynamic path no generateStaticParams"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should handle dynamicParams: true correctly",
                "location": null,
                "status": "passed",
                "title": "should handle dynamicParams: true correctly"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should navigate to static path correctly",
                "location": null,
                "status": "passed",
                "title": "should navigate to static path correctly"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [
                  "Error: expect(received).not.toBe(expected) // Object.is equality\n\nExpected: not \"1675968356526\"\n    at Object.<anonymous> (/work/test/e2e/app-dir/app-static/app-static.test.ts:630:30)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "app-dir static/dynamic handling should ssr dynamically when detected automatically with fetch cache option",
                "location": null,
                "status": "failed",
                "title": "should ssr dynamically when detected automatically with fetch cache option"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 404\nReceived: 200\n    at Object.<anonymous> (/work/test/e2e/app-dir/app-static/app-static.test.ts:637:26)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "app-dir static/dynamic handling should render not found pages correctly and fallback to the default one",
                "location": null,
                "status": "failed",
                "title": "should render not found pages correctly and fallback to the default one"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should ssr dynamically when detected automatically with fetch revalidate option",
                "location": null,
                "status": "pending",
                "title": "should ssr dynamically when detected automatically with fetch revalidate option"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [
                  "Error: expect(received).not.toBe(expected) // Object.is equality\n\nExpected: not \"1675968358040\"\n    at Object.<anonymous> (/work/test/e2e/app-dir/app-static/app-static.test.ts:697:30)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "app-dir static/dynamic handling should ssr dynamically when forced via config",
                "location": null,
                "status": "failed",
                "title": "should ssr dynamically when forced via config"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling",
                  "useSearchParams",
                  "client"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling useSearchParams client should bailout to client rendering - without suspense boundary",
                "location": null,
                "status": "passed",
                "title": "should bailout to client rendering - without suspense boundary"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling",
                  "useSearchParams",
                  "client"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling useSearchParams client should bailout to client rendering - with suspense boundary",
                "location": null,
                "status": "passed",
                "title": "should bailout to client rendering - with suspense boundary"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling",
                  "useSearchParams",
                  "client"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling useSearchParams client should have empty search params on force-static",
                "location": null,
                "status": "pending",
                "title": "should have empty search params on force-static"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling",
                  "useSearchParams",
                  "client"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling useSearchParams client should have values from canonical url on rewrite",
                "location": null,
                "status": "passed",
                "title": "should have values from canonical url on rewrite"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling",
                  "usePathname"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling usePathname should bail out to client rendering during SSG",
                "location": null,
                "status": "pending",
                "title": "should bail out to client rendering during SSG"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling",
                  "usePathname"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling usePathname should have the correct values",
                "location": null,
                "status": "pending",
                "title": "should have the correct values"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling",
                  "usePathname"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling usePathname should have values from canonical url on rewrite",
                "location": null,
                "status": "pending",
                "title": "should have values from canonical url on rewrite"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Thank you for testing `appDir` please leave your feedback at https://nextjs.link/app-feedback\"\nReceived string:    \"yarn run v1.22.19\n$ /tmp/next-install-68f42a22697ff036fa5d711bfe3934762ada58572ff54910949ddc7830c35337/node_modules/.bin/next --turbo\n>>> TURBOPACK (alpha)·\nThank you for trying Next.js v13 with Turbopack! As a reminder,\nTurbopack is currently in alpha and not yet ready for production.\nWe appreciate your ongoing support as we work to make it ready\nfor everyone.·\nError: You are using configuration and/or tools that are not yet\nsupported by Next.js v13 with Turbopack:··\n- Unsupported Next.js configuration option(s) (next.config.js)\n  The only configurations options supported are:\n    - configFileName\n    - env\n    - experimental.appDir\n    - experimental.serverComponentsExternalPackages\n    - experimental.turbo\n    - images\n    - pageExtensions\n    - onDemandEntries\n    - rewrites\n    - redirects\n    - headers\n    - reactStrictMode\n    - swcMinify\n    - transpilePackages\n  To use Turbopack, remove other configuration options.····\nIf you cannot make the changes above, but still want to try out\nNext.js v13 with Turbopack, create the Next.js v13 playground app\nby running the following commands:·\n  pnpm create next-app --example with-turbopack with-turbopack-app\n  cd with-turbopack-app\n  pnpm run dev·········\nLearn more about Next.js v13 and Turbopack: https://nextjs.link/with-turbopack\nPlease direct feedback to: https://nextjs.link/turbopack-feedback··\nWarning: Unsupported config found; but continuing with custom Turbopack binary.·\nLearn more about Next.js v13 and Turbopack: https://nextjs.link/with-turbopack\nPlease direct feedback to: https://nextjs.link/turbopack-feedback·\ninfo  - Using locally built binary of @next/swc\nLoading custom turbopack binary from /work/next-dev\nRunning turbopack with args: [--dev /tmp/next-install-68f42a22697ff036fa5d711bfe3934762ada58572ff54910949ddc7830c35337 --is-next-dev-command --root /tmp/next-install-68f42a22697ff036fa5d711bfe3934762ada58572ff54910949ddc7830c35337 --no-open]\n\u001b[32mready\u001b[39m - started server on 0.0.0.0:33883, url: http://localhost:33883\n\u001b[35mevent\u001b[39m - initial compilation 7.469ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 2434ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 148ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 906ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 1013ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 2004ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 1045ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 494ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 580ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 686ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 405ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 213ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 617ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 676ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 674ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 151ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 110ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 122ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 609ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 1135ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 482ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 52ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 269ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 534ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 94ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 0.811ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 1659ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 119ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 1462ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 794ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 431ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 243ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 507ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 1.027ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 572ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 429ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 54ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 478ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 1.081ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 72ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 471ms\n\"\n    at Object.<anonymous> (/work/test/e2e/app-dir/app-static/app-static.test.ts:846:32)\n    at Promise.then.completed (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/utils.js:391:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/utils.js:316:10)\n    at _callCircusTest (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/run.js:218:40)\n    at _runTest (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/run.js:155:3)\n    at _runTestsForDescribeBlock (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/run.js:66:9)\n    at _runTestsForDescribeBlock (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/run.js:60:9)\n    at run (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/run.js:25:3)\n    at runAndTransformResultsToJestFormat (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)"
                ],
                "fullName": "app-dir static/dynamic handling should show a message to leave feedback for `appDir`",
                "location": null,
                "status": "failed",
                "title": "should show a message to leave feedback for `appDir`"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should keep querystring on static page",
                "location": null,
                "status": "passed",
                "title": "should keep querystring on static page"
              }
            ],
            "endTime": 1675968404243,
            "message": "  ● app-dir static/dynamic handling › should handle dynamicParams: false correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 404\n    Received: 200\n\n      508 |           redirect: 'manual',\n      509 |         })\n    > 510 |         expect(invalidRes.status).toBe(404)\n          |                                   ^\n      511 |         expect(await invalidRes.text()).toContain('page could not be found')\n      512 |       }\n      513 |     })\n\n      at Object.<anonymous> (e2e/app-dir/app-static/app-static.test.ts:510:35)\n\n  ● app-dir static/dynamic handling › should ssr dynamically when detected automatically with fetch cache option\n\n    expect(received).not.toBe(expected) // Object.is equality\n\n    Expected: not \"1675968356526\"\n\n      628 |\n      629 |       expect(secondHtml).toContain('Example Domain')\n    > 630 |       expect(secondDate).not.toBe(initialDate)\n          |                              ^\n      631 |     })\n      632 |\n      633 |     it('should render not found pages correctly and fallback to the default one', async () => {\n\n      at Object.<anonymous> (e2e/app-dir/app-static/app-static.test.ts:630:30)\n\n  ● app-dir static/dynamic handling › should render not found pages correctly and fallback to the default one\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 404\n    Received: 200\n\n      635 |         redirect: 'manual',\n      636 |       })\n    > 637 |       expect(res.status).toBe(404)\n          |                          ^\n      638 |       const html = await res.text()\n      639 |       expect(html).toInclude('\"noindex\"')\n      640 |       expect(html).toInclude('This page could not be found.')\n\n      at Object.<anonymous> (e2e/app-dir/app-static/app-static.test.ts:637:26)\n\n  ● app-dir static/dynamic handling › should ssr dynamically when forced via config\n\n    expect(received).not.toBe(expected) // Object.is equality\n\n    Expected: not \"1675968358040\"\n\n      695 |       const secondDate = second$('#date').text()\n      696 |\n    > 697 |       expect(secondDate).not.toBe(initialDate)\n          |                              ^\n      698 |     })\n      699 |\n      700 |     describe('useSearchParams', () => {\n\n      at Object.<anonymous> (e2e/app-dir/app-static/app-static.test.ts:697:30)\n\n  ● app-dir static/dynamic handling › should show a message to leave feedback for `appDir`\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Thank you for testing `appDir` please leave your feedback at https://nextjs.link/app-feedback\"\n    Received string:    \"yarn run v1.22.19\n    $ /tmp/next-install-68f42a22697ff036fa5d711bfe3934762ada58572ff54910949ddc7830c35337/node_modules/.bin/next --turbo\n    >>> TURBOPACK (alpha)·\n    Thank you for trying Next.js v13 with Turbopack! As a reminder,\n    Turbopack is currently in alpha and not yet ready for production.\n    We appreciate your ongoing support as we work to make it ready\n    for everyone.·\n    Error: You are using configuration and/or tools that are not yet\n    supported by Next.js v13 with Turbopack:··\n    - Unsupported Next.js configuration option(s) (next.config.js)\n      The only configurations options supported are:\n        - configFileName\n        - env\n        - experimental.appDir\n        - experimental.serverComponentsExternalPackages\n        - experimental.turbo\n        - images\n        - pageExtensions\n        - onDemandEntries\n        - rewrites\n        - redirects\n        - headers\n        - reactStrictMode\n        - swcMinify\n        - transpilePackages\n      To use Turbopack, remove other configuration options.····\n    If you cannot make the changes above, but still want to try out\n    Next.js v13 with Turbopack, create the Next.js v13 playground app\n    by running the following commands:·\n      pnpm create next-app --example with-turbopack with-turbopack-app\n      cd with-turbopack-app\n      pnpm run dev·········\n    Learn more about Next.js v13 and Turbopack: https://nextjs.link/with-turbopack\n    Please direct feedback to: https://nextjs.link/turbopack-feedback··\n    Warning: Unsupported config found; but continuing with custom Turbopack binary.·\n    Learn more about Next.js v13 and Turbopack: https://nextjs.link/with-turbopack\n    Please direct feedback to: https://nextjs.link/turbopack-feedback·\n    info  - Using locally built binary of @next/swc\n    Loading custom turbopack binary from /work/next-dev\n    Running turbopack with args: [--dev /tmp/next-install-68f42a22697ff036fa5d711bfe3934762ada58572ff54910949ddc7830c35337 --is-next-dev-command --root /tmp/next-install-68f42a22697ff036fa5d711bfe3934762ada58572ff54910949ddc7830c35337 --no-open]\n    \u001b[32mready\u001b[39m - started server on 0.0.0.0:33883, url: http://localhost:33883\n    \u001b[35mevent\u001b[39m - initial compilation 7.469ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 2434ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 148ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 906ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 1013ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 2004ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 1045ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 494ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 580ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 686ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 405ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 213ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 617ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 676ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 674ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 151ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 110ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 122ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 609ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 1135ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 482ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 52ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 269ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 534ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 94ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 0.811ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 1659ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 119ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 1462ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 794ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 431ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 243ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 507ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 1.027ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 572ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 429ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 54ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 478ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 1.081ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 72ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 471ms\n    \"\n\n      844 |     if (!(global as any).isNextDeploy) {\n      845 |       it('should show a message to leave feedback for `appDir`', async () => {\n    > 846 |         expect(next.cliOutput).toContain(\n          |                                ^\n      847 |           `Thank you for testing \\`appDir\\` please leave your feedback at https://nextjs.link/app-feedback`\n      848 |         )\n      849 |       })\n\n      at Object.<anonymous> (e2e/app-dir/app-static/app-static.test.ts:846:32)\n",
            "name": "/work/test/e2e/app-dir/app-static/app-static.test.ts",
            "startTime": 1675968298696,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (16, 2)",
      "name": "test/integration/i18n-support-fallback-rewrite-legacy/test/index.test.js",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 2,
        "numPassedTestSuites": 0,
        "numPassedTests": 2,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 4,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1675968547698,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "i18n Support",
                  "dev mode"
                ],
                "failureMessages": [
                  "Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Object {\n-   \"asPath\": \"/\",\n+   \"asPath\": \"/en\",\n    \"index\": true,\n    \"pathname\": \"/\",\n    \"query\": Object {},\n  }\n    at Object.<anonymous> (/work/test/integration/i18n-support-fallback-rewrite-legacy/test/index.test.js:34:72)"
                ],
                "fullName": "i18n Support dev mode should not rewrite for index page",
                "location": null,
                "status": "failed",
                "title": "should not rewrite for index page"
              },
              {
                "ancestorTitles": [
                  "i18n Support",
                  "dev mode"
                ],
                "failureMessages": [
                  "Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n@@ -1,7 +1,7 @@\n  Object {\n-   \"asPath\": \"/dynamic/first\",\n+   \"asPath\": \"/dynamic/[slug]\",\n    \"dynamic\": true,\n    \"pathname\": \"/dynamic/[slug]\",\n    \"query\": Object {\n      \"slug\": \"first\",\n    },\n    at Object.<anonymous> (/work/test/integration/i18n-support-fallback-rewrite-legacy/test/index.test.js:63:72)"
                ],
                "fullName": "i18n Support dev mode should not rewrite for dynamic page",
                "location": null,
                "status": "failed",
                "title": "should not rewrite for dynamic page"
              },
              {
                "ancestorTitles": [
                  "i18n Support",
                  "production mode"
                ],
                "failureMessages": [],
                "fullName": "i18n Support production mode should not rewrite for index page",
                "location": null,
                "status": "passed",
                "title": "should not rewrite for index page"
              },
              {
                "ancestorTitles": [
                  "i18n Support",
                  "production mode"
                ],
                "failureMessages": [],
                "fullName": "i18n Support production mode should not rewrite for dynamic page",
                "location": null,
                "status": "passed",
                "title": "should not rewrite for dynamic page"
              }
            ],
            "endTime": 1675968619199,
            "message": "  ● i18n Support › dev mode › should not rewrite for index page\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Object {\n    -   \"asPath\": \"/\",\n    +   \"asPath\": \"/en\",\n        \"index\": true,\n        \"pathname\": \"/\",\n        \"query\": Object {},\n      }\n\n      32 |       const browser = await webdriver(appPort, asPath)\n      33 |\n    > 34 |       expect(JSON.parse(await browser.elementByCss('#router').text())).toEqual({\n         |                                                                        ^\n      35 |         index: true,\n      36 |         pathname: '/',\n      37 |         asPath: url.format({ pathname: '/', query }),\n\n      at Object.<anonymous> (integration/i18n-support-fallback-rewrite-legacy/test/index.test.js:34:72)\n\n  ● i18n Support › dev mode › should not rewrite for dynamic page\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n    @@ -1,7 +1,7 @@\n      Object {\n    -   \"asPath\": \"/dynamic/first\",\n    +   \"asPath\": \"/dynamic/[slug]\",\n        \"dynamic\": true,\n        \"pathname\": \"/dynamic/[slug]\",\n        \"query\": Object {\n          \"slug\": \"first\",\n        },\n\n      61 |       const browser = await webdriver(appPort, asPath)\n      62 |\n    > 63 |       expect(JSON.parse(await browser.elementByCss('#router').text())).toEqual({\n         |                                                                        ^\n      64 |         dynamic: true,\n      65 |         pathname: '/dynamic/[slug]',\n      66 |         asPath: url.format({ pathname: '/dynamic/first', query }),\n\n      at Object.<anonymous> (integration/i18n-support-fallback-rewrite-legacy/test/index.test.js:63:72)\n",
            "name": "/work/test/integration/i18n-support-fallback-rewrite-legacy/test/index.test.js",
            "startTime": 1675968547795,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 1)",
      "name": "test/development/acceptance-app/component-stack.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 1,
        "numPassedTestSuites": 0,
        "numPassedTests": 0,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 1,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1675968013490,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Component Stack in error overlay"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('[data-nextjs-toast]')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Component Stack in error overlay should show a component stack on hydration error",
                "location": null,
                "status": "failed",
                "title": "should show a component stack on hydration error"
              }
            ],
            "endTime": 1675968079156,
            "message": "  ● Component Stack in error overlay › should show a component stack on hydration error\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('[data-nextjs-toast]')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n",
            "name": "/work/test/development/acceptance-app/component-stack.test.ts",
            "startTime": 1675968013581,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 1)",
      "name": "test/e2e/middleware-custom-matchers/test/index.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 8,
        "numPassedTestSuites": 0,
        "numPassedTests": 2,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 10,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1675968212678,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [],
                "fullName": "Middleware custom matchers should match missing header correctly",
                "location": null,
                "status": "passed",
                "title": "should match missing header correctly"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [],
                "fullName": "Middleware custom matchers should match missing query correctly",
                "location": null,
                "status": "passed",
                "title": "should match missing query correctly"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at Object.<anonymous> (/work/test/e2e/middleware-custom-matchers/test/index.test.ts:48:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "Middleware custom matchers should match source path",
                "location": null,
                "status": "failed",
                "title": "should match source path"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at Object.<anonymous> (/work/test/e2e/middleware-custom-matchers/test/index.test.ts:58:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "Middleware custom matchers should match has header",
                "location": null,
                "status": "failed",
                "title": "should match has header"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at Object.<anonymous> (/work/test/e2e/middleware-custom-matchers/test/index.test.ts:69:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "Middleware custom matchers should match has query",
                "location": null,
                "status": "failed",
                "title": "should match has query"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at Object.<anonymous> (/work/test/e2e/middleware-custom-matchers/test/index.test.ts:82:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "Middleware custom matchers should match has cookie",
                "location": null,
                "status": "failed",
                "title": "should match has cookie"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at Object.<anonymous> (/work/test/e2e/middleware-custom-matchers/test/index.test.ts:104:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "Middleware custom matchers should match has host",
                "location": null,
                "status": "failed",
                "title": "should match has host"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 404\n    at Object.<anonymous> (/work/test/e2e/middleware-custom-matchers/test/index.test.ts:121:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "Middleware custom matchers should match has header value",
                "location": null,
                "status": "failed",
                "title": "should match has header value"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#from-middleware')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Middleware custom matchers should match has query on client routing",
                "location": null,
                "status": "failed",
                "title": "should match has query on client routing"
              },
              {
                "ancestorTitles": [
                  "Middleware custom matchers"
                ],
                "failureMessages": [
                  "page.waitForSelector: Timeout 30000ms exceeded.\n=========================== logs ===========================\nwaiting for locator('#from-middleware')\n============================================================\n    at /work/test/lib/browsers/playwright.ts:331:10"
                ],
                "fullName": "Middleware custom matchers should match has cookie on client routing",
                "location": null,
                "status": "failed",
                "title": "should match has cookie on client routing"
              }
            ],
            "endTime": 1675968319957,
            "message": "  ● Middleware custom matchers › should match source path\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      46 |     it('should match source path', async () => {\n      47 |       const res = await fetchViaHTTP(next.url, '/source-match')\n    > 48 |       expect(res.status).toBe(200)\n         |                          ^\n      49 |       expect(res.headers.get('x-from-middleware')).toBeDefined()\n      50 |     })\n      51 |\n\n      at Object.<anonymous> (e2e/middleware-custom-matchers/test/index.test.ts:48:26)\n\n  ● Middleware custom matchers › should match has header\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      56 |         },\n      57 |       })\n    > 58 |       expect(res.status).toBe(200)\n         |                          ^\n      59 |       expect(res.headers.get('x-from-middleware')).toBeDefined()\n      60 |\n      61 |       const res2 = await fetchViaHTTP(next.url, '/has-match-1')\n\n      at Object.<anonymous> (e2e/middleware-custom-matchers/test/index.test.ts:58:26)\n\n  ● Middleware custom matchers › should match has query\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      67 |         'my-query': 'hellooo',\n      68 |       })\n    > 69 |       expect(res.status).toBe(200)\n         |                          ^\n      70 |       expect(res.headers.get('x-from-middleware')).toBeDefined()\n      71 |\n      72 |       const res2 = await fetchViaHTTP(next.url, '/has-match-2')\n\n      at Object.<anonymous> (e2e/middleware-custom-matchers/test/index.test.ts:69:26)\n\n  ● Middleware custom matchers › should match has cookie\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      80 |         },\n      81 |       })\n    > 82 |       expect(res.status).toBe(200)\n         |                          ^\n      83 |       expect(res.headers.get('x-from-middleware')).toBeDefined()\n      84 |\n      85 |       const res2 = await fetchViaHTTP(next.url, '/has-match-3', undefined, {\n\n      at Object.<anonymous> (e2e/middleware-custom-matchers/test/index.test.ts:82:26)\n\n  ● Middleware custom matchers › should match has host\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      102 |       })\n      103 |\n    > 104 |       expect(res.status).toBe(200)\n          |                          ^\n      105 |       expect(res.headers.get('x-from-middleware')).toBeDefined()\n      106 |\n      107 |       const res2 = await fetchViaHTTP(next.url, '/has-match-4', undefined, {\n\n      at Object.<anonymous> (e2e/middleware-custom-matchers/test/index.test.ts:104:26)\n\n  ● Middleware custom matchers › should match has header value\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 404\n\n      119 |         },\n      120 |       })\n    > 121 |       expect(res.status).toBe(200)\n          |                          ^\n      122 |       expect(res.headers.get('x-from-middleware')).toBeDefined()\n      123 |\n      124 |       const res2 = await fetchViaHTTP(next.url, '/has-match-5', undefined, {\n\n      at Object.<anonymous> (e2e/middleware-custom-matchers/test/index.test.ts:121:26)\n\n  ● Middleware custom matchers › should match has query on client routing\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#from-middleware')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n\n  ● Middleware custom matchers › should match has cookie on client routing\n\n    page.waitForSelector: Timeout 30000ms exceeded.\n    =========================== logs ===========================\n    waiting for locator('#from-middleware')\n    ============================================================\n\n      329 |     return this.chain(() => {\n      330 |       return page\n    > 331 |         .waitForSelector(selector, { timeout, state: 'attached' })\n          |          ^\n      332 |         .then(async (el) => {\n      333 |           // it seems selenium waits longer and tests rely on this behavior\n      334 |           // so we wait for the load event fire before returning\n\n      at lib/browsers/playwright.ts:331:10\n",
            "name": "/work/test/e2e/middleware-custom-matchers/test/index.test.ts",
            "startTime": 1675968212774,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 1)",
      "name": "test/integration/invalid-multi-match/test/index.test.js",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 1,
        "numPassedTestSuites": 0,
        "numPassedTests": 1,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 2,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1675968457554,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Custom routes invalid multi-match",
                  "dev mode"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"To use a multi-match in the destination you must add\"\nReceived string:    \"Loading custom turbopack binary from /work/next-dev\nRunning turbopack with args: [--dev /work/test/integration/invalid-multi-match --is-next-dev-command --port 42601 --root /work --no-open]\n\"\n    at Object.<anonymous> (/work/test/integration/invalid-multi-match/test/index.test.js:21:20)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)"
                ],
                "fullName": "Custom routes invalid multi-match dev mode should show error for invalid mulit-match",
                "location": null,
                "status": "failed",
                "title": "should show error for invalid mulit-match"
              },
              {
                "ancestorTitles": [
                  "Custom routes invalid multi-match",
                  "production mode"
                ],
                "failureMessages": [],
                "fullName": "Custom routes invalid multi-match production mode should show error for invalid mulit-match",
                "location": null,
                "status": "passed",
                "title": "should show error for invalid mulit-match"
              }
            ],
            "endTime": 1675968468262,
            "message": "  ● Custom routes invalid multi-match › dev mode › should show error for invalid mulit-match\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"To use a multi-match in the destination you must add\"\n    Received string:    \"Loading custom turbopack binary from /work/next-dev\n    Running turbopack with args: [--dev /work/test/integration/invalid-multi-match --is-next-dev-command --port 42601 --root /work --no-open]\n    \"\n\n      19 |   it('should show error for invalid mulit-match', async () => {\n      20 |     await renderViaHTTP(appPort, '/random')\n    > 21 |     expect(stderr).toContain(\n         |                    ^\n      22 |       'To use a multi-match in the destination you must add'\n      23 |     )\n      24 |     expect(stderr).toContain(\n\n      at Object.<anonymous> (integration/invalid-multi-match/test/index.test.js:21:20)\n",
            "name": "/work/test/integration/invalid-multi-match/test/index.test.js",
            "startTime": 1675968457645,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 2)",
      "name": "test/development/acceptance-app/editor-links.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 3,
        "numPassedTestSuites": 0,
        "numPassedTests": 0,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 3,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1675968125220,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "Error overlay - editor links"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/work/test/development/acceptance-app/editor-links.test.ts:59:45)"
                ],
                "fullName": "Error overlay - editor links should be possible to open files on RSC build error",
                "location": null,
                "status": "failed",
                "title": "should be possible to open files on RSC build error"
              },
              {
                "ancestorTitles": [
                  "Error overlay - editor links"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (/work/test/development/acceptance-app/editor-links.test.ts:100:45)"
                ],
                "fullName": "Error overlay - editor links should be possible to open files on RSC parse error",
                "location": null,
                "status": "failed",
                "title": "should be possible to open files on RSC parse error"
              },
              {
                "ancestorTitles": [
                  "Error overlay - editor links"
                ],
                "failureMessages": [
                  "Error: Application is in inconsistent state: timeout.\n    at Object.patch (/work/test/development/acceptance-app/helpers.ts:78:19)\n    at Object.<anonymous> (/work/test/development/acceptance-app/editor-links.test.ts:135:7)"
                ],
                "fullName": "Error overlay - editor links should be possible to open files on module not found error",
                "location": null,
                "status": "failed",
                "title": "should be possible to open files on module not found error"
              }
            ],
            "endTime": 1675968282857,
            "message": "  ● Error overlay - editor links › should be possible to open files on RSC build error\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      57 |       )\n      58 |\n    > 59 |       expect(await session.hasRedbox(true)).toBe(true)\n         |                                             ^\n      60 |       await clickEditorLinks(browser)\n      61 |       await check(() => editorRequestsCount, /2/)\n      62 |\n\n      at Object.<anonymous> (development/acceptance-app/editor-links.test.ts:59:45)\n\n  ● Error overlay - editor links › should be possible to open files on RSC parse error\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n       98 |       )\n       99 |\n    > 100 |       expect(await session.hasRedbox(true)).toBe(true)\n          |                                             ^\n      101 |       await clickEditorLinks(browser)\n      102 |       await check(() => editorRequestsCount, /4/)\n      103 |\n\n      at Object.<anonymous> (development/acceptance-app/editor-links.test.ts:100:45)\n\n  ● Error overlay - editor links › should be possible to open files on module not found error\n\n    Application is in inconsistent state: timeout.\n\n      76 |           }\n      77 |           if (status !== 'pending') {\n    > 78 |             throw new Error(`Application is in inconsistent state: ${status}.`)\n         |                   ^\n      79 |           }\n      80 |\n      81 |           await new Promise((resolve) => setTimeout(resolve, 30))\n\n      at Object.patch (development/acceptance-app/helpers.ts:78:19)\n      at Object.<anonymous> (development/acceptance-app/editor-links.test.ts:135:7)\n",
            "name": "/work/test/development/acceptance-app/editor-links.test.ts",
            "startTime": 1675968125312,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 2)",
      "name": "test/e2e/app-dir/app-alias/app-alias.test.ts",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 5,
        "numPassedTestSuites": 0,
        "numPassedTests": 14,
        "numPendingTestSuites": 0,
        "numPendingTests": 5,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 24,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1675968306787,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should bypass fetch cache with cache-control: no-cache",
                "location": null,
                "status": "passed",
                "title": "should bypass fetch cache with cache-control: no-cache"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should honor fetch cache correctly",
                "location": null,
                "status": "passed",
                "title": "should honor fetch cache correctly"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling Should not throw Dynamic Server Usage error when using generateStaticParams with previewData",
                "location": null,
                "status": "passed",
                "title": "Should not throw Dynamic Server Usage error when using generateStaticParams with previewData"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should force SSR correctly for headers usage",
                "location": null,
                "status": "passed",
                "title": "should force SSR correctly for headers usage"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should honor dynamic = \"force-static\" correctly",
                "location": null,
                "status": "passed",
                "title": "should honor dynamic = \"force-static\" correctly"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should honor dynamic = \"force-static\" correctly (lazy)",
                "location": null,
                "status": "passed",
                "title": "should honor dynamic = \"force-static\" correctly (lazy)"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 404\nReceived: 200\n    at Object.<anonymous> (/work/test/e2e/app-dir/app-static/app-static.test.ts:510:35)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "app-dir static/dynamic handling should handle dynamicParams: false correctly",
                "location": null,
                "status": "failed",
                "title": "should handle dynamicParams: false correctly"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should work with forced dynamic path",
                "location": null,
                "status": "passed",
                "title": "should work with forced dynamic path"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should work with dynamic path no generateStaticParams",
                "location": null,
                "status": "passed",
                "title": "should work with dynamic path no generateStaticParams"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should handle dynamicParams: true correctly",
                "location": null,
                "status": "passed",
                "title": "should handle dynamicParams: true correctly"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should navigate to static path correctly",
                "location": null,
                "status": "passed",
                "title": "should navigate to static path correctly"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [
                  "Error: expect(received).not.toBe(expected) // Object.is equality\n\nExpected: not \"1675968363998\"\n    at Object.<anonymous> (/work/test/e2e/app-dir/app-static/app-static.test.ts:630:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "app-dir static/dynamic handling should ssr dynamically when detected automatically with fetch cache option",
                "location": null,
                "status": "failed",
                "title": "should ssr dynamically when detected automatically with fetch cache option"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [
                  "Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 404\nReceived: 200\n    at Object.<anonymous> (/work/test/e2e/app-dir/app-static/app-static.test.ts:637:26)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "app-dir static/dynamic handling should render not found pages correctly and fallback to the default one",
                "location": null,
                "status": "failed",
                "title": "should render not found pages correctly and fallback to the default one"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should ssr dynamically when detected automatically with fetch revalidate option",
                "location": null,
                "status": "pending",
                "title": "should ssr dynamically when detected automatically with fetch revalidate option"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [
                  "Error: expect(received).not.toBe(expected) // Object.is equality\n\nExpected: not \"1675968364649\"\n    at Object.<anonymous> (/work/test/e2e/app-dir/app-static/app-static.test.ts:697:30)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"
                ],
                "fullName": "app-dir static/dynamic handling should ssr dynamically when forced via config",
                "location": null,
                "status": "failed",
                "title": "should ssr dynamically when forced via config"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling",
                  "useSearchParams",
                  "client"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling useSearchParams client should bailout to client rendering - without suspense boundary",
                "location": null,
                "status": "passed",
                "title": "should bailout to client rendering - without suspense boundary"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling",
                  "useSearchParams",
                  "client"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling useSearchParams client should bailout to client rendering - with suspense boundary",
                "location": null,
                "status": "passed",
                "title": "should bailout to client rendering - with suspense boundary"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling",
                  "useSearchParams",
                  "client"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling useSearchParams client should have empty search params on force-static",
                "location": null,
                "status": "pending",
                "title": "should have empty search params on force-static"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling",
                  "useSearchParams",
                  "client"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling useSearchParams client should have values from canonical url on rewrite",
                "location": null,
                "status": "passed",
                "title": "should have values from canonical url on rewrite"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling",
                  "usePathname"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling usePathname should bail out to client rendering during SSG",
                "location": null,
                "status": "pending",
                "title": "should bail out to client rendering during SSG"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling",
                  "usePathname"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling usePathname should have the correct values",
                "location": null,
                "status": "pending",
                "title": "should have the correct values"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling",
                  "usePathname"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling usePathname should have values from canonical url on rewrite",
                "location": null,
                "status": "pending",
                "title": "should have values from canonical url on rewrite"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [
                  "Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Thank you for testing `appDir` please leave your feedback at https://nextjs.link/app-feedback\"\nReceived string:    \"yarn run v1.22.19\n$ /tmp/next-install-d9b30adfe5ef5c480d9d7f60d9254ea4637f21aac86c10060e56c8bc079a2c37/node_modules/.bin/next --turbo\n>>> TURBOPACK (alpha)·\nThank you for trying Next.js v13 with Turbopack! As a reminder,\nTurbopack is currently in alpha and not yet ready for production.\nWe appreciate your ongoing support as we work to make it ready\nfor everyone.·\nError: You are using configuration and/or tools that are not yet\nsupported by Next.js v13 with Turbopack:··\n- Unsupported Next.js configuration option(s) (next.config.js)\n  The only configurations options supported are:\n    - configFileName\n    - env\n    - experimental.appDir\n    - experimental.serverComponentsExternalPackages\n    - experimental.turbo\n    - images\n    - pageExtensions\n    - onDemandEntries\n    - rewrites\n    - redirects\n    - headers\n    - reactStrictMode\n    - swcMinify\n    - transpilePackages\n  To use Turbopack, remove other configuration options.····\nIf you cannot make the changes above, but still want to try out\nNext.js v13 with Turbopack, create the Next.js v13 playground app\nby running the following commands:·\n  pnpm create next-app --example with-turbopack with-turbopack-app\n  cd with-turbopack-app\n  pnpm run dev·········\nLearn more about Next.js v13 and Turbopack: https://nextjs.link/with-turbopack\nPlease direct feedback to: https://nextjs.link/turbopack-feedback··\nWarning: Unsupported config found; but continuing with custom Turbopack binary.·\nLearn more about Next.js v13 and Turbopack: https://nextjs.link/with-turbopack\nPlease direct feedback to: https://nextjs.link/turbopack-feedback·\ninfo  - Using locally built binary of @next/swc\nLoading custom turbopack binary from /work/next-dev\nRunning turbopack with args: [--dev /tmp/next-install-d9b30adfe5ef5c480d9d7f60d9254ea4637f21aac86c10060e56c8bc079a2c37 --is-next-dev-command --root /tmp/next-install-d9b30adfe5ef5c480d9d7f60d9254ea4637f21aac86c10060e56c8bc079a2c37 --no-open]\n\u001b[32mready\u001b[39m - started server on 0.0.0.0:35731, url: http://localhost:35731\n\u001b[35mevent\u001b[39m - initial compilation 4.947ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 2348ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 182ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 908ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 3026ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 1005ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 479ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 537ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 702ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 112ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 119ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 565ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 642ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 644ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 147ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 106ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 103ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 595ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 1128ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 530ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 52ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 254ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 426ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 102ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 95ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 0.938ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 1658ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 115ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 530ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 526ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 436ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 0.086ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 240ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 850ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 1.08ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 607ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 367ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 56ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 479ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 70ms\n\u001b[2K\u001b[35mevent\u001b[39m - updated in 479ms\n\"\n    at Object.<anonymous> (/work/test/e2e/app-dir/app-static/app-static.test.ts:846:32)\n    at Promise.then.completed (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/utils.js:391:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/utils.js:316:10)\n    at _callCircusTest (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/run.js:218:40)\n    at _runTest (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/run.js:155:3)\n    at _runTestsForDescribeBlock (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/run.js:66:9)\n    at _runTestsForDescribeBlock (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/run.js:60:9)\n    at run (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/run.js:25:3)\n    at runAndTransformResultsToJestFormat (/work/node_modules/.pnpm/jest-circus@27.5.1/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)"
                ],
                "fullName": "app-dir static/dynamic handling should show a message to leave feedback for `appDir`",
                "location": null,
                "status": "failed",
                "title": "should show a message to leave feedback for `appDir`"
              },
              {
                "ancestorTitles": [
                  "app-dir static/dynamic handling"
                ],
                "failureMessages": [],
                "fullName": "app-dir static/dynamic handling should keep querystring on static page",
                "location": null,
                "status": "passed",
                "title": "should keep querystring on static page"
              }
            ],
            "endTime": 1675968410928,
            "message": "  ● app-dir static/dynamic handling › should handle dynamicParams: false correctly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 404\n    Received: 200\n\n      508 |           redirect: 'manual',\n      509 |         })\n    > 510 |         expect(invalidRes.status).toBe(404)\n          |                                   ^\n      511 |         expect(await invalidRes.text()).toContain('page could not be found')\n      512 |       }\n      513 |     })\n\n      at Object.<anonymous> (e2e/app-dir/app-static/app-static.test.ts:510:35)\n\n  ● app-dir static/dynamic handling › should ssr dynamically when detected automatically with fetch cache option\n\n    expect(received).not.toBe(expected) // Object.is equality\n\n    Expected: not \"1675968363998\"\n\n      628 |\n      629 |       expect(secondHtml).toContain('Example Domain')\n    > 630 |       expect(secondDate).not.toBe(initialDate)\n          |                              ^\n      631 |     })\n      632 |\n      633 |     it('should render not found pages correctly and fallback to the default one', async () => {\n\n      at Object.<anonymous> (e2e/app-dir/app-static/app-static.test.ts:630:30)\n\n  ● app-dir static/dynamic handling › should render not found pages correctly and fallback to the default one\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 404\n    Received: 200\n\n      635 |         redirect: 'manual',\n      636 |       })\n    > 637 |       expect(res.status).toBe(404)\n          |                          ^\n      638 |       const html = await res.text()\n      639 |       expect(html).toInclude('\"noindex\"')\n      640 |       expect(html).toInclude('This page could not be found.')\n\n      at Object.<anonymous> (e2e/app-dir/app-static/app-static.test.ts:637:26)\n\n  ● app-dir static/dynamic handling › should ssr dynamically when forced via config\n\n    expect(received).not.toBe(expected) // Object.is equality\n\n    Expected: not \"1675968364649\"\n\n      695 |       const secondDate = second$('#date').text()\n      696 |\n    > 697 |       expect(secondDate).not.toBe(initialDate)\n          |                              ^\n      698 |     })\n      699 |\n      700 |     describe('useSearchParams', () => {\n\n      at Object.<anonymous> (e2e/app-dir/app-static/app-static.test.ts:697:30)\n\n  ● app-dir static/dynamic handling › should show a message to leave feedback for `appDir`\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Thank you for testing `appDir` please leave your feedback at https://nextjs.link/app-feedback\"\n    Received string:    \"yarn run v1.22.19\n    $ /tmp/next-install-d9b30adfe5ef5c480d9d7f60d9254ea4637f21aac86c10060e56c8bc079a2c37/node_modules/.bin/next --turbo\n    >>> TURBOPACK (alpha)·\n    Thank you for trying Next.js v13 with Turbopack! As a reminder,\n    Turbopack is currently in alpha and not yet ready for production.\n    We appreciate your ongoing support as we work to make it ready\n    for everyone.·\n    Error: You are using configuration and/or tools that are not yet\n    supported by Next.js v13 with Turbopack:··\n    - Unsupported Next.js configuration option(s) (next.config.js)\n      The only configurations options supported are:\n        - configFileName\n        - env\n        - experimental.appDir\n        - experimental.serverComponentsExternalPackages\n        - experimental.turbo\n        - images\n        - pageExtensions\n        - onDemandEntries\n        - rewrites\n        - redirects\n        - headers\n        - reactStrictMode\n        - swcMinify\n        - transpilePackages\n      To use Turbopack, remove other configuration options.····\n    If you cannot make the changes above, but still want to try out\n    Next.js v13 with Turbopack, create the Next.js v13 playground app\n    by running the following commands:·\n      pnpm create next-app --example with-turbopack with-turbopack-app\n      cd with-turbopack-app\n      pnpm run dev·········\n    Learn more about Next.js v13 and Turbopack: https://nextjs.link/with-turbopack\n    Please direct feedback to: https://nextjs.link/turbopack-feedback··\n    Warning: Unsupported config found; but continuing with custom Turbopack binary.·\n    Learn more about Next.js v13 and Turbopack: https://nextjs.link/with-turbopack\n    Please direct feedback to: https://nextjs.link/turbopack-feedback·\n    info  - Using locally built binary of @next/swc\n    Loading custom turbopack binary from /work/next-dev\n    Running turbopack with args: [--dev /tmp/next-install-d9b30adfe5ef5c480d9d7f60d9254ea4637f21aac86c10060e56c8bc079a2c37 --is-next-dev-command --root /tmp/next-install-d9b30adfe5ef5c480d9d7f60d9254ea4637f21aac86c10060e56c8bc079a2c37 --no-open]\n    \u001b[32mready\u001b[39m - started server on 0.0.0.0:35731, url: http://localhost:35731\n    \u001b[35mevent\u001b[39m - initial compilation 4.947ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 2348ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 182ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 908ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 3026ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 1005ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 479ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 537ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 702ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 112ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 119ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 565ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 642ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 644ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 147ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 106ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 103ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 595ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 1128ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 530ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 52ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 254ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 426ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 102ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 95ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 0.938ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 1658ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 115ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 530ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 526ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 436ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 0.086ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 240ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 850ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 1.08ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 607ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 367ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 56ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 479ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 70ms\n    \u001b[2K\u001b[35mevent\u001b[39m - updated in 479ms\n    \"\n\n      844 |     if (!(global as any).isNextDeploy) {\n      845 |       it('should show a message to leave feedback for `appDir`', async () => {\n    > 846 |         expect(next.cliOutput).toContain(\n          |                                ^\n      847 |           `Thank you for testing \\`appDir\\` please leave your feedback at https://nextjs.link/app-feedback`\n      848 |         )\n      849 |       })\n\n      at Object.<anonymous> (e2e/app-dir/app-static/app-static.test.ts:846:32)\n",
            "name": "/work/test/e2e/app-dir/app-static/app-static.test.ts",
            "startTime": 1675968306881,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    },
    {
      "job": "Execute Next.js integration workflow / Next.js integration test (18, 2)",
      "name": "test/integration/i18n-support-fallback-rewrite-legacy/test/index.test.js",
      "data": {
        "numFailedTestSuites": 1,
        "numFailedTests": 2,
        "numPassedTestSuites": 0,
        "numPassedTests": 2,
        "numPendingTestSuites": 0,
        "numPendingTests": 0,
        "numRuntimeErrorTestSuites": 0,
        "numTodoTests": 0,
        "numTotalTestSuites": 1,
        "numTotalTests": 4,
        "openHandles": [],
        "snapshot": {
          "added": 0,
          "didUpdate": false,
          "failure": false,
          "filesAdded": 0,
          "filesRemoved": 0,
          "filesRemovedList": [],
          "filesUnmatched": 0,
          "filesUpdated": 0,
          "matched": 0,
          "total": 0,
          "unchecked": 0,
          "uncheckedKeysByFile": [],
          "unmatched": 0,
          "updated": 0
        },
        "startTime": 1675968552811,
        "success": false,
        "testResults": [
          {
            "assertionResults": [
              {
                "ancestorTitles": [
                  "i18n Support",
                  "dev mode"
                ],
                "failureMessages": [
                  "Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n  Object {\n-   \"asPath\": \"/\",\n+   \"asPath\": \"/en\",\n    \"index\": true,\n    \"pathname\": \"/\",\n    \"query\": Object {},\n  }\n    at Object.<anonymous> (/work/test/integration/i18n-support-fallback-rewrite-legacy/test/index.test.js:34:72)"
                ],
                "fullName": "i18n Support dev mode should not rewrite for index page",
                "location": null,
                "status": "failed",
                "title": "should not rewrite for index page"
              },
              {
                "ancestorTitles": [
                  "i18n Support",
                  "dev mode"
                ],
                "failureMessages": [
                  "Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 1\n+ Received  + 1\n\n@@ -1,7 +1,7 @@\n  Object {\n-   \"asPath\": \"/dynamic/first\",\n+   \"asPath\": \"/dynamic/[slug]\",\n    \"dynamic\": true,\n    \"pathname\": \"/dynamic/[slug]\",\n    \"query\": Object {\n      \"slug\": \"first\",\n    },\n    at Object.<anonymous> (/work/test/integration/i18n-support-fallback-rewrite-legacy/test/index.test.js:63:72)"
                ],
                "fullName": "i18n Support dev mode should not rewrite for dynamic page",
                "location": null,
                "status": "failed",
                "title": "should not rewrite for dynamic page"
              },
              {
                "ancestorTitles": [
                  "i18n Support",
                  "production mode"
                ],
                "failureMessages": [],
                "fullName": "i18n Support production mode should not rewrite for index page",
                "location": null,
                "status": "passed",
                "title": "should not rewrite for index page"
              },
              {
                "ancestorTitles": [
                  "i18n Support",
                  "production mode"
                ],
                "failureMessages": [],
                "fullName": "i18n Support production mode should not rewrite for dynamic page",
                "location": null,
                "status": "passed",
                "title": "should not rewrite for dynamic page"
              }
            ],
            "endTime": 1675968623211,
            "message": "  ● i18n Support › dev mode › should not rewrite for index page\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n      Object {\n    -   \"asPath\": \"/\",\n    +   \"asPath\": \"/en\",\n        \"index\": true,\n        \"pathname\": \"/\",\n        \"query\": Object {},\n      }\n\n      32 |       const browser = await webdriver(appPort, asPath)\n      33 |\n    > 34 |       expect(JSON.parse(await browser.elementByCss('#router').text())).toEqual({\n         |                                                                        ^\n      35 |         index: true,\n      36 |         pathname: '/',\n      37 |         asPath: url.format({ pathname: '/', query }),\n\n      at Object.<anonymous> (integration/i18n-support-fallback-rewrite-legacy/test/index.test.js:34:72)\n\n  ● i18n Support › dev mode › should not rewrite for dynamic page\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 1\n    + Received  + 1\n\n    @@ -1,7 +1,7 @@\n      Object {\n    -   \"asPath\": \"/dynamic/first\",\n    +   \"asPath\": \"/dynamic/[slug]\",\n        \"dynamic\": true,\n        \"pathname\": \"/dynamic/[slug]\",\n        \"query\": Object {\n          \"slug\": \"first\",\n        },\n\n      61 |       const browser = await webdriver(appPort, asPath)\n      62 |\n    > 63 |       expect(JSON.parse(await browser.elementByCss('#router').text())).toEqual({\n         |                                                                        ^\n      64 |         dynamic: true,\n      65 |         pathname: '/dynamic/[slug]',\n      66 |         asPath: url.format({ pathname: '/dynamic/first', query }),\n\n      at Object.<anonymous> (integration/i18n-support-fallback-rewrite-legacy/test/index.test.js:63:72)\n",
            "name": "/work/test/integration/i18n-support-fallback-rewrite-legacy/test/index.test.js",
            "startTime": 1675968552905,
            "status": "failed",
            "summary": ""
          }
        ],
        "wasInterrupted": false
      }
    }
  ]
}